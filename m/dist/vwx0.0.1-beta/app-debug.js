define("pai/vwx0.0.1-beta/app-debug", [ "$-debug", "./frame/page_control-debug", "utility/backbone/1.1.2/backbone-debug", "./frame/ua-debug", "./frame/page-debug", "utility/zepto/modules/data/1.1.4/data-debug", "utility/hammer/plugins/jquery.hammer/1.1.3/jquery.hammer-debug", "utility/underscore/1.6.0/underscore-debug", "./common/utility-debug", "./common/cross_domain_storage-debug", "matcha/cookie/1.0.0/cookie-debug", "./mine/model-debug", "./common/global_config-debug", "./common/system-debug", "./common/I_APP-debug", "./ui/m_alert/view-debug", "./common/view-debug", "utility/handlebars/1.3.0/runtime-debug", "./ui/m_alert/tpl/m_alert-debug.handlebars", "./common/I_WX-debug", "./model_date/hot/index-debug", "./model_date/hot/view-debug", "./common/scroll-debug", "utility/iscroll/4.2.5/iscroll-debug", "./common/img-ready-debug", "./widget/footer/index-debug", "./common/template-helpers-debug", "./widget/footer/tpl/footer-debug.handlebars", "./widget/abnormal/view-debug", "./widget/abnormal/tpl/main-debug.handlebars", "./ui/select_drop/view-debug", "./ui/select_drop/tpl/select_drop-debug.handlebars", "./ui/m_select/view-debug", "./common/new_iscroll-debug", "./base/ua-debug", "./ui/m_select/tpl/m_select-debug.handlebars", "./ui/m_select/tpl/m_options-debug.handlebars", "./widget/pull_down/view-debug", "./widget/pull_down/tpl/pull_down-debug.handlebars", "./model_date/hot/tpl/main-debug.handlebars", "./model_date/hot/tpl/item-debug.handlebars", "./model_date/hot/tpl/line-debug.handlebars", "./model_date/hot/collection-debug", "./common/collection-debug", "./ui/guide/view-debug", "./ui/guide/tpl/guide-debug.handlebars", "./ui/guide/tpl/guide_hot-debug.handlebars", "./model_date/hot/model-debug", "./model_date/search/index-debug", "./model_date/search/collection-debug", "./model_date/search/view-debug", "./model_date/search/tpl/main-debug.handlebars", "./model_date/search/tpl/item-debug.handlebars", "./model_date/search/tpl/search_history-debug.handlebars", "./model_date/search_result/index-debug", "./model_date/search_result/collection-debug", "./model_date/search_result/view-debug", "./model_date/search_result/tpl/main-debug.handlebars", "./model_date/search_result/tpl/item-debug.handlebars", "./model_date/model_card/index-debug", "./model_date/model_card/view-debug", "./model_date/model_card/tpl/main-debug.handlebars", "./model_date/model_card/tpl/items-debug.handlebars", "./model_date/model_card/tpl/starts-debug.handlebars", "./widget/slide_v2/tpl/slide-debug.handlebars", "./widget/model_pic/view-debug", "./widget/model_pic/tpl/item-debug.handlebars", "./ui/mine-popup/index-debug", "./ui/popup/index-debug", "./ui/popup/popup-debug.handlebars", "./ui/mine-popup/mine-popup-debug.handlebars", "./ui/dialog/index-debug", "./ui/dialog/dialog-debug.handlebars", "./model_date/model_card/model-debug", "./model_date/model_style/index-debug", "./model_date/model_style/view-debug", "./model_date/model_style/tpl/main-debug.handlebars", "./model_date/model_style/choosen_view-debug", "./model_date/model_style/tpl/choosen-debug.handlebars", "./model_date/submit_application/index-debug", "./model_date/submit_application/view-debug", "./model_date/submit_application/tpl/main-debug.handlebars", "./widget/choosen_group/view-debug", "./widget/choosen_group/tpl/choosen_group-debug.handlebars", "./widget/number_btn/view-debug", "./widget/number_btn/tpl/number_btn-debug.handlebars", "./widget/select/view-debug", "./widget/select/tpl/select-debug.handlebars", "./widget/select/tpl/options-debug.handlebars", "./model_date/submit_application/model-debug", "./model_date/agreement/view-debug", "./model_date/agreement/tpl/main-debug.handlebars", "./model_date/payment/index-debug", "./model_date/payment/view-debug", "./model_date/payment/tpl/main-debug.handlebars", "./widget/pay_item/view-debug", "./widget/pay_item/tpl/items-debug.handlebars", "./widget/pay_item/model-debug", "./model_date/payment/model-debug", "./model_date/submit_success/index-debug", "./model_date/submit_success/view-debug", "./model_date/submit_success/tpl/main-debug.handlebars", "./model_date/submit_success/model-debug", "./model_date/complete_application/index-debug", "./model_date/complete_application/view-debug", "./model_date/complete_application/tpl/main-debug.handlebars", "./model_date/complete_application/tpl/info-debug.handlebars", "./mine/index-debug", "./mine/view-debug", "./mine/tpl/main-debug.handlebars", "./mine/zone/index-debug", "./mine/zone/cameraman_view-debug", "./mine/zone/tpl/main-debug.handlebars", "./mine/zone/tpl/info-debug.handlebars", "./mine/zone/model_view-debug", "./mine/zone/tpl/model_main-debug.handlebars", "./mine/zone/tpl/model_info-debug.handlebars", "./mine/consider/index-debug", "./mine/consider/view-debug", "./mine/consider/tpl/main-debug.handlebars", "./mine/consider/contain_view-debug", "./mine/consider/tpl/contain_view-debug.handlebars", "./mine/consider/tpl/invite-debug.handlebars", "./widget/load_more/view-debug", "./widget/load_more/tpl/load_more-debug.handlebars", "./mine/consider/model-debug", "./act/security/tpl/big_qr_code-debug.handlebars", "./mine/consider_details_camera/index-debug", "./mine/consider_details_camera/view-debug", "./mine/consider_details_camera/tpl/main-debug.handlebars", "./mine/consider_details_camera/tpl/items-debug.handlebars", "./mine/consider_details_camera/tpl/footer-debug.handlebars", "./act/security/index-debug", "./act/security/view-debug", "./act/security/tpl/main-debug.handlebars", "./act/security/tpl/item-debug.handlebars", "./act/security/collection-debug", "./account/login/index-debug", "./account/login/view-debug", "./account/login/tpl/main-debug.handlebars", "./mine/money/bill/index-debug", "./mine/money/bill/view-debug", "./mine/money/bill/tpl/main-debug.handlebars", "./mine/money/bill/tpl/bill-list-debug.handlebars", "./mine/money/bill/model-debug", "./account/setup/bind/enter_phone/index-debug", "./account/setup/bind/enter_phone/view-debug", "./account/setup/bind/enter_phone/tpl/main-debug.handlebars", "./account/setup/bind/enter_phone/model-debug", "./account/setup/bind/enter_pw/index-debug", "./account/setup/bind/enter_pw/view-debug", "./account/setup/bind/enter_pw/tpl/main-debug.handlebars", "./account/setup/bind/enter_pw/model-debug", "./account/register/login_phone/index-debug", "./account/register/login_phone/view-debug", "./account/register/login_phone/tpl/main-debug.handlebars", "./account/register/login_phone/model-debug", "./account/register/login_pw/index-debug", "./account/register/login_pw/view-debug", "./account/register/login_pw/tpl/main-debug.handlebars", "./comment/index-debug", "./comment/view-debug", "./comment/tpl/main-debug.handlebars", "./comment/tpl/cameraman-debug.handlebars", "./comment/tpl/event-debug.handlebars", "./comment/tpl/model-debug.handlebars", "./comment/list/index-debug", "./comment/list/view-debug", "./comment/list/tpl/main-debug.handlebars", "./comment/list/tpl/item-debug.handlebars", "./comment/list/collection-debug", "./comment/list/model-debug", "./rank/index-debug", "./rank/view-debug", "./rank/tpl/main-debug.handlebars", "./rank/tpl/one-two-three-debug.handlebars", "./rank/tpl/more-debug.handlebars", "./rank/model-debug", "./model_date/agreement/index-debug", "./topic/info/index-debug", "./topic/info/view-debug", "./topic/tpl/info-debug.handlebars", "./topic/tpl/main_info-debug.handlebars", "./topic/model-debug", "./report/index-debug", "./report/view-debug", "./report/tpl/main-debug.handlebars", "./report/tpl/item-debug.handlebars", "./report/model-debug", "./account/fans_follows/index-debug", "./account/fans_follows/view-debug", "./account/fans_follows/tpl/main-debug.handlebars", "./account/fans_follows/collection-debug", "./account/fans_follows/model-debug", "./account/register/reg/index-debug", "./account/register/reg/view-debug", "./account/register/reg/tpl/main-debug.handlebars", "./mine/date_cancel_reason/index-debug", "./mine/date_cancel_reason/view-debug", "./mine/date_cancel_reason/tpl/main-debug.handlebars", "./topic/index-debug", "./topic/list/view-debug", "./topic/tpl/list-debug.handlebars", "./topic/tpl/main-debug.handlebars", "./topic/collection-debug", "./account/login_tips/index-debug", "./account/login_tips/view-debug", "./account/login_tips/tpl/main-debug.handlebars", "./account/login_tips/model-debug" ], function(require, exports, module) {
    console.log("App 启动");
    // 引用基本模块
    var $ = require("$-debug");
    var page_control = require("./frame/page_control-debug");
    var ua = require("./frame/ua-debug");
    var utility = require("./common/utility-debug");
    var cookie = require("matcha/cookie/1.0.0/cookie-debug");
    var mine = require("./mine/model-debug");
    var global_config = require("./common/global_config-debug");
    var system = require("./common/system-debug");
    var m_alert = require("./ui/m_alert/view-debug");
    // 设置不可后退的路由
    window._rootHash = {
        hot: 1,
        find: 1,
        mine: 1,
        "act/list": 1,
        location: 1,
        "model_date/submit_success": 1,
        "account/register/reg": 1
    };
    /**
     * 1、重写ajax方法，目的是增加一些统计点和统一交互
     * 2、backone的请求方法也应该生效
     */
    // 超时时间
    var ajaxSettings = {
        timeout: 1e4
    };
    $.extend($.ajaxSettings, ajaxSettings);
    (function($) {
        //备份ajax方法
        var _ajax = $.ajax;
        //重写ajax方法
        $.ajax = function(opt) {
            //备份opt中error和success方法
            var fn = {
                beforeSend: function(XMLHttpRequest, settings) {},
                error: function(XMLHttpRequest, textStatus, errorThrown) {},
                success: function(data, textStatus) {},
                complete: function(XMLHttpRequest, settings) {}
            };
            if (opt.beforeSend) {
                fn.beforeSend = opt.beforeSend;
            }
            if (opt.error) {
                fn.error = opt.error;
            }
            if (opt.success) {
                fn.success = opt.success;
            }
            if (opt.complete) {
                fn.complete = opt.complete;
            }
            var url = opt.url;
            //扩展增强处理
            var _opt = $.extend(opt, {
                beforeSend: function(XMLHttpRequest, settings) {
                    console.log("%c请求前，请求路径是:" + url, "color:#66ccff");
                    fn.beforeSend(XMLHttpRequest, settings);
                },
                success: function(data, textStatus) {
                    //成功回调方法扩展处理
                    console.log("%c请求成功，请求路径是:" + url, "color:#00dd00");
                    fn.success(data, textStatus);
                },
                error: function(XMLHttpRequest, textStatus, errorThrown) {
                    //错误方法扩展处理
                    console.log("%c请求失败，请求路径是:" + url, "color:#ff5544");
                    //m_alert.show('网络异常','error');
                    fn.error(XMLHttpRequest, textStatus, errorThrown);
                },
                complete: function(XMLHttpRequest, settings) {
                    fn.complete(XMLHttpRequest, settings);
                }
            });
            _ajax(_opt);
        };
    })($);
    // app页面最顶级容器
    var $app_page_conatainer = $("[data-app-page-container]");
    /**
     * 解决场景切换时，文本框焦点丢失让手机键盘隐藏处理
     */
    $app_page_conatainer.on("tap", function(event) {
        var target = event.target;
        var targetNodeName = target.nodeName;
        var activeElement = document.activeElement;
        var activeElementNodeName = activeElement.nodeName;
        if (targetNodeName !== activeElementNodeName && (activeElementNodeName === "INPUT" || activeElementNodeName === "TEXTAREA")) {
            activeElement.blur();
        }
    });
    // 触发窗体发生变化的函数
    window.addEventListener("resize", function() {
        page_control.window_change_page_triger();
    }, false);
    // 引用页面
    var App = require("./common/I_APP-debug");
    var WeiXin = require("./common/I_WX-debug");
    require("./model_date/hot/index-debug");
    //require('./location/index');
    //require('./model_date/find/index');
    require("./model_date/search/index-debug");
    require("./model_date/search_result/index-debug");
    // 模特卡页面需要的模块
    require("./model_date/model_card/index-debug");
    /*    
    require('./model_date/model_card/edit/index');
    require('./model_date/model_card/edit_all/index');
    require('./model_date/model_card/price_style_select/index');
    require('./model_date/model_card/edit_condition/index');
	*/
    // 约拍流程和支付流程
    require("./model_date/model_style/index-debug");
    require("./model_date/submit_application/index-debug");
    require("./model_date/payment/index-debug");
    require("./model_date/submit_success/index-debug");
    require("./model_date/complete_application/index-debug");
    require("./mine/index-debug");
    require("./mine/zone/index-debug");
    require("./mine/consider/index-debug");
    //require('./mine/edit/index');
    //require('./mine/authentication/index');
    //require('./mine/authentication_list/index');
    //require('./mine/profile/index');
    require("./mine/consider_details_camera/index-debug");
    //require('./mine/consider_details_model/index');
    //require('./mine/consider_details_model/receive/index');
    //require('./mine/consider_details_model/refuse/index');
    /* 有关活动的模块
	require('./mine/status/index');
    require('./act/list/index');
    require('./act/apply/index');

    require('./act/signin/index');
    require('./act/detail/index');
    require('./act/pub/info/index');
    require('./act/pub/intro/index');
    require('./act/pub/arrange/index');
    require('./act/payment/index');
	*/
    require("./act/security/index-debug");
    require("./account/login/index-debug");
    //require('./account/front/index');
    //require('./account/setting/index');
    //require('./mine/money/withdrawal/index');
    require("./mine/money/bill/index-debug");
    //require('./account/setup/index');
    //require('./account/setup/bind/index');
    require("./account/setup/bind/enter_phone/index-debug");
    require("./account/setup/bind/enter_pw/index-debug");
    //require('./mine/money/recharge/index');
    require("./account/register/login_phone/index-debug");
    require("./account/register/login_pw/index-debug");
    //require('./account/register/change_phone/index');
    //require('./account/register/bind_phone/index');
    //require('./account/agreement_login/index');
    // 数字码签到
    //require('./mine/checkins/index');
    // 评论
    require("./comment/index-debug");
    require("./comment/list/index-debug");
    // 排行榜
    require("./rank/index-debug");
    require("./model_date/agreement/index-debug");
    //require('./mine/info/index');
    require("./topic/info/index-debug");
    require("./report/index-debug");
    require("./account/fans_follows/index-debug");
    require("./account/register/reg/index-debug");
    //require('./account/about/index');
    // 信用金
    //require('./mine/credit/index');
    // 消息模块
    //require('./message/index');
    // 绑定支付宝
    //require('./mine/money/bind-alipay/index');
    require("./mine/date_cancel_reason/index-debug");
    require("./topic/index-debug");
    require("./account/login_tips/index-debug");
    // 设置默认地区
    var default_location = {
        location_id: 101029001,
        location_name: "广州"
    };
    // 缓存地区
    var cache_location = utility.storage.get("location");
    if (!cache_location) {
        utility.storage.set("location", default_location);
    }
    // 设置路由
    var default_rote = global_config.default_index_route;
    // 获取登录用户信息
    utility.user = new mine();
    /*// 第一次进来app
    if(!utility.storage.get('is_frist_time_open_app'))
    {
        // 注册页面
        default_rote = 'account/register/reg/1';

    }*/
    var header_obj = null;
    // 转场初始化
    page_control.init($app_page_conatainer, {
        default_title: "约约",
        default_index_route: default_rote,
        before_route: function(page_his_buff) {},
        after_route: function(page_his_buff) {
            // 路由跳转后锁屏解除
            setTimeout(function() {
                $("body").css("pointer-events", "auto");
            }, 100);
            if (!$("#J-splashscreens-progress-radial").hasClass("fn-hide")) {
                $("#J-splashscreens").addClass("fn-hide");
                $("#J-splashscreens-progress-radial").addClass("complete");
                clearInterval(window._splashscreens_interval);
            }
            // 微信取消右上角按钮
            //WeiXin.isWexXin() && WeiXin.hideOptionMenu();
            // 头部滑下问题
            header_obj = null;
            var url_hash = window.location.hash;
            url_hash = url_hash.replace("#", "");
            var slash_pos = url_hash.indexOf("/");
            if (slash_pos > 0) url_hash = url_hash.substr(0, slash_pos);
            if ($.inArray(url_hash, global_config.fixed_header_pos_page) != -1) {
                var current_page_view = page_control.return_current_page_view();
                header_obj = current_page_view.$el.find('[data-role="slide-header"]');
                animating_end();
            }
            var hash = utility.getHash();
        }
    });
    $(document.body).on("swipeup", function() {
        fixed_header_pos(false);
    });
    $(document.body).on("swipedown", function() {
        fixed_header_pos(true);
    });
    // 页面头部元素滑动隐藏
    // 1.在header元素后加入[data-role="slide-header"] 和 类 fn-hide
    // 2.在global_config的fixed_header_pos_page数组内加入对应页hash
    // 3.header 布局必须为absolute
    // 2014-10-10 nolest
    function fixed_header_pos(show) {
        if (header_obj) {
            //下拉
            if (show == true) {
                header_obj.removeClass("pull-up fn-hide").addClass("drop-down");
                header_obj.attr("is_drop", "drop");
            } else {
                header_obj.removeClass("drop-down").addClass("pull-up");
                header_obj.attr("is_drop", "undrop");
            }
        }
    }
    //动画完成监听事件
    function animating_end() {
        header_obj.on("webkitAnimationEnd", function() {
            if (header_obj.attr("is_drop") == "drop") {
                header_obj.addClass("");
            } else {
                header_obj.addClass("fn-hide");
            }
        });
    }
    // 保存设备信息
    if (App.isPaiApp) {
        App.save_device();
    }
    // 判断是否登录
    if (utility.login_id > 0) {
        var local_user = utility.storage.get("user");
        if (local_user && local_user.user_id) {
            utility.user.set(local_user);
        }
        // 已经登录
        utility.user.once("success:get_info:fetch", function(reponse) {
            var data = reponse.result_data.data;
            if (data) {
                utility.user.set(data);
            }
        }).once("complete:get_info:fetch", function(xhr, state) {
            state == "success" || utility.user.get_info();
        }).get_info();
        page_control.route_start();
    } else {
        utility.login_id = 0;
        page_control.route_start();
    }
    function _show_upload_progress(progress) {
        m_alert.show(progress, "right", {
            delay: 500
        });
    }
    function _show_upload_finish() {
        m_alert.show("上传完毕", "right", {
            delay: 1e3
        });
    }
});

/**
 * 页面导航 + 转场控制
 */
define("pai/vwx0.0.1-beta/frame/page_control-debug", [ "utility/backbone/1.1.2/backbone-debug", "$-debug", "pai/vwx0.0.1-beta/frame/ua-debug", "pai/vwx0.0.1-beta/frame/page-debug", "utility/zepto/modules/data/1.1.4/data-debug", "utility/hammer/plugins/jquery.hammer/1.1.3/jquery.hammer-debug", "utility/underscore/1.6.0/underscore-debug" ], function(require, exports) {
    var Backbone = require("utility/backbone/1.1.2/backbone-debug");
    var $ = require("$-debug");
    var ua = require("pai/vwx0.0.1-beta/frame/ua-debug");
    var page_class = require("pai/vwx0.0.1-beta/frame/page-debug");
    var underscore = require("utility/underscore/1.6.0/underscore-debug");
    var zIndex = 1e4;
    var PAGE_HIS_BUFF = [];
    var _MOVE = null;
    var _ORIGINAL_CONTAINER;
    var _LAST_PAGE_VIEW = null;
    var _PAGE_PARAMS_ARR = [];
    var _TEMP_STATE = {};
    var TO_PAGE_VIEW = {};
    var FROM_PAGE_VIEW = {};
    var DEFAULT_INDEX_ROUTE;
    var DEFAULT_TITLE;
    var BEFORE_ROUTE;
    var AFTER_ROUTE;
    var IS_BACKWARD = null;
    var NAVIGATE_WIHTOUT_HIS = null;
    var NAVIGATE_CUSTOM_TANSITION = null;
    var PAGE_IS_TRANSIT = false;
    var PAGE_ROUTE_INDEX = 0;
    var ANDROID_NO_TRANSITION = false;
    //android是否转场动画
    var pageViewMaps = {};
    function IS_FUNCTION(judge_obj) {
        return typeof judge_obj == "function";
    }
    //    function SEARCH_PAGE_IN_BUFF(url_hash)
    //    {
    //        var search_page_view = false;
    //
    //        $(PAGE_HIS_BUFF).each(function(index , buff_obj)
    //        {
    //            for (key in buff_obj)
    //            {
    //                if(key==url_hash)
    //                {
    //                    search_page_view = buff_obj[key];
    //
    //                    return false;
    //                }
    //            }
    //        });
    //
    //        return search_page_view;
    //    }
    //路由配置
    var APP_ROUTE = new Backbone.Router();
    exports.init = function(original_container, options) {
        var that = this;
        options || (options = {});
        DEFAULT_INDEX_ROUTE = options.default_index_route || "";
        DEFAULT_TITLE = options.default_title || "";
        BEFORE_ROUTE = options.before_route || "";
        AFTER_ROUTE = options.after_route || "";
        _ORIGINAL_CONTAINER = original_container;
        if (DEFAULT_INDEX_ROUTE) {
            //匹配修正跳转链接 没有带hash的情况  add by manson 2013.6.28
            APP_ROUTE.route("", "", function() {
                that.navigate_to_page(DEFAULT_INDEX_ROUTE, {}, true);
            });
        }
    };
    exports.route_start = function() {
        Backbone.history.start();
    };
    var replacePageHash;
    exports.navigate_to_page = function(page, state, replace, transition) {
        if (PAGE_IS_TRANSIT) return;
        _TEMP_STATE = state;
        _MOVE = "forward";
        //var replace = (replace==null) ? false : replace;
        replace = !!replace;
        var trigger = trigger == null ? true : trigger;
        replacePageHash = replace ? get_current_url() : null;
        //NAVIGATE_WIHTOUT_HIS = replace;
        NAVIGATE_CUSTOM_TANSITION = transition == null ? false : transition;
        _LAST_PAGE_VIEW && (_LAST_PAGE_VIEW.without_his = replace);
        //Analytics.log('navigateTo:' + page);
        APP_ROUTE.navigate(page, {
            trigger: true,
            replace: replace
        });
    };
    exports.back = function() {
        if (PAGE_IS_TRANSIT) return;
        if (PAGE_HIS_BUFF.length <= 1) {
            if (DEFAULT_INDEX_ROUTE != "") {
                this.navigate_to_page(DEFAULT_INDEX_ROUTE);
                setTimeout(function() {
                    if (IS_FUNCTION(FROM_PAGE_VIEW)) {
                        FROM_PAGE_VIEW.page_before_remove.call(FROM_PAGE_VIEW);
                        console.log("back FROM_PAGE_VIEW:" + FROM_PAGE_VIEW.cid + " page_before_remove done");
                    }
                    FROM_PAGE_VIEW.remove();
                    console.log("back FROM_PAGE_VIEW:" + FROM_PAGE_VIEW.cid + " remove done");
                }, 1e3);
            }
            return false;
        }
        _MOVE = "backward";
        window.history.back();
    };
    exports.page_history = function() {
        return PAGE_HIS_BUFF;
    };
    exports.window_change_page_triger = function() {
        if (IS_FUNCTION(TO_PAGE_VIEW.window_change)) {
            TO_PAGE_VIEW.window_change.call(this, TO_PAGE_VIEW);
        }
    };
    //返回当前页面view
    exports.return_current_page_view = function() {
        return TO_PAGE_VIEW;
    };
    //返回转场状态
    exports.page_transit_status = function() {
        return PAGE_IS_TRANSIT;
    };
    exports.add_page = function(page_controller_arr) {
        var that = this;
        var page_entity;
        while (page_entity = page_controller_arr.shift()) {
            if (!IS_FUNCTION(page_entity)) {
                continue;
            }
            var page_options = page_entity();
            var route = page_options.route || false;
            if (route) {
                var key;
                for (key in route) {
                    (function(page_entity) {
                        APP_ROUTE.route(key, route[key], function(params, params_2, params_3) {
                            var args = Array.prototype.slice.call(arguments, 0);
                            args.unshift(page_entity);
                            args.unshift(page_options);
                            trriger_page_route.apply(that, args);
                        });
                    })(page_entity);
                }
            }
        }
    };
    function get_current_url() {
        //return window.location.href;
        return window.location.hash.substr(1);
    }
    function get_obj_key_value(obj) {
        var key, value;
        for (key in obj) {
            key = key;
            value = obj[key];
        }
        return {
            key: key,
            value: value
        };
    }
    function getKey(obj) {
        var key;
        var keys = [];
        for (key in obj) {
            if (obj.hasOwnProperty(key)) {
                keys.push(key);
            }
        }
        return keys;
    }
    function new_page_entity(page_entity) {
        //var page_options = page_entity({ custom_tansition : NAVIGATE_CUSTOM_TANSITION , without_his : NAVIGATE_WIHTOUT_HIS });
        var page_options = page_entity();
        page_options.custom_tansition = NAVIGATE_CUSTOM_TANSITION;
        //        page_options.without_his = NAVIGATE_WIHTOUT_HIS;
        var new_page_view = page_class.new_page(page_options);
        return new_page_view;
    }
    function trriger_page_route(page_options, page_entity, params, params_2, params_3) {
        var that = this;
        //修正兼容用浏览器前进后退的情况  add by manson 2013.7.23
        if (PAGE_IS_TRANSIT) return;
        _PAGE_PARAMS_ARR = [];
        _PAGE_PARAMS_ARR.push(params);
        _PAGE_PARAMS_ARR.push(params_2);
        _PAGE_PARAMS_ARR.push(params_3);
        var url_hash = get_current_url();
        if (IS_FUNCTION(BEFORE_ROUTE)) {
            BEFORE_ROUTE.call(that, PAGE_HIS_BUFF);
        }
        var have_exist = false;
        // edit kidney at 2014-05-22
        //var have_exist = $(_ORIGINAL_CONTAINER).find('[page-url="'+url_hash+'"]').length;
        pageViewMaps[url_hash] && (have_exist = pageViewMaps[url_hash].length);
        IS_BACKWARD = check_route_is_backward();
        //前进操作
        if (!IS_BACKWARD) {
            if (have_exist && !page_options.ignore_exist) {
                // edit kidney at 2014-05-22
                //var exist_view = $(_ORIGINAL_CONTAINER).find('[page-url="'+url_hash+'"]').data('page-view');
                var exist_view = pageViewMaps[url_hash][0];
                if (exist_view) {
                    exist_view.$el.css("top", "0px");
                    _transit_page(_LAST_PAGE_VIEW, exist_view, exist_view.transition_type, false);
                } else {
                    var new_page_view = new_page_entity(page_entity);
                    create_page(new_page_view, false);
                }
            } else {
                var new_page_view = new_page_entity(page_entity);
                create_page(new_page_view, false);
            }
        } else {
            var lastPageView = PAGE_HIS_BUFF.pop();
            var lastPageViewHash = getKey(lastPageView)[0];
            if (have_exist) {
                //var exist_buff = PAGE_HIS_BUFF[PAGE_HIS_BUFF.length - 1]
                //var exist_view = get_obj_key_value(exist_buff).value
                // edit kidney at 2014-05-22
                //var exist_view = $(_ORIGINAL_CONTAINER).find('[page-url="'+url_hash+'"]').data('page-view');
                pageViewMaps[lastPageViewHash].shift();
                if (!pageViewMaps[lastPageViewHash].length) {
                    delete pageViewMaps[lastPageViewHash];
                }
                var exist_view = pageViewMaps[url_hash][0] || false;
                if (!exist_view) {
                    throw new Error("exist_view is invalid");
                }
                //console.log('>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>' , exist_view)
                _transit_page(_LAST_PAGE_VIEW, exist_view, _LAST_PAGE_VIEW.transition_type, true);
                setTimeout(function() {
                    exist_view.$el.css("top", "0px");
                }, 10);
            } else {
                var new_page_view = new_page_entity(page_entity);
                create_page(new_page_view, true);
            }
        }
        if (IS_FUNCTION(AFTER_ROUTE)) {
            AFTER_ROUTE.call(that, PAGE_HIS_BUFF);
        }
    }
    function create_page(page_obj, is_back) {
        var that = this;
        var page_view = page_obj;
        var url_hash = get_current_url();
        page_view.$el.attr({
            "data-page-url": url_hash,
            "data-cid": page_view.cid
        });
        // edit kidney at 2014-05-22
        //page_view.$el.data('page-view',page_view);
        pageViewMaps[url_hash] || (pageViewMaps[url_hash] = []);
        pageViewMaps[url_hash].unshift(page_view);
        //新建页面
        page_view.$el.css({
            visibility: "hidden",
            top: 0,
            zIndex: zIndex
        }).attr({
            "data-page-index": PAGE_ROUTE_INDEX
        });
        zIndex++;
        PAGE_ROUTE_INDEX++;
        $(_ORIGINAL_CONTAINER).prepend(page_view.$el);
        //page_init
        if (IS_FUNCTION(page_view.page_init)) {
            // edit kidney at 2014-06-26
            //page_view.page_init.call(that , page_view,_PAGE_PARAMS_ARR,_TEMP_STATE);
            page_view.page_init(page_view, _PAGE_PARAMS_ARR, _TEMP_STATE);
            console.log("page_view:" + page_view.cid + " page_init done");
        }
        var transition_type = page_view.transition_type;
        _transit_page(_LAST_PAGE_VIEW, page_view, transition_type, is_back);
    }
    function _transit_page(from_view, page_view, transition_type, is_back) {
        var url_hash = get_current_url();
        //转场处理
        _start_page_transition(from_view, page_view, transition_type, is_back);
        //页面历史记录处理
        if (!is_back) {
            var buff_obj = {};
            buff_obj[url_hash] = page_view;
            //if(page_view.without_his)
            if (from_view && from_view.without_his) {
                //特殊路由
                if (replacePageHash && pageViewMaps[replacePageHash]) {
                    pageViewMaps[replacePageHash].shift();
                    if (!pageViewMaps[replacePageHash].length) {
                        delete pageViewMaps[replacePageHash];
                    }
                    replacePageHash = null;
                }
                if (!PAGE_HIS_BUFF.length) {
                    PAGE_HIS_BUFF.push(buff_obj);
                } else {
                    PAGE_HIS_BUFF[PAGE_HIS_BUFF.length - 1] = buff_obj;
                }
            } else {
                PAGE_HIS_BUFF.push(buff_obj);
            }
        }
        _LAST_PAGE_VIEW = TO_PAGE_VIEW;
    }
    function check_route_is_backward() {
        //var url_hash = location.href;
        var url_hash = get_current_url();
        var history_length = PAGE_HIS_BUFF.length;
        if (history_length > 1) {
            var last_two_buff = PAGE_HIS_BUFF[history_length - 2];
            var result = false;
            var key;
            for (key in last_two_buff) {
                if (_MOVE != "forward" && key == url_hash) {
                    result = true;
                }
            }
            return result;
        } else {
            return false;
        }
    }
    function _start_page_transition(from_page_view, to_page_view, transition_type, is_back) {
        var that = this;
        var __slide_transition_time = "400ms";
        var __slideup_transition_time = "400ms";
        var __fade_transition_time = "400ms";
        var __ease_timingfunction = "ease";
        var to_page_element_keyframe, from_page_element_keyframe;
        TO_PAGE_VIEW = to_page_view;
        FROM_PAGE_VIEW = from_page_view;
        //android低版本系统忽略转场动画
        if (ANDROID_NO_TRANSITION && ua.isAndroid) {
            transition_type = "none";
        }
        // edit kidney at 2014-07-08
        //to_page_view.$el.removeClass('fn-hide');
        console.log("to_page_view:" + to_page_view.cid + " removeClass fn-hide done");
        //页面即将进入转场前触发   add by manson 2013.5.30
        if (IS_FUNCTION(to_page_view.page_before_show)) {
            // edit kidney at 2014-06-26
            //to_page_view.page_before_show.call(that,to_page_view,_PAGE_PARAMS_ARR,_TEMP_STATE);
            to_page_view.page_before_show(to_page_view, _PAGE_PARAMS_ARR, _TEMP_STATE);
            console.log("to_page_view:" + to_page_view.cid + " page_before_show done");
        }
        from_page_view && from_page_view.open_cover();
        //上一页面即将离开转场前触发   add by manson 2013.7.31
        if (from_page_view && IS_FUNCTION(from_page_view.page_before_hide)) {
            // edit kidney at 2014-06-26
            //from_page_view.page_before_hide.call(that,from_page_view);
            from_page_view.page_before_hide(from_page_view);
            console.log("from_page_view:" + from_page_view.cid + " page_before_hide done");
        }
        var animation_timing_function;
        var animation_duration;
        switch (transition_type) {
          case "slide":
            if (!is_back) {
                to_page_element_keyframe = "slideinfromright";
                from_page_element_keyframe = "slideoutfromleft";
            } else {
                to_page_element_keyframe = "slideinfromleft";
                from_page_element_keyframe = "slideoutfromright";
            }
            animation_timing_function = __ease_timingfunction;
            animation_duration = __slide_transition_time;
            break;

          case "slide_reverse":
            if (!is_back) {
                to_page_element_keyframe = "slideinfromleft";
                from_page_element_keyframe = "slideoutfromright";
            } else {
                to_page_element_keyframe = "slideinfromleft";
                from_page_element_keyframe = "slideoutfromright";
            }
            animation_timing_function = __ease_timingfunction;
            animation_duration = __slide_transition_time;
            break;

          case "slideup":
            if (!is_back) {
                to_page_element_keyframe = "slideupinfrombottom";
                from_page_element_keyframe = "slideupoutfromtop";
            } else {
                to_page_element_keyframe = "slideupinfromtop";
                from_page_element_keyframe = "slideupoutfrombottom";
            }
            animation_timing_function = __ease_timingfunction;
            animation_duration = __slideup_transition_time;
            break;

          case "fade":
            to_page_element_keyframe = "fadein";
            from_page_element_keyframe = "fadeout";
            animation_timing_function = __ease_timingfunction;
            animation_duration = __fade_transition_time;
            break;

          default:
            to_page_element_keyframe = "none";
            from_page_element_keyframe = "none";
            animation_timing_function = __ease_timingfunction;
            animation_duration = "10ms";
            break;
        }
        //正在转场
        PAGE_IS_TRANSIT = true;
        if (to_page_element_keyframe) {
            var to_page_element = TO_PAGE_VIEW.el;
            //进场页面
            to_page_element.style.webkitAnimationDuration = animation_duration;
            to_page_element.style.webkitAnimationTimingFunction = animation_timing_function;
            to_page_element.style.visibility = "visible";
            to_page_element.style.webkitAnimationName = to_page_element_keyframe;
            //退场页面
            if (FROM_PAGE_VIEW) {
                var from_page_element = FROM_PAGE_VIEW.el;
                from_page_element.style.webkitAnimationDuration = animation_duration;
                from_page_element.style.webkitAnimationTimingFunction = animation_timing_function;
                from_page_element.style.webkitAnimationName = from_page_element_keyframe;
            } else {
                PAGE_IS_TRANSIT = false;
            }
            setTimeout(function() {
                TO_PAGE_VIEW.close_cover();
                TO_PAGE_VIEW.el.style.webkitAnimationDuration = "0ms";
                if (IS_FUNCTION(TO_PAGE_VIEW.page_back_show) && IS_BACKWARD) {
                    TO_PAGE_VIEW.page_back_show.call(that, TO_PAGE_VIEW, _PAGE_PARAMS_ARR, _TEMP_STATE);
                    console.log("TO_PAGE_VIEW:" + TO_PAGE_VIEW.cid + " page_back_show done");
                }
                if (IS_FUNCTION(TO_PAGE_VIEW.page_show)) {
                    // edit kidney at 2014-06-26
                    //TO_PAGE_VIEW.page_show.call(that,TO_PAGE_VIEW,_PAGE_PARAMS_ARR,_TEMP_STATE);
                    TO_PAGE_VIEW.page_show(TO_PAGE_VIEW, _PAGE_PARAMS_ARR, _TEMP_STATE);
                    console.log("TO_PAGE_VIEW:" + TO_PAGE_VIEW.cid + " page_show done");
                }
                __tansition_end_page_dom_control();
            }, parseInt(animation_duration));
        }
        $("body").css("point-events", "none");
    }
    function __tansition_end_page_dom_control() {
        PAGE_IS_TRANSIT = false;
        var that = this;
        var from_page_element = FROM_PAGE_VIEW && FROM_PAGE_VIEW.el;
        var to_page_element = TO_PAGE_VIEW.el;
        //页面转换动态改变title   add by manson 2013.11.15
        /*if(TO_PAGE_VIEW.manual_title!=true)
        {
            if(TO_PAGE_VIEW.title)
            {
                document.title = TO_PAGE_VIEW.title;
            }
            else
            {
                document.title = DEFAULT_TITLE;
            }
        }*/
        if (from_page_element) {
            $(from_page_element).css("top", "-3000px");
            if (IS_FUNCTION(FROM_PAGE_VIEW.page_hide)) {
                // edit kidney at 2014-06-26
                //FROM_PAGE_VIEW.page_hide.call(that);
                FROM_PAGE_VIEW.page_hide();
                console.log("FROM_PAGE_VIEW:" + FROM_PAGE_VIEW.cid + " page_hide done");
            }
            // edit kidney at 2014-07-08
            //FROM_PAGE_VIEW.$el.addClass('fn-hide');
            console.log("FROM_PAGE_VIEW:" + FROM_PAGE_VIEW.cid + " addClass fn-hide done");
            //移除页面
            if (FROM_PAGE_VIEW.dom_not_cache == true && IS_BACKWARD) {
                if (FROM_PAGE_VIEW) {
                    IS_FUNCTION(FROM_PAGE_VIEW.page_before_remove) && FROM_PAGE_VIEW.page_before_remove.call(FROM_PAGE_VIEW);
                    console.log("FROM_PAGE_VIEW:" + FROM_PAGE_VIEW.cid + " dom_not_cache page_before_remove done");
                    FROM_PAGE_VIEW.remove();
                    console.log("FROM_PAGE_VIEW:" + FROM_PAGE_VIEW.cid + " dom_not_cache remove done");
                }
            }
            //if(TO_PAGE_VIEW.without_his)
            if (FROM_PAGE_VIEW.without_his) {
                if (FROM_PAGE_VIEW) {
                    IS_FUNCTION(FROM_PAGE_VIEW.page_before_remove) && FROM_PAGE_VIEW.page_before_remove.call(FROM_PAGE_VIEW);
                    console.log("FROM_PAGE_VIEW:" + FROM_PAGE_VIEW.cid + " page_before_remove done");
                    FROM_PAGE_VIEW.remove();
                    console.log("FROM_PAGE_VIEW:" + FROM_PAGE_VIEW.cid + " remove done");
                }
            }
        }
        _MOVE = null;
        IS_BACKWARD = null;
        setTimeout(function() {
            $("body").css("point-events", "auto");
        }, 50);
    }
});

define("pai/vwx0.0.1-beta/frame/ua-debug", [], function(require, exports) {
    var ua = {};
    var win = window;
    var nav = win.navigator;
    var app_version = nav.appVersion;
    //访问来自手机
    ua.isMobile = /(iphone|ipod|android|ios|ipad|nokia|blackberry|tablet|symbian)/.test(nav.userAgent.toLowerCase());
    //手机系统
    ua.isAndroid = /android/gi.test(app_version);
    ua.isIDevice = /iphone|ipad/gi.test(app_version);
    ua.isTouchPad = /hp-tablet/gi.test(app_version);
    ua.isIpad = /ipad/gi.test(app_version);
    ua.otherPhone = !(ua.isAndroid || ua.isIDevice);
    //浏览器品牌类型
    ua.is_uc = /uc/gi.test(app_version);
    ua.is_chrome = /CriOS/gi.test(app_version) || /Chrome/gi.test(app_version);
    ua.is_qq = /QQBrowser/gi.test(app_version);
    ua.is_real_safari = /safari/gi.test(app_version) && !ua.is_chrome && !ua.is_qq;
    //真正的原生IOS safari浏览器
    //iphone safari是否全屏
    ua.is_standalone = window.navigator.standalone ? true : false;
    ua.window_width = window.innerWidth;
    ua.window_height = window.innerHeight;
    //ua.window_height = $(window).height()
    //手机版本
    if (ua.isAndroid) {
        var android_version = parseFloat(app_version.slice(app_version.indexOf("Android") + 8));
        ua.android_version = android_version;
    } else if (ua.isIDevice) {
        var v = app_version.match(/OS (\d+)_(\d+)_?(\d+)?/);
        var ios_version = v[1];
        if (v[2]) ios_version += "." + v[2];
        if (v[3]) ios_version += "." + v[3];
        ua.ios_version = ios_version;
    }
    ua.is_iphone_safari_no_fullscreen = ua.isIDevice && ua.ios_version < "7" && !ua.isIpad && ua.is_real_safari && !ua.is_standalone;
    return ua;
});

define("pai/vwx0.0.1-beta/frame/page-debug", [ "$-debug", "utility/zepto/modules/data/1.1.4/data-debug", "pai/vwx0.0.1-beta/frame/ua-debug", "utility/hammer/plugins/jquery.hammer/1.1.3/jquery.hammer-debug", "utility/backbone/1.1.2/backbone-debug" ], function(require, exports) {
    var $ = require("$-debug");
    require("utility/zepto/modules/data/1.1.4/data-debug");
    var ua = require("pai/vwx0.0.1-beta/frame/ua-debug");
    require("utility/hammer/plugins/jquery.hammer/1.1.3/jquery.hammer-debug");
    $(document.body).hammer();
    exports.new_page = function(options) {
        var Backbone = require("utility/backbone/1.1.2/backbone-debug");
        options || (options = {});
        var page_view_class = Backbone.View.extend({
            tagName: "div",
            className: "apps_page",
            title: options.title,
            manual_title: options.manual_title,
            dom_not_cache: options.dom_not_cache,
            transition_type: options.transition_type,
            ignore_exist: options.ignore_exist || false,
            without_his: options.without_his || false,
            events: options.events,
            render: options.render,
            page_show: options.page_show,
            page_before_show: options.page_before_show,
            page_back_show: options.page_back_show,
            page_init: options.page_init,
            window_change: options.window_change,
            page_before_hide: options.page_before_hide,
            page_hide: options.page_hide,
            page_before_remove: options.page_before_remove,
            page_lock: false,
            initialize: function() {
                var self = this;
                self.$cover = $('<div class="tran_cover fn-hide"></div>');
                //转场防事件穿透遮罩层  add by manson 2014.3.5
                self.$el.append(self.$cover);
                if (typeof options.initialize == "function") {
                    options.initialize.call(self);
                }
            },
            open_cover: function() {
                this.$cover.removeClass("fn-hide");
            },
            close_cover: function(delay) {
                var that = this;
                if (delay === -1) {
                    that.$cover.addClass("fn-hide");
                } else {
                    setTimeout(function() {
                        that.$cover.addClass("fn-hide");
                    }, delay || 300);
                }
            }
        });
        return new page_view_class();
    };
});

/**
 * 工具集
 * hdw  2014.8.13
 */
define("pai/vwx0.0.1-beta/common/utility-debug", [ "$-debug", "pai/vwx0.0.1-beta/common/cross_domain_storage-debug", "matcha/cookie/1.0.0/cookie-debug", "utility/underscore/1.6.0/underscore-debug", "pai/vwx0.0.1-beta/frame/ua-debug" ], function(require, exports, module) {
    var $ = require("$-debug");
    var $win = $(window);
    var storage = window.localStorage;
    var cross_domain_storage = require("pai/vwx0.0.1-beta/common/cross_domain_storage-debug");
    var cookie = require("matcha/cookie/1.0.0/cookie-debug");
    var underscrore = require("utility/underscore/1.6.0/underscore-debug");
    var ua = require("pai/vwx0.0.1-beta/frame/ua-debug");
    var login_id = parseInt(cookie.get("yue_member_id"));
    var _ = underscrore._;
    var window_location = window.location;
    // 处理origin兼容性问题
    if (!window_location.origin) {
        window_location.origin = window_location.protocol + "//" + window_location.hostname + (window_location.port ? ":" + window_location.port : "");
    }
    if (/wifi/.test(window_location.origin)) {
        var origin = window_location.origin.replace("-wifi", "");
    } else {
        var split_origin = window_location.origin.split(".");
        var origin = split_origin[0] + "-wifi" + "." + split_origin[1] + "." + split_origin[2];
    }
    console.log(origin);
    var cdstorage = new cross_domain_storage(origin, "/mobile/crossd_iframe.html");
    console.log(cdstorage);
    // 此函数用于回调获取跨域的localstroage
    function cdstorage_callback(key, val) {}
    var utility = {
        get_view_port_height: function(type) {
            var nav_bar_height = 45;
            var tab_bar_height = 45;
            var height = $win.height();
            switch (type) {
              case "nav":
                height = height - tab_bar_height;
                break;

              case "tab":
                height = height - nav_bar_height;
                break;

              case "all":
                height = height - tab_bar_height - nav_bar_height;
                break;

              default:
                height;
            }
            return height;
        },
        get_view_port_width: function() {
            return $win.width();
        },
        /**
         * 转化为整型
         * @param s
         * @returns {Number}
         */
        "int": function(s) {
            return parseInt(s, 10) || 0;
        },
        /**
         * 转换为浮点型
         * @param s
         * @returns {Number}
         */
        "float": function(s) {
            return parseFloat(s);
        },
        /**
         * 保留指定小数
         * @param number
         * @param fractionDigits
         * @returns {number}
         */
        format_float: function(number, fractionDigits) {
            fractionDigits = fractionDigits || 0;
            var pow = Math.pow(10, fractionDigits);
            return Math.round(number * pow) / pow;
        },
        /**
         * 获取hash
         * @returns {string}
         */
        getHash: function() {
            return window.location.hash.substr(1);
        },
        /**
         * 换取缩放宽
         * @param ori_width
         * @param ori_height
         * @param zoom_width
         * @returns {Number}
         */
        get_zoom_height_by_zoom_width: function(ori_width, ori_height, zoom_width) {
            return parseInt(ori_height * zoom_width / ori_width);
        },
        /**
         * 本地存储器
         */
        storage: {
            /**
             * 前缀
             */
            prefix: "poco-yuepai-app-",
            /**
             * 设置
             * @param key
             * @param val
             * @returns {*}
             */
            set: function(key, val) {
                if (typeof val == "undefined") {
                    return utility.storage.remove(key);
                }
                cdstorage.setItem(utility.storage.prefix + key, JSON.stringify(val));
                storage.setItem(utility.storage.prefix + key, JSON.stringify(val));
                return val;
            },
            /**
             * 获取
             * @param key
             * @returns {*}
             */
            get: function(key) {
                var item = storage.getItem(utility.storage.prefix + key);
                if (!item) {
                    return item;
                } else {
                    return JSON.parse(item);
                }
            },
            /**
             * 删除
             * @param key
             * @returns {*}
             */
            remove: function(key) {
                return storage.removeItem(utility.storage.prefix + key);
            }
        },
        select_time: {
            year: function(end_year) {
                var date = new Date();
                var year = date.getFullYear();
                var end_year = end_year || year + 3;
                var data = get_arr_by_start_and_end(year, end_year);
                var arr = [];
                for (var i = 0; i < data.length; i++) {
                    arr.push({
                        text: data[i],
                        value: data[i]
                    });
                }
                return arr;
            },
            month: function() {
                var data = get_arr_by_start_and_end(1, 12);
                var arr = [];
                for (var i = 0; i < data.length; i++) {
                    arr.push({
                        text: data[i],
                        value: data[i]
                    });
                }
                return arr;
            },
            day: function() {
                var data = get_arr_by_start_and_end(1, 31);
                var arr = [];
                for (var i = 0; i < data.length; i++) {
                    arr.push({
                        text: data[i],
                        value: data[i]
                    });
                }
                return arr;
            },
            hour: function() {
                var data = get_arr_by_start_and_end(0, 23);
                var arr = [];
                for (var i = 0; i < data.length; i++) {
                    arr.push({
                        text: data[i],
                        value: data[i]
                    });
                }
                return arr;
            },
            min: function() {
                return [ {
                    value: "00"
                }, {
                    value: "15"
                }, {
                    value: "30"
                }, {
                    value: "45"
                } ];
            },
            today_is: function() {
                var d = new Date();
                var cur_year = d.getFullYear();
                var cur_month = d.getMonth() + 1;
                var cur_date = d.getDate();
                return {
                    year: cur_year,
                    month: cur_month,
                    date: cur_date,
                    full_date: cur_year + "-" + cur_month + "-" + cur_date
                };
            },
            mix_date: function() {
                var self = this;
                var year = utility.select_time.year();
                var month = utility.select_time.month();
                var day = utility.select_time.day();
                var hour = utility.select_time.hour();
                var min = utility.select_time.min();
                var date_arr = {};
                var hour_arr = {};
                var min_arr = {};
                var temp_month_arr_1 = [];
                var temp_month_arr_2 = [];
                var month_arr = [];
                /*****************整合今年和明年的时间，但不是最优的解决方案*********************/
                var cur_month = new Date().getMonth() + 1;
                var cur_day = new Date().getDate();
                var cur_year = utility.select_time.today_is().year;
                for (var i = 0; i < month.length; i++) {
                    if (cur_month > month[i].value) {
                        temp_month_arr_1.push(month[i]);
                    } else {
                        temp_month_arr_2.push(month[i]);
                    }
                }
                month_arr = temp_month_arr_2.concat(temp_month_arr_1);
                /*****************整合今年和明年的时间，但不是最优的解决方案*********************/
                // 整合日期
                for (var n = 0; n < month_arr.length; n++) {
                    for (var m = 0; m < day.length; m++) {
                        var date = month_arr[n].value + "月" + day[m].value + "日";
                        var selected_cur_year = cur_year;
                        /****************今年和明年的时间整理，但不是最好的算法******************/
                        if (month_arr[n].value > cur_month) {
                            if (day[m].value > cur_day) {
                                selected_cur_year = cur_year;
                            }
                        } else if (month_arr[n].value == cur_month) {
                            if (day[m].value >= cur_day) {
                                selected_cur_year = cur_year;
                            } else {
                                selected_cur_year = cur_year + 1;
                            }
                        } else {
                            selected_cur_year = cur_year + 1;
                        }
                        /****************今年和明年的时间整理，但不是最好的算法******************/
                        //console.log('日期:'+selected_cur_year + "--" + month_arr[n].value+'月'+day[m].value+'日');
                        var obj = {
                            value: selected_cur_year + "-" + month_arr[n].value + "-" + day[m].value,
                            text: date,
                            selected: cur_month == month_arr[n].value && cur_day == day[m].value
                        };
                        date_arr[date] = obj;
                    }
                }
                // 整合时
                for (var n = 0; n < hour.length; n++) {
                    hour[n].selected = n == 0;
                    hour_arr[hour[n].value + "时"] = {
                        value: hour[n].value,
                        text: hour[n].value + "时",
                        selected: n == 0
                    };
                }
                // 整合分
                for (var n = 0; n < min.length; n++) {
                    min[n].selected = n == 0;
                    min_arr[hour[n].value + "分"] = {
                        value: min[n].value,
                        text: min[n].value + "分",
                        selected: n == 0
                    };
                }
                return {
                    date_arr: date_arr,
                    hour_arr: hour_arr,
                    min_arr: min_arr
                };
            }
        },
        /**
         * 订单信息
         */
        date_info: {
            set: function(info) {
                var self = this;
                utility.storage.set("date-info", info);
            },
            get: function() {
                var self = this;
                return utility.storage.get("date-info");
            },
            clear: function() {
                var self = this;
                utility.storage.remove("date-info");
            }
        },
        is_bigger_time: function(t1, t2) {
            var d1 = new Date(t1.replace(/\-/g, "/"));
            var d2 = new Date(t2.replace(/\-/g, "/"));
            return d1 > d2;
        },
        obj_Equal: function(obj_a, obj_b) {
            return _.isEqual(obj_a, obj_b);
        },
        is_empty: function(check_obj) {
            var obj_type = typeof check_obj;
            //console.log(obj_type)
            switch (obj_type) {
              case "undefined":
                var is_empty = true;
                break;

              case "boolean":
                var is_empty = !check_obj;
                break;

              case "number":
                if (check_obj > 0) {
                    var is_empty = false;
                } else {
                    var is_empty = true;
                }
                break;

              case "string":
                if (check_obj == "" || check_obj <= "0" && !isNaN(parseInt(check_obj))) {
                    var is_empty = true;
                } else {
                    var is_empty = false;
                }
                break;

              case "object":
                if (_.isEmpty(check_obj)) {
                    var is_empty = true;
                } else if (check_obj instanceof Array) {
                    if (check_obj.length == 0) {
                        var is_empty = true;
                    } else {
                        var is_empty = false;
                    }
                } else {
                    var is_empty = true;
                    for (var name in check_obj) {
                        is_empty = false;
                    }
                }
                break;

              default:
                var is_empty = false;
            }
            return is_empty;
        },
        ajax_request: function(options) {
            var options = options || {};
            var url = options.url;
            var data = options.data || {};
            var cache = options.cache || false;
            var beforeSend = options.beforeSend || function() {};
            var success = options.success || function() {};
            var error = options.error || function() {};
            var complete = options.complete || function() {};
            var type = options.type || "GET";
            var dataType = options.dataType || "json";
            $.ajax({
                url: url,
                type: type,
                data: data,
                cache: cache,
                dataType: dataType,
                beforeSend: beforeSend,
                success: success,
                error: error,
                complete: complete
            });
        },
        auth: {
            is_login: function() {
                return utility.login_id > 0;
            }
        },
        wei_xin: {
            is_authority: function() {
                return cookie.get("yueus_openid");
            },
            weixin_authority_scope: function() {
                return cookie.get("yueus_scope");
            },
            url_head: window.location.origin + "/m/" + window._page_mode + "?" + window.location.search.replace("?", "") + "#"
        },
        //图片转换size
        matching_img_size: function(img_url, size) {
            var sort_size = size;
            return change_img_resize(img_url, sort_size);
        },
        /**
         * 设置不可返回页面
         * @param hash
         */
        set_no_page_back: function(hash) {
            // 设置后退按钮是否可用
            if (ua.isAndroid) {
                var hash_obj = {};
                hash_obj[hash] = 1;
                window._rootHash = $.extend(window._rootHash, hash_obj);
            }
        },
        get_grid_size: function(type) {
            var width = 0;
            var height = 0;
            var special_size = 0;
            var temp_size = 0;
            var view_width = utility.get_view_port_width();
            /*if(view_width%3 == 0)
             {
             temp_size = view_width/3;
             }
             else if ((view_width+1)%3 == 0)
             {
             temp_size = (view_width+1)/3;
             }
             else if((view_width+2)%3 == 0)
             {
             temp_size = (view_width+2)/3;
             }*/
            special_size = utility.int(view_width / 3);
            switch (type) {
              case "one":
              case "special":
                width = special_size;
                height = view_width - special_size * 2;
                break;

              case "middle":
                width = special_size - 2;
                height = view_width - special_size * 2;
                break;

              case "double":
                width = special_size * 2 - 1;
                height = (view_width - special_size * 2) * 2 + 1;
                break;
            }
            return {
                width: width,
                height: height
            };
        },
        /**
         * 在线状态更变
         * @param fn
         */
        online_change: function(fn) {
            typeof fn == "function" && onlineChangeEvent.push(fn);
        },
        get_url_params: function(url, paramName) {
            var oRegex = new RegExp("[?&]" + paramName + "=([^&]+)", "i");
            //var oMatch = oRegex.exec( window.top.location.search ) ; //获取当前窗口的URL
            var oMatch = oRegex.exec(url);
            if (oMatch && oMatch.length > 1) {
                return oMatch[1];
            } else {
                return "";
            }
        },
        user: {},
        login_id: login_id || 0
    };
    var onlineChangeEvent = [];
    $win.on("online offline", function(event) {
        for (var i = 0, len = onlineChangeEvent.length; i < len; i++) {
            onlineChangeEvent[i].call(this, event);
        }
    });
    /**
     * 切换图片size
     * @param img_url
     * @param size
     * @returns {*}
     */
    function change_img_resize(img_url, size) {
        var size_str = "";
        size = size || "";
        if ($.inArray(size, [ 120, 165, 640, 600, 145, 440, 230, 260 ]) != -1) {
            size_str = "_" + size;
        } else {
            size_str = "";
        }
        // 解析img_url
        var url_reg = /^http:\/\/(img|image)\d*(-c|-wap|-d)?\.poco\.cn.*\.jpg|gif|png|bmp/i;
        var reg = /_165.jpg|_640.jpg|_120.jpg|_600.jpg|_145.jpg|_260.jpg|_440.jpg/i;
        if (url_reg.test(img_url)) {
            if (reg.test(img_url)) {
                img_url = img_url.replace(reg, size_str + ".jpg");
            } else {
                img_url = img_url.replace("/(.d*).jpg|.jpg|.gif|.png|.bmp/i", size_str + ".jpg");
            }
        }
        return img_url;
    }
    function get_arr_by_start_and_end(start, end) {
        var arr = [];
        for (start; start <= end; start++) {
            arr.push(start);
        }
        return arr;
    }
    module.exports = utility;
});

/**
 *  跨域处理localStorage
 *  hdw 2014.11.8
 */
define("pai/vwx0.0.1-beta/common/cross_domain_storage-debug", [ "$-debug" ], function(require, exports, module) {
    var $ = require("$-debug");
    /**
     * Cross domain storage.
     * Based on: http://www.nczonline.net/blog/2010/09/07/learning-from-xauth-cross-domain-localstorage/
     * @author Juan Ramón González Hidalgo
     *
     * @param origin Iframe URL
     * @param path Path to iframe html file in origin
     */
    function CDStorage(origin, path) {
        var _iframe = null;
        var _iframeReady = false;
        var _origin = origin;
        var _path = path;
        var _queue = [];
        var _requests = {};
        var _id = 0;
        var supported = function() {
            try {
                return window.postMessage && window.JSON && "localStorage" in window && window["localStorage"] !== null;
            } catch (e) {
                return false;
            }
        }();
        //private methods
        var _sendRequest = function(data) {
            if (_iframe) {
                _requests[data.request.id] = data;
                _iframe.contentWindow.postMessage(JSON.stringify(data.request), _origin);
            }
        };
        var _iframeLoaded = function() {
            _iframeReady = true;
            if (_queue.length) {
                for (var i = 0, len = _queue.length; i < len; i++) {
                    _sendRequest(_queue[i]);
                }
                _queue = [];
            }
        };
        var _handleMessage = function(event) {
            if (event.origin == _origin) {
                var data = JSON.parse(event.data);
                if (typeof _requests[data.id].deferred != "undefined") {
                    _requests[data.id].deferred.resolve(data.value);
                }
                if (typeof _requests[data.id].callback == "function") {
                    _requests[data.id].callback(data.key, data.value);
                }
                delete _requests[data.id];
            }
        };
        //Public methods
        this.getItem = function(key, callback) {
            if (supported) {
                var request = {
                    id: ++_id,
                    type: "get",
                    key: key
                }, data = {
                    request: request,
                    callback: callback
                };
                if (window.jQuery) {
                    data.deferred = jQuery.Deferred();
                }
                if (_iframeReady) {
                    _sendRequest(data);
                } else {
                    _queue.push(data);
                }
                if (window.jQuery) {
                    return data.deferred.promise();
                }
            }
        };
        this.setItem = function(key, value) {
            if (supported) {
                var request = {
                    id: ++_id,
                    type: "set",
                    key: key,
                    value: value
                }, data = {
                    request: request
                };
                if (window.jQuery) {
                    data.deferred = jQuery.Deferred();
                }
                if (_iframeReady) {
                    _sendRequest(data);
                } else {
                    _queue.push(data);
                }
                if (window.jQuery) {
                    return data.deferred.promise();
                }
            }
        };
        //Init
        if (!_iframe && supported) {
            _iframe = document.createElement("iframe");
            _iframe.style.cssText = "position:absolute;width:1px;height:1px;left:-9999px;";
            document.body.appendChild(_iframe);
            if (window.addEventListener) {
                _iframe.addEventListener("load", function() {
                    _iframeLoaded();
                }, false);
                window.addEventListener("message", function(event) {
                    _handleMessage(event);
                }, false);
            } else if (_iframe.attachEvent) {
                _iframe.attachEvent("onload", function() {
                    _iframeLoaded();
                }, false);
                window.attachEvent("onmessage", function(event) {
                    _handleMessage(event);
                });
            }
            _iframe.src = _origin + _path;
        }
    }
    module.exports = CDStorage;
});

/**
 * 我的 模型
 * hdw 2014.8.29
 */
define("pai/vwx0.0.1-beta/mine/model-debug", [ "pai/vwx0.0.1-beta/common/global_config-debug", "utility/backbone/1.1.2/backbone-debug", "pai/vwx0.0.1-beta/common/utility-debug", "$-debug", "pai/vwx0.0.1-beta/common/cross_domain_storage-debug", "matcha/cookie/1.0.0/cookie-debug", "utility/underscore/1.6.0/underscore-debug", "pai/vwx0.0.1-beta/frame/ua-debug" ], function(require, exports, module) {
    var global_config = require("pai/vwx0.0.1-beta/common/global_config-debug");
    var Backbone = require("utility/backbone/1.1.2/backbone-debug");
    var utility = require("pai/vwx0.0.1-beta/common/utility-debug");
    module.exports = Backbone.Model.extend({
        idAttribute: "user_id",
        url: global_config.ajax_url.get_user_info,
        "default": {
            user_icon: "",
            user_id: "",
            nickname: "",
            sex: "",
            birthday: "",
            location_id: "",
            phone: "",
            attendance: "0",
            user_level: "",
            organizer_level: "0",
            model_level: "0",
            cameraman_level: "0",
            add_time: "",
            last_login_time: "0",
            last_login_location: "0",
            code: "",
            role: "",
            set_top: "0",
            pv: "0",
            available_balance: "0.00",
            balance: "0.00",
            is_login: false,
            zone_info: {}
        },
        /**
         * 安装事件
         * @private
         */
        _setup_events: function() {
            var self = this;
            self.once("success:get_info:fetch", function() {}).on("success:update_info:save", function(response) {}).on("before:get_info:fetch", function(xhr) {
                self._get_info_xhr = xhr;
            }).on("success:get_info:fetch", function(response) {
                self.update_user(response.result_data.data);
            }).on("complete:get_info:fetch", function() {
                delete self._get_info_xhr;
            });
        },
        parse: function(response) {
            if (response.result_data) {
                return response.result_data.data;
            }
            return response;
        },
        initialize: function() {
            var self = this;
            self._setup_events();
        },
        get_zone_info: function(role, user_id) {
            var self = this;
            self.fetch({
                url: global_config.ajax_url.zone_info,
                data: {
                    role: role,
                    user_id: user_id
                },
                cache: false,
                beforeSend: function(xhr, options) {
                    self.trigger("before:get_zone_info:fetch", xhr, options);
                },
                success: function(model, response, options) {
                    self.trigger("success:get_zone_info:fetch", response, options);
                },
                error: function(model, xhr, options) {
                    self.trigger("error:get_zone_info:fetch", model, xhr, options);
                },
                complete: function(xhr, status) {
                    self.trigger("complete:get_zone_info:fetch", xhr, status);
                }
            });
            return self;
        },
        get_info: function() {
            var self = this;
            self.fetch({
                url: self.url,
                cache: false,
                beforeSend: function(xhr, options) {
                    self.trigger("before:get_info:fetch", xhr, options);
                },
                success: function(model, response, options) {
                    self.update_user(response.result_data.data);
                    self.trigger("success:get_info:fetch", response, options);
                },
                error: function(model, xhr, options) {
                    self.trigger("error:get_info:fetch", model, xhr, options);
                },
                complete: function(xhr, status) {
                    self.trigger("complete:get_info:fetch", xhr, status);
                }
            });
        },
        update_info: function(data) {
            var self = this;
            self.fetch({
                url: global_config.ajax_url.update_user_info,
                cache: false,
                data: data,
                beforeSend: function(xhr, options) {
                    self.trigger("before:update_info:save", xhr, options);
                },
                success: function(model, response, options) {
                    self.trigger("success:update_info:save", response, options);
                },
                error: function(model, xhr, options) {
                    self.trigger("error:update_info:save", model, xhr, options);
                },
                complete: function(xhr, status) {
                    self.trigger("complete:update_info:save", xhr, status);
                }
            });
        },
        /*_update_info: function(key, val, options) {
            var self = this;

            var attrs;
            if (key == null || typeof key === 'object') {
                attrs = key;
                options = val;
            } else {
                (attrs = {})[key] = val;
            }

            options || (options = {});

            options.url = global_config.ajax_url.update_user_info;
            var paramData = [];
            for (var key in attrs) {
                paramData.push(key + '=' + attrs[key]);
            }
            options.data = paramData.join('&');
            options.beforeSend = function(xhr, options) {
                self.trigger('before:update_info:save', xhr, options);
            };
            options.success = function(model, response, options) {
                self.trigger('success:update_info:save', response, options);
            };
            options.error = function(model, xhr, options) {
                self.trigger('error:update_info:save', model, xhr, options);
            };
            options.complete = function(xhr, status) {
                self.trigger('complete:update_info:save', xhr, status);
            };

            self.save(attrs, options);

            return self;
        },*/
        update_user: function(data) {
            var self = this;
            utility.storage.set("user", data);
            self.set(data);
        },
        send_recharge: function(data) {
            var self = this;
            var location = window.location;
            if (data.redirect) {
                var redirect_url = location.origin + "/mobile/" + window._page_mode + "#" + data.redirect;
            } else {
                var redirect_url = location.origin + "/mobile/" + window._page_mode + "#mine";
            }
            // 用于刷新整个网页
            if (data.is_refresh) {
                var rand = new Date().getTime();
                var redirect_url = location.origin + "/mobile/" + window._page_mode + "?" + rand + "#" + data.redirect;
            }
            redirect_url = encodeURIComponent(redirect_url);
            data = $.extend(data, {
                redirect_url: redirect_url
            });
            self.fetch({
                url: global_config.ajax_url.recharge,
                data: data,
                cache: false,
                beforeSend: function(xhr, options) {
                    self.trigger("before:send_rechare:fetch", xhr, options);
                },
                success: function(model, response, options) {
                    self.trigger("success:send_rechare:fetch", response, options);
                },
                error: function(model, xhr, options) {
                    self.trigger("error:send_rechare:fetch", model, xhr, options);
                },
                complete: function(xhr, status) {
                    self.trigger("complete:send_rechare:fetch", xhr, status);
                }
            });
        },
        get_date_by_date_id: function(date_id) {
            var self = this;
            self.fetch({
                url: global_config.ajax_url.get_date_by_date_id,
                cache: false,
                data: {
                    date_id: date_id
                },
                beforeSend: function(xhr, options) {
                    self.trigger("before:get_date_by_date_id:fetch", xhr, options);
                },
                success: function(model, response, options) {
                    self.trigger("success:get_date_by_date_id:fetch", response, options);
                },
                error: function(model, xhr, options) {
                    self.trigger("error:get_date_by_date_id:fetch", model, xhr, options);
                },
                complete: function(xhr, status) {
                    self.trigger("complete:get_date_by_date_id:fetch", xhr, status);
                }
            });
        },
        /**
         * 转换角色
         */
        change_role: function() {
            var self = this;
            self.fetch({
                url: global_config.ajax_url.change_role,
                cache: false,
                beforeSend: function(xhr, options) {
                    self.trigger("before:change_role:fetch", xhr, options);
                },
                success: function(model, response, options) {
                    self.trigger("success:change_role:fetch", response, options);
                },
                error: function(model, xhr, options) {
                    self.trigger("error:change_role:fetch", model, xhr, options);
                },
                complete: function(xhr, status) {
                    self.trigger("complete:change_role:fetch", xhr, status);
                }
            });
        },
        /**
         * 注册功能
         * @param data
         */
        reg: function(data) {
            var self = this;
            self.fetch({
                url: global_config.ajax_url.reg,
                data: data,
                cache: false,
                beforeSend: function(xhr, options) {
                    self.trigger("before:reg", xhr, options);
                },
                success: function(collection, response, options) {
                    self.trigger("success:reg", response, options);
                },
                error: function(collection, response, options) {
                    self.trigger("error:reg", response, options);
                },
                complete: function(xhr, status) {
                    self.trigger("complete:reg", xhr, status);
                }
            });
        },
        get_bail_available_balance: function() {
            var self = this;
            self.fetch({
                url: global_config.ajax_url.get_bail_available_balance,
                data: {},
                cache: false,
                beforeSend: function(xhr, options) {
                    self.trigger("before:fetch:get_bail_available_balance", xhr, options);
                },
                success: function(collection, response, options) {
                    self.trigger("success:fetch:get_bail_available_balance", response, options);
                },
                error: function(collection, response, options) {
                    self.trigger("error:fetch:get_bail_available_balance", response, options);
                },
                complete: function(xhr, status) {
                    self.trigger("complete:fetch:get_bail_available_balance", xhr, status);
                }
            });
        },
        get_level_list: function() {
            var self = this;
            self.fetch({
                url: global_config.ajax_url.level_list,
                cache: false,
                beforeSend: function(xhr, options) {
                    self.trigger("before:authentication_list:fetch", xhr, options);
                },
                success: function(collection, response, options) {
                    self.trigger("success:authentication_list:fetch", response, options);
                },
                error: function(collection, response, options) {
                    self.trigger("error:authentication_list:fetch", response, options);
                },
                complete: function(xhr, status) {
                    self.trigger("complete:authentication_list:fetch", xhr, status);
                }
            });
        },
        get_level_detail: function() {
            var self = this;
            self.fetch({
                url: global_config.ajax_url.level_detail,
                cache: false,
                beforeSend: function(xhr, options) {
                    self.trigger("before:authentication_detail:fetch", xhr, options);
                },
                success: function(collection, response, options) {
                    self.trigger("success:authentication_detail:fetch", response, options);
                },
                error: function(collection, response, options) {
                    self.trigger("error:authentication_detail:fetch", response, options);
                },
                complete: function(xhr, status) {
                    self.trigger("complete:authentication_detail:fetch", xhr, status);
                }
            });
        },
        add_authentication_pic: function(data) {
            var self = this;
            self.fetch({
                url: global_config.ajax_url.add_id,
                data: data,
                cache: false,
                beforeSend: function(xhr, options) {
                    self.trigger("before:authentication_pic:fetch", xhr, options);
                },
                success: function(collection, response, options) {
                    self.trigger("success:authentication_pic:fetch", response, options);
                },
                error: function(collection, response, options) {
                    self.trigger("error:authentication_pic:fetch", response, options);
                },
                complete: function(xhr, status) {
                    self.trigger("complete:authentication_pic:fetch", xhr, status);
                }
            });
        }
    });
});

/**
 * 全局参数设置
 */
define("pai/vwx0.0.1-beta/common/global_config-debug", [], function(require, exports) {
    var action_ver = "action";
    // 处理origin兼容性问题
    if (!window.location.origin) {
        window.location.origin = window.location.protocol + "//" + window.location.hostname + (window.location.port ? ":" + window.location.port : "");
    }
    // 根目录地址
    var root_address = window.location.origin;
    var action_name = "action";
    var _action_mode = window._action_mode;
    // 切换版本来使用不同的action
    if (_action_mode == "action_beta") {
        action_name = action_ver;
    } else {
        action_name = action_ver;
    }
    var ajax_root = root_address + "/m/" + action_name + "/";
    var config = {
        ajax_url: {
            find: ajax_root + "find.php",
            hot: ajax_root + "index.php",
            search: ajax_root + "search.php",
            search_result: ajax_root + "search_result.php",
            ad_pic: ajax_root + "ad_pic.php",
            //hot : ajax_root + "index_t.php",
            model_card: ajax_root + "model_card.php",
            location_city: ajax_root + "hot_location.php",
            model_style: ajax_root + "model_style.php",
            pay: ajax_root + "pay.php",
            get_user_info: ajax_root + "get_user_info.php",
            act_list: ajax_root + "act_list.php",
            act_info: ajax_root + "act_info.php",
            pay_return_url: ajax_root + "pay_return.php",
            get_club: ajax_root + "get_club_list.php",
            add_act: ajax_root + "add_act.php",
            //login : 'https://ypays.yueus.com/action/login.php',
            login: ajax_root + "login.php",
            update_user_info: ajax_root + "update_user_info.php",
            get_act_ticket: ajax_root + "get_act_ticket.php",
            get_act_joiners: ajax_root + "get_act_joiners.php",
            join_act: ajax_root + "join_act.php",
            follow_act: ajax_root + "follow_act.php",
            consider_list: ajax_root + "get_date_list.php",
            zone_info: ajax_root + "get_zone_info.php",
            accept_invite: ajax_root + "send_date_ret.php",
            status_list: ajax_root + "get_my_act_list.php",
            withdraw: ajax_root + "withdraw.php",
            bind_act: ajax_root + "bind_act.php",
            reg: ajax_root + "reg.php",
            follow_user: ajax_root + "follow_user.php",
            get_model_card_base_info: ajax_root + "model_card_base_info.php",
            save_model_card: ajax_root + "save_model_card.php",
            recharge: ajax_root + "pay_recharge.php",
            bill_act: ajax_root + "bill_act.php",
            logout: ajax_root + "logout.php",
            fans_or_follow: ajax_root + "get_fans_or_follow.php",
            get_enroll_detail_info: ajax_root + "get_enroll_detail_info.php",
            join_again_act: ajax_root + "join_again_act.php",
            del_enroll_act: ajax_root + "del_enroll_act.php",
            set_event_end_act: ajax_root + "set_event_end_act.php",
            get_date_by_date_id: ajax_root + "get_date_by_date_id.php",
            set_event_cancel_act: ajax_root + "set_event_cancel_act.php",
            verify_code: ajax_root + "verify_code.php",
            a_img: root_address + "/a_img.php",
            add_cameraman_comment: ajax_root + "add_cameraman_comment_act.php",
            add_model_comment: ajax_root + "add_model_comment_act.php",
            add_event_comment: ajax_root + "add_event_comment_act.php",
            get_comment: ajax_root + "get_comment.php",
            get_model_date_rank_list: ajax_root + "get_model_date_rank_list.php",
            get_model_score_rank_list: ajax_root + "get_model_score_rank_list.php",
            sso_login: ajax_root + "sso_login.php",
            change_role: ajax_root + "change_role.php",
            get_act_ticket_detail: ajax_root + "get_act_ticket_detail.php",
            get_location_by_gps: ajax_root + "get_location_by_gps.php",
            get_topic_list: ajax_root + "get_topic_list.php",
            get_bail_available_balance: ajax_root + "get_bail_available_balance.php",
            check_cameraman_require: ajax_root + "check_cameraman_require.php",
            report_model: ajax_root + "add_examine_report.php",
            submit_date_cancel_application: ajax_root + "submit_date_cancel_application.php",
            force_refund: ajax_root + "force_refund.php",
            update_agree_status: ajax_root + "update_agree_status.php",
            bind_alipay: ajax_root + "bind_alipay.php",
            level_list: ajax_root + "level_list.php",
            level_detail: ajax_root + "level_detail.php",
            add_id: ajax_root + "add_id.php",
            get_topic_info: ajax_root + "get_topic_info.php",
            get_scan_code: ajax_root + "get_scan_code.php",
            test_wx_pay: ajax_root + "__get_pay_code.php",
            // 临时测试 测试完毕要删除 hudw 2014.12.2
            auth_act: ajax_root + "auth_act.php"
        },
        romain: root_address + "/m/app",
        debug_romain: root_address + "/m/appbeta",
        default_index_route: "hot",
        _show_footer_hash: {
            hot: 1,
            find: 1,
            mine: 1,
            "act/list": 1,
            message: 1
        },
        fixed_header_pos_page: []
    };
    return config;
});

/**
 * 系统功能处理
 * hdw  2014.9.16
 */
define("pai/vwx0.0.1-beta/common/system-debug", [ "$-debug", "matcha/cookie/1.0.0/cookie-debug", "pai/vwx0.0.1-beta/common/utility-debug", "pai/vwx0.0.1-beta/common/cross_domain_storage-debug", "utility/underscore/1.6.0/underscore-debug", "pai/vwx0.0.1-beta/frame/ua-debug", "pai/vwx0.0.1-beta/common/global_config-debug", "pai/vwx0.0.1-beta/common/I_APP-debug", "utility/backbone/1.1.2/backbone-debug", "pai/vwx0.0.1-beta/ui/m_alert/view-debug", "pai/vwx0.0.1-beta/common/view-debug", "utility/handlebars/1.3.0/runtime-debug", "pai/vwx0.0.1-beta/frame/page_control-debug", "pai/vwx0.0.1-beta/frame/page-debug", "utility/zepto/modules/data/1.1.4/data-debug", "utility/hammer/plugins/jquery.hammer/1.1.3/jquery.hammer-debug" ], function(require, exports, module) {
    var $ = require("$-debug");
    var cookie = require("matcha/cookie/1.0.0/cookie-debug");
    var login_id = parseInt(cookie.get("member_id"));
    var utility = require("pai/vwx0.0.1-beta/common/utility-debug");
    var global_config = require("pai/vwx0.0.1-beta/common/global_config-debug");
    var App = require("pai/vwx0.0.1-beta/common/I_APP-debug");
    var page_control = require("pai/vwx0.0.1-beta/frame/page_control-debug");
    var system = {
        sso_login: function(options) {
            var options = options || {};
            utility.ajax_request({
                url: global_config.ajax_url.sso_login,
                data: options.data,
                success: function(response) {
                    if (response.result_data.user_info) {
                        utility.user.update_user(response.result_data.user_info);
                        utility.login_id = response.result_data.user_id;
                        var icon = response.result_data.user_info.user_icon;
                        if (typeof options.success == "function") {
                            options.success.call(this, {
                                code: 1,
                                data: response,
                                msg: "登录成功"
                            });
                        }
                        var params = {
                            pocoid: utility.login_id,
                            username: utility.user.get("nickname"),
                            icon: icon
                        };
                        if (App.isPaiApp) {
                            App.login(params);
                            // 保存设备信息
                            App.save_device();
                        }
                        if (!utility.user.get("role")) {
                            /**
                             * 登录成功，但用户信息没有角色数据，此用户为有poco_id但没有执行过约拍流程
                             * 应该根据选择的角色重新跑约拍流程
                             */
                            if (self.get("is_model_first_time")) {
                                page_control.navigate_to_page("model_date/model_card/0");
                            } else {
                                page_control.navigate_to_page("mine/profile/" + utility.login_id + "/1");
                            }
                        } else {
                            /**
                             * 登录成功，并且有角色数据，此用户是约拍的用户
                             * 但要区分进来登录的页面是从封面页还是其他页面
                             */
                            if (utility.storage.get("is_frist_time_open_app")) {
                                page_control.navigate_to_page(global_config.default_index_route);
                            } else {
                                page_control.back();
                            }
                        }
                    } else {
                        if (typeof options.success == "function") {
                            options.success.call(this, {
                                code: 0,
                                data: response,
                                msg: "登录失败"
                            });
                        }
                    }
                },
                error: function() {
                    if (typeof options.error == "function") {
                        options.error.call(this);
                    }
                }
            });
        },
        logout: function(params) {
            var params = params || {};
            utility.ajax_request({
                url: global_config.ajax_url.logout,
                data: {
                    user_id: utility.login_id
                },
                success: function(data) {
                    if (data.result_data.code) {
                        utility.storage.set("user", "");
                        utility.storage.set("user-role", "");
                        var cookieOptions = {
                            domain: "yueus.com",
                            path: "/"
                        };
                        cookie.del("session_id", cookieOptions);
                        cookie.del("g_session_id", cookieOptions);
                        cookie.del("member_id", cookieOptions);
                        cookie.del("fav_userid", cookieOptions);
                        cookie.del("session_auth_hash", cookieOptions);
                        if (App.isPaiApp) {
                            App.logout();
                        }
                        typeof params.success == "function" && params.success.call(this, data);
                        var url = window.location.origin + window.location.pathname;
                        setTimeout(function() {
                            console.log("refresh page");
                            window.location.href = url;
                        }, 500);
                    } else {
                        alert(data.result_data.msg);
                        if (typeof params.error == "function") {
                            params.error.call(this, data);
                        }
                    }
                },
                error: function() {
                    if (typeof params.error == "function") {
                        params.error.call(this);
                    }
                }
            });
        },
        update_mine_msg: function(data) {
            var sys_msg = data.sys_msg;
            var act_msg = data.act_msg;
            var $notice_list = $('[data-role="ui-mine-msg-container"]');
            var unread_act_msg = utility.storage.get("unread_act_msg");
            var $sq_notice_container = $('[data-role="notice_security_container"]');
            if ($notice_list.length > 0) {
                var $msg_num = $notice_list.find('[data-role="notice_msg_num"]');
                var notice_security_num = $notice_list.find('[data-role="notice_security_num"]');
                var $notice_security_container = $notice_list.find('[data-role="notice_security_container"]');
                if (sys_msg > 0) {
                    //$sq_notice_container.removeClass('fn-hide');
                    $msg_num.removeClass("fn-hide").html(sys_msg);
                } else {
                    //$sq_notice_container.addClass('fn-hide');
                    $msg_num.addClass("fn-hide").html(0);
                }
                console.log(act_msg, unread_act_msg);
            }
        }
    };
    module.exports = system;
});

/**
 * App 接口
 */
define("pai/vwx0.0.1-beta/common/I_APP-debug", [ "$-debug", "utility/backbone/1.1.2/backbone-debug", "pai/vwx0.0.1-beta/common/utility-debug", "pai/vwx0.0.1-beta/common/cross_domain_storage-debug", "matcha/cookie/1.0.0/cookie-debug", "utility/underscore/1.6.0/underscore-debug", "pai/vwx0.0.1-beta/frame/ua-debug", "pai/vwx0.0.1-beta/common/global_config-debug", "pai/vwx0.0.1-beta/ui/m_alert/view-debug", "pai/vwx0.0.1-beta/common/view-debug", "utility/handlebars/1.3.0/runtime-debug", "pai/vwx0.0.1-beta/frame/page_control-debug", "pai/vwx0.0.1-beta/frame/page-debug", "utility/zepto/modules/data/1.1.4/data-debug", "utility/hammer/plugins/jquery.hammer/1.1.3/jquery.hammer-debug" ], function(require, exports, module) {
    var $ = require("$-debug");
    var Backbone = require("utility/backbone/1.1.2/backbone-debug");
    var utility = require("pai/vwx0.0.1-beta/common/utility-debug");
    var global_config = require("pai/vwx0.0.1-beta/common/global_config-debug");
    var m_alert = require("pai/vwx0.0.1-beta/ui/m_alert/view-debug");
    var page_control = require("pai/vwx0.0.1-beta/frame/page_control-debug");
    var appBridge = window.PocoWebViewJavascriptBridge;
    var isPaiApp = typeof appBridge !== "undefined";
    var prefix = "poco.yuepai.";
    if (isPaiApp) {
        appBridge.init();
        // 留接口比app调用
        var pocoAppEventTrigger = $.extend({}, Backbone.Events);
        window.pocoAppEventTrigger = function() {
            return pocoAppEventTrigger.trigger.apply(pocoAppEventTrigger, arguments);
        };
    }
    var App = {
        isPaiApp: isPaiApp,
        on: function() {
            if (!App.isPaiApp) {
                return;
            }
            return pocoAppEventTrigger.on.apply(pocoAppEventTrigger, arguments);
        },
        off: function() {
            if (!App.isPaiApp) {
                return;
            }
            return pocoAppEventTrigger.off.apply(pocoAppEventTrigger, arguments);
        },
        once: function() {
            if (!App.isPaiApp) {
                return;
            }
            return pocoAppEventTrigger.once.apply(pocoAppEventTrigger, arguments);
        },
        /**
         * 私信
         * @param options
         */
        chat: function(options) {
            var self = this;
            appBridge.callHandler(prefix + "function.chat", options, function() {
                typeof options.callback == "function" && options.callback.call(this);
            });
        },
        /**
         * 扫二维码
         */
        qrcodescan: function(options) {
            var self = this;
            var options = options || {};
            var is_nav_page = options.is_nav_page == null ? true : false;
            var success = options.success || function() {};
            appBridge.callHandler(prefix + "function.qrcodescan", options, function(data) {
                if (data.code == "0000") {
                    // 创建location对象
                    var a = document.createElement("a");
                    a.href = data.scanresult;
                    if (!window.location.origin) {
                        window.location.origin = window.location.protocol + "//" + window.location.hostname + (window.location.port ? ":" + window.location.port : "");
                    }
                    // 替换正确的路由
                    var href = a.href.replace(a.origin, window.location.origin);
                    console.log(href);
                    utility.ajax_request({
                        url: href,
                        beforeSend: function() {
                            m_alert.show("发送中", "right");
                        },
                        success: function(response) {
                            var data = response.result_data;
                            m_alert.show(data.msg, "right");
                            if (data.code > 0) {
                                // 设置扫描后进行跳页
                                if (is_nav_page) {
                                    page_control.navigate_to_page(data.type);
                                } else {
                                    success.call(this, data);
                                }
                            }
                        },
                        error: function() {
                            m_alert.show("网络异常", "error");
                        }
                    });
                }
            });
        },
        /**
         * 检查是否登录
         * @param callback
         */
        check_login: function(callback) {
            appBridge.callHandler(prefix + "info.login", {}, function(poco_id) {
                callback.call(this, poco_id);
            });
        },
        /**
         * 登录
         */
        login: function(options) {
            var self = this;
            var options = options || {};
            appBridge.callHandler(prefix + "function.login", {
                pocoid: options.pocoid,
                username: options.username,
                icon: options.icon
            }, function() {});
        },
        /**
         * 退出登录
         * @param options
         */
        logout: function() {
            var self = this;
            console.log("APP logout");
            appBridge.callHandler(prefix + "function.logout", {}, function() {});
        },
        /**
         * 保存设备
         */
        save_device: function(tag, callback) {
            var self = this;
            var tag = tag || false;
            appBridge.callHandler(prefix + "info.device", {}, function(data) {
                console.log(data);
                data = $.extend(data, {
                    user_id: utility.login_id
                });
                if (!tag) {
                    utility.ajax_request({
                        url: global_config.ajax_url.a_img,
                        data: data
                    });
                } else {
                    if (typeof callback == "function") {
                        callback.call(this, data);
                    }
                }
            });
        },
        /**
         * 获取聊天信息
         * @param callback
         */
        get_chat_info: function(callback) {
            var self = this;
            appBridge.callHandler(prefix + "info.chat", {}, function(data) {
                if (typeof callback == "function") {
                    callback.call(this, data);
                }
            });
        },
        /**
         * 获取登录信息
         * @param success
         */
        get_login_info: function(success) {
            var self = this;
            appBridge.callHandler(prefix + "info.login", {}, function(data) {
                if (typeof success == "function") {
                    success.call(this, data);
                }
            });
        },
        /**
         * 支付宝支付
         * @param params
         */
        alipay: function(params, callback) {
            var self = this;
            if (!params) {
                alert("no params");
                return;
            }
            console.log(params);
            appBridge.callHandler(prefix + "function.alipay", params, function(data) {
                console.log("======支付宝支付回调参数======");
                console.log(data);
                if (typeof callback == "function") {
                    callback.call(this, data);
                }
            });
        },
        /**
         * 微信支付
         * @param params
         */
        wxpay: function(params, callback) {
            var self = this;
            if (!params) {
                alert("no params");
                return;
            }
            console.log(params);
            appBridge.callHandler(prefix + "function.wxpay", params, function(data) {
                console.log("======微信支付回调参数======");
                console.log(data);
                if (typeof callback == "function") {
                    callback.call(this, data);
                }
            });
        },
        /**
         * 上传图片
         * @param params
         * @param callback
         */
        upload_img: function(type, params, callback) {
            var self = this;
            console.log("upload img");
            var url = "";
            var photosize = params.photosize || 640;
            //var domain = 'http://imgup-yue.yueus.com';
            var is_wifi = window.APP_NET_STATUS == "wifi" ? "-wifi" : "";
            console.log("net status:" + window.APP_NET_STATUS);
            var icon_domain = "http://sendmedia" + is_wifi + ".yueus.com:8078/";
            var pics_domain = "http://sendmedia" + is_wifi + ".yueus.com:8079/";
            if (!params) {
                alert("no params");
                return;
            }
            if (!type) {
                alert("no type");
                return;
            }
            var operation = "";
            var src_opts = "";
            switch (type) {
              case "header_icon":
                //url = domain + '/ultra_upload_service/yueyue_upload_user_icon_act.php';
                url = icon_domain + "icon.cgi";
                operation = "modify_headicon";
                src_opts = "camera_album";
                break;

              case "single_img":
                //url = domain + '/ultra_upload_service/yueyue_upload_act.php';
                url = pics_domain + "upload.cgi";
                src_opts = "camera_album";
                break;

              case "multi_img":
                /*if(params.is_zip == 1)
                     {
                         url = domain + '/ultra_upload_service/yueyue_multi_upload_act.php';
                     }
                     else
                     {
                        url = domain +  '/ultra_upload_service/yueyue_upload_act.php';
                     }*/
                url = pics_domain + "upload.cgi";
                src_opts = "camera_album";
                break;
            }
            params = $.extend(params, {
                url: url,
                photosize: photosize,
                operation: operation,
                src_opts: src_opts
            });
            console.log("-----upload img params-----");
            console.log(params);
            appBridge.callHandler(prefix + "function.uploadpic", params, function(data) {
                callback.call(this, data);
            });
        },
        /**
         * 打开聊天列表
         */
        show_chat_list: function() {
            appBridge.callHandler(prefix + "function.openchatlist", {}, function() {});
        },
        /**
         * 调试模式
         * url：待调试的首页链接
           cache_onoff：是否开启缓存，0关闭，1开启
           debug：0/1 ,是否启用调试模式，0关闭，1开启
         */
        debug: function(options) {
            var data = data || {};
            if (options.cache) {
                data.url = global_config.romain;
            } else {
                data.url = global_config.debug_romain;
            }
            data.debug = options.debug ? 1 : 0;
            data.cache_onoff = options.cache ? 1 : 0;
            appBridge.callHandler(prefix + "function.debug", data, function() {});
        },
        /**
         * 放大图
         * @param data
         */
        show_alumn_imgs: function(data) {
            var data = data || {};
            appBridge.callHandler(prefix + "function.show_album_imgs", data, function() {});
        },
        /**
         * 获取网络状态
         * @param callback
         */
        get_netstatus: function(callback) {
            var data = data || {};
            appBridge.callHandler(prefix + "info.netstatus", {}, function(data) {
                //type off、wifi、mobile
                if (typeof callback == "function") {
                    callback.call(this, data);
                }
            });
        },
        /**
         * 第三方登录
         * @param params
         * @param callback
         * 传入参数：
           platform：qzone/sina
           返回参数：
           code：0000-成功，1000-失败
           message：错误信息
           uid：用户id
           token：令牌
           tokensecret：
         */
        sso_login: function(params, callback) {
            appBridge.callHandler(prefix + "function.bind_account", params, function(data) {
                if (typeof callback == "function") {
                    callback.call(this, data);
                }
            });
        },
        /**
         * 获取地理信息
         * @param params
         * @param callback
         * return
         *
            code：0000-成功，1000-失败，1002-超时
         　　long：经度
         　　lat：纬度
         */
        get_gps: function(params, callback) {
            appBridge.callHandler(prefix + "function.getgps", params, function(data) {
                if (typeof callback == "function") {
                    callback.call(this, data);
                }
            });
        },
        /**
         * 软件设置
           传入参数：
           msgvibrate：收到消息时手机震动 0/1
           msgsound：收到消息时声音提示 0/1
           返回参数：无
         * @param params
         * @param callback
         */
        set_setting: function(params, callback) {
            appBridge.callHandler(prefix + "function.setting", params, function(data) {
                if (typeof callback == "function") {
                    callback.call(this, data);
                }
            });
        },
        /**
         * 获取软件设置

           传入参数：无
           返回参数：
           msgvibrate：收到消息时手机震动 0/1
           msgsound：收到消息时声音提示 0/1
           remote_notify_setting：是否接收消息 0/1 (iphone)
         * @param params
         * @param callback
         */
        get_setting: function(params, callback) {
            appBridge.callHandler(prefix + "info.setting", params, function(data) {
                console.log(data);
                if (typeof callback == "function") {
                    callback.call(this, data);
                }
            });
        },
        /**
         * 点击过去清除缓存
         */
        clear_cache: function() {
            appBridge.callHandler(prefix + "function.clearcache", {}, function(data) {});
        },
        /**
         * 移走封面图
         */
        remove_front: function(page) {
            var hash = utility.getHash() || "";
            var highlight = "";
            // 特殊处理 从支付宝跳转过来的页面
            if (/mine\/payment_no_/.test(hash)) {
                hash = "mine";
            }
            // 显示底部的路由
            if (global_config._show_footer_hash[hash]) {
                highlight = hash;
            }
            console.log("function.notifypageready hash:" + hash);
            appBridge.callHandler(prefix + "function.notifypageready", {
                page: hash,
                highlight: highlight
            }, function(data) {});
        },
        /**
         * 移走底部bar
         */
        show_bottom_bar: function(show) {
            console.log("function.showbottombar");
            appBridge.callHandler(prefix + "function.showbottombar", {
                show: show
            }, function(data) {});
        },
        /**
         *  检查app更新
            poco.yuepai.function.checkupdate
            传入参数：无
            返回参数：无
         */
        check_update: function() {
            appBridge.callHandler(prefix + "function.checkupdate", {}, function(data) {});
        },
        /**
         *   模拟app返回键
             poco.yuepai.function.back
             传入参数：无
             返回参数：无
         */
        app_back: function() {
            console.log("App Back");
            appBridge.callHandler(prefix + "function.back", {}, function(data) {});
        },
        /**
         * 获取app信息 主要用于显示红点
         */
        app_info: function(callback) {
            console.log("App app-info");
            appBridge.callHandler(prefix + "info.app", {}, function(data) {
                console.log(data);
                if (typeof callback == "function") {
                    callback.call(this, data);
                }
            });
        }
    };
    module.exports = App;
    function isFunction(o) {
        return typeof o === "function";
    }
});

/**
 * 提示层
 * hdw 2014.8.29
 */
define("pai/vwx0.0.1-beta/ui/m_alert/view-debug", [ "$-debug", "pai/vwx0.0.1-beta/common/view-debug", "utility/backbone/1.1.2/backbone-debug", "utility/handlebars/1.3.0/runtime-debug", "pai/vwx0.0.1-beta/common/utility-debug", "pai/vwx0.0.1-beta/common/cross_domain_storage-debug", "matcha/cookie/1.0.0/cookie-debug", "utility/underscore/1.6.0/underscore-debug", "pai/vwx0.0.1-beta/frame/ua-debug" ], function(require, exports, module) {
    var $ = require("$-debug");
    var View = require("pai/vwx0.0.1-beta/common/view-debug");
    var utility = require("pai/vwx0.0.1-beta/common/utility-debug");
    var tpl = require("pai/vwx0.0.1-beta/ui/m_alert/tpl/m_alert-debug.handlebars");
    module.exports = new (View.extend({
        attrs: {
            className: "ui-alert"
        },
        events: {
            /*'webkitTransitionEnd': '_transition_end',
            'transitionEnd': '_transition_end'*/
            webkitTransitionEnd: "_transition_end",
            transitionend: "_transition_end"
        },
        _setup_event: function() {
            var self = this;
        },
        setup: function() {
            var self = this;
            self._setup_event();
        },
        /**
         * 显示浮层
         * @param text
         * @param type
         * @param options
         * @returns {*}
         */
        show: function(text, type, options) {
            var self = this;
            text = String(text);
            if (!text) {
                return;
            }
            if (typeof type !== "string") {
                options = type;
                type = "";
            }
            if (!self.rendered) {
                self.render();
            }
            options || (options = {});
            var iconClass = "icon ";
            switch (type) {
              case "right":
                iconClass += "icon-check-circle";
                break;

              case "error":
                iconClass += "icon-info-circle";
                break;

              case "loading":
                iconClass += "icon-spinner ui-loading-animate";
                break;

              default:
                iconClass += "";
                break;
            }
            console.log(type);
            var htmlStr = tpl({
                text: text,
                iconClass: iconClass
            });
            self.$el.html(htmlStr).removeClass("fn-hide");
            clearTimeout(self._clearTimer);
            clearTimeout(self._triggerHideTimer);
            var delay_time = options.delay || 0;
            if (utility.int(delay_time) > -1) {
                self._triggerHideTimer = setTimeout(function() {
                    self.hide();
                }, options.delay || 2400);
            }
            self._visible = true;
            return self;
        },
        /**
         * 隐藏浮层
         * @returns {*}
         */
        hide: function(options) {
            options || (options = {});
            var self = this;
            clearTimeout(self._clearTimer);
            clearTimeout(self._triggerHideTimer);
            if (utility.int(options.delay) === -1) {
                self.$el.addClass("fn-hide");
            } else {
                self._clearTimer = setTimeout(function() {
                    if (self._visible) {
                        //self.$el.addClass('fadeout');
                        self.$el.addClass("fn-hide").removeClass("fadeout");
                        self._visible = false;
                    }
                }, options.delay);
            }
            return self;
        },
        _transition_end: function(event) {
            var self = this;
            if (event.propertyName == "opacity" && !self._visible) {
                self.$el.addClass("fn-hide").removeClass("fadeout");
            }
        }
    }))();
});

define("pai/vwx0.0.1-beta/common/view-debug", [ "$-debug", "utility/backbone/1.1.2/backbone-debug", "utility/handlebars/1.3.0/runtime-debug" ], function(require, exports, module) {
    var $ = require("$-debug");
    var Backbone = require("utility/backbone/1.1.2/backbone-debug");
    var Handlebars = require("utility/handlebars/1.3.0/runtime-debug");
    // 实例缓存
    var cachedInstances = {};
    // 编译过的模版缓存
    var compiledTemplates = {};
    /**
     * 默认属性
     * @type {{id: null, className: null, template: null, templateModel: null, parentNode: HTMLElement}}
     */
    var defaultAttr = {
        // 基本属性
        id: null,
        className: null,
        // 默认模板
        template: null,
        // 默认模版数据模型
        templateModel: null,
        // 组件的默认父节点
        parentNode: document.body
    };
    var View = Backbone.View.extend({
        /**
         * Handlebars 的 helpers
         */
        templateHelpers: null,
        /**
         * Handlebars 的 partials
         */
        templatePartials: null,
        /**
         * 渲染Handlebars模版
         * @param template
         * @param templateModel
         * @returns {*}
         * @private
         */
        _renderElement: function(template, templateModel) {
            var self = this;
            template || (template = self.get("template"));
            // 模版套入的数据
            templateModel || (templateModel = self.get("templateModel")) || (templateModel = {});
            if (templateModel.toJSON) {
                templateModel = templateModel.toJSON();
                console.log(templateModel);
            }
            // handlebars runtime
            if (isFunction(template)) {
                return template(templateModel, {
                    helpers: self.templateHelpers,
                    partials: compilePartial(self.templatePartials)
                });
            }
            var helpers = self.templateHelpers;
            var partials = self.templatePartials;
            // 注册 helpers
            if (helpers) {
                var helper;
                for (helper in helpers) {
                    if (helpers.hasOwnProperty(helper)) {
                        Handlebars.registerHelper(helper, helpers[helper]);
                    }
                }
            }
            // 注册 partials
            if (partials) {
                var partial;
                for (partial in partials) {
                    if (partials.hasOwnProperty(partial)) {
                        Handlebars.registerPartial(partial, partials[partial]);
                    }
                }
            }
            var compiledTemplate = compiledTemplates[template];
            if (!compiledTemplate) {
                compiledTemplate = compiledTemplates[template] = Handlebars.compile(template);
            }
            // 生成 html
            var html = compiledTemplate(templateModel);
            // 卸载 helpers
            if (helpers) {
                var helper;
                for (helper in helpers) {
                    if (helpers.hasOwnProperty(helper)) {
                        delete Handlebars.helpers[helper];
                    }
                }
            }
            // 卸载 partials
            if (partials) {
                var partial;
                for (partial in partials) {
                    if (partials.hasOwnProperty(partial)) {
                        delete Handlebars.partials[partial];
                    }
                }
            }
            return html;
        },
        /**
         * 从模版上制造element
         * @private
         */
        _parseElementFromTemplate: function() {
            var self = this;
            // template 支持 id 选择器
            var $template, template = self.get("template");
            if (/^#/.test(template) && ($template = $(template))) {
                template = $template.html();
                self.set("template", template);
            }
            self.el = self._renderElement(template);
        },
        /**
         * 覆盖方法(Backbone.View._ensureElement)
         * @private
         */
        _ensureElement: function() {},
        /**
         * 构建element
         * @private
         */
        _parseElement: function() {
            var self = this;
            var isTemplate = !self.el && self.get("template");
            // 未传入 el 时，从 template 构建
            if (isTemplate) {
                self._parseElementFromTemplate();
                self.setElement(self.el, false);
                // 是否由 template 初始化
                self._isTemplate = true;
            } else {
                Backbone.View.prototype._ensureElement.apply(self);
            }
            // 如果对应的 DOM 元素不存在，则报错
            if (!self.$el || !self.$el[0]) {
                throw new Error("element is invalid");
            }
        },
        /**
         * 让 element 与 View 实例建立关联
         * @private
         */
        _stamp: function() {
            var self = this;
            var cid = self.cid;
            cachedInstances[cid] = self;
        },
        _initAttrs: function(options) {
            var self = this;
            // 组件属性与默认属性融合
            self.attrs = $.extend(true, {}, defaultAttr, self.attrs || {}, options);
        },
        /**
         * 初始化
         * @param options
         * @returns {View}
         */
        initialize: function(options) {
            options || (options = {});
            var self = this;
            // 初始化属性
            self._initAttrs(options);
            // 兼容 backbone.view
            var elementId = self.get("id");
            if (elementId) {
                self.id = elementId;
            }
            var elementClassName = self.get("className");
            if (elementClassName) {
                self.className = elementClassName;
            }
            // 构建 element
            self._parseElement();
            // 子类自定义的初始化
            self.setup();
            // 保存实例信息
            self._stamp();
            return self;
        },
        get: function(name) {
            return this.attrs[name] || null;
        },
        set: function(name, value) {
            var self = this;
            self.attrs[name] = value;
            return self;
        },
        /**
         * 提供给子类覆盖的初始化方法
         */
        setup: function() {},
        /**
         * 渲染
         * @returns {View}
         */
        render: function(type) {
            var self = this;
            if (!self.rendered) {
                self.rendered = true;
            }
            var parentNode = self.get("parentNode");
            if (parentNode && !isInDocument(self.el)) {
                if (type && type == "prepend") {
                    parentNode.prepend(self.$el);
                } else {
                    self.$el.appendTo(parentNode);
                }
            }
            return self;
        },
        /**
         * 移除
         * @returns {View}
         */
        remove: function() {
            var self = this;
            delete cachedInstances[self.cid];
            // 注销所有事件,Zepto的remove只是单纯移除DOM
            self.undelegateEvents().$el.off();
            Backbone.View.prototype.remove.apply(self);
            return self;
        },
        /**
         * 销毁实例
         * @returns {View}
         */
        destroy: function() {
            var self = this;
            for (var p in self) {
                if (self.hasOwnProperty(p)) {
                    delete self[p];
                }
            }
            // 此方法只能运行一次
            self.destroy = function() {};
            return self;
        }
    });
    module.exports = View;
    // For memory leak
    $(window).unload(function() {
        var cid, instance;
        for (cid in cachedInstances) {
            instance = cachedInstances[cid];
            instance && instance.destroy();
        }
    });
    // Helps
    // ------------------------------
    function isFunction(o) {
        return typeof o === "function";
    }
    function isInDocument(element) {
        return $.contains(document.documentElement, element);
    }
    function compilePartial(partials) {
        if (!partials) return {};
        var result = {}, name, partial;
        for (name in partials) {
            partial = partials[name];
            result[name] = isFunction(partial) ? partial : Handlebars.compile(partial);
        }
        return result;
    }
    module.exports = View;
});

define("pai/vwx0.0.1-beta/ui/m_alert/tpl/m_alert-debug.handlebars", [ "utility/handlebars/1.3.0/runtime-debug" ], function(require, exports, module) {
    var Handlebars = require("utility/handlebars/1.3.0/runtime-debug");
    var template = Handlebars.template;
    module.exports = template(function(Handlebars, depth0, helpers, partials, data) {
        this.compilerInfo = [ 4, ">= 1.0.0" ];
        helpers = helpers || {};
        for (var key in Handlebars.helpers) {
            helpers[key] = helpers[key] || Handlebars.helpers[key];
        }
        data = data || {};
        var buffer = "", stack1, helper, functionType = "function", escapeExpression = this.escapeExpression;
        buffer += '<div class="ui-alert-container" data-role="container">\r\n    <div class="ui-alert-content" data-role="content">\r\n        <i class="';
        if (helper = helpers.iconClass) {
            stack1 = helper.call(depth0, {
                hash: {},
                data: data
            });
        } else {
            helper = depth0 && depth0.iconClass;
            stack1 = typeof helper === functionType ? helper.call(depth0, {
                hash: {},
                data: data
            }) : helper;
        }
        buffer += escapeExpression(stack1) + '"></i><span>';
        if (helper = helpers.text) {
            stack1 = helper.call(depth0, {
                hash: {},
                data: data
            });
        } else {
            helper = depth0 && depth0.text;
            stack1 = typeof helper === functionType ? helper.call(depth0, {
                hash: {},
                data: data
            }) : helper;
        }
        buffer += escapeExpression(stack1) + "</span>\r\n    </div>\r\n</div>";
        return buffer;
    });
});

/**
 * Created by hdw on 2014/12/21.
 * 微信接口
 */
define("pai/vwx0.0.1-beta/common/I_WX-debug", [ "$-debug", "utility/backbone/1.1.2/backbone-debug", "pai/vwx0.0.1-beta/common/utility-debug", "pai/vwx0.0.1-beta/common/cross_domain_storage-debug", "matcha/cookie/1.0.0/cookie-debug", "utility/underscore/1.6.0/underscore-debug", "pai/vwx0.0.1-beta/frame/ua-debug", "pai/vwx0.0.1-beta/common/global_config-debug", "pai/vwx0.0.1-beta/ui/m_alert/view-debug", "pai/vwx0.0.1-beta/common/view-debug", "utility/handlebars/1.3.0/runtime-debug", "pai/vwx0.0.1-beta/frame/page_control-debug", "pai/vwx0.0.1-beta/frame/page-debug", "utility/zepto/modules/data/1.1.4/data-debug", "utility/hammer/plugins/jquery.hammer/1.1.3/jquery.hammer-debug" ], function(require, exports, module) {
    var $ = require("$-debug");
    var Backbone = require("utility/backbone/1.1.2/backbone-debug");
    var utility = require("pai/vwx0.0.1-beta/common/utility-debug");
    var global_config = require("pai/vwx0.0.1-beta/common/global_config-debug");
    var m_alert = require("pai/vwx0.0.1-beta/ui/m_alert/view-debug");
    var page_control = require("pai/vwx0.0.1-beta/frame/page_control-debug");
    /**
     * 定义WeixinApi
     */
    var WeixinApi = {
        version: 3.2
    };
    // 将WeixinApi暴露到window下：全局可使用，对旧版本向下兼容
    window.WeixinApi = WeixinApi;
    /////////////////////////// CommonJS /////////////////////////////////
    if (typeof define === "function" && (define.amd || define.cmd)) {
        if (define.amd) {
            // AMD 规范，for：requirejs
            define(function() {
                return WeixinApi;
            });
        } else if (define.cmd) {
            // CMD 规范，for：seajs
            define(function(require, exports, module) {
                module.exports = WeixinApi;
            });
        }
    }
    /**
     * 对象简单继承，后面的覆盖前面的，继承深度：deep=1
     * @private
     */
    var _extend = function() {
        var result = {}, obj, k;
        for (var i = 0, len = arguments.length; i < len; i++) {
            obj = arguments[i];
            if (typeof obj === "object") {
                for (k in obj) {
                    result[k] = obj[k];
                }
            }
        }
        return result;
    };
    /**
     * 内部私有方法，分享用
     * @private
     */
    var _share = function(cmd, data, callbacks) {
        callbacks = callbacks || {};
        // 分享过程中的一些回调
        var progress = function(resp) {
            switch (true) {
              // 用户取消
                case /\:cancel$/i.test(resp.err_msg):
                callbacks.cancel && callbacks.cancel(resp);
                break;

              // 发送成功
                case /\:(confirm|ok)$/i.test(resp.err_msg):
                callbacks.confirm && callbacks.confirm(resp);
                break;

              // fail　发送失败
                case /\:fail$/i.test(resp.err_msg):
              default:
                callbacks.fail && callbacks.fail(resp);
                break;
            }
            // 无论成功失败都会执行的回调
            callbacks.all && callbacks.all(resp);
        };
        // 执行分享，并处理结果
        var handler = function(theData, argv) {
            // 新的分享接口，单独处理
            if (cmd.menu === "menu:general:share") {
                // 如果是收藏操作，并且在wxCallbacks中配置了favorite为false，则不执行回调
                if (argv.shareTo == "favorite" || argv.scene == "favorite") {
                    if (callbacks.favorite === false) {
                        return argv.generalShare(theData, function() {});
                    }
                }
                argv.generalShare(theData, progress);
            } else {
                WeixinJSBridge.invoke(cmd.action, theData, progress);
            }
        };
        // 监听分享操作
        WeixinJSBridge.on(cmd.menu, function(argv) {
            if (callbacks.async && callbacks.ready) {
                WeixinApi["_wx_loadedCb_"] = callbacks.dataLoaded || new Function();
                if (WeixinApi["_wx_loadedCb_"].toString().indexOf("_wx_loadedCb_") > 0) {
                    WeixinApi["_wx_loadedCb_"] = new Function();
                }
                callbacks.dataLoaded = function(newData) {
                    // 这种情况下，数据仍需加工
                    var theData = _extend(data, newData);
                    if (cmd.menu == "menu:share:timeline" || cmd.menu == "menu:general:share" && argv.shareTo == "timeline") {
                        theData = {
                            appid: theData.appId ? theData.appId : "",
                            img_url: theData.imgUrl,
                            link: theData.link,
                            desc: theData.title,
                            title: theData.desc,
                            img_width: "640",
                            img_height: "640"
                        };
                    }
                    WeixinApi["_wx_loadedCb_"](theData);
                    handler(theData, argv);
                };
                // 然后就绪
                if (!(argv && (argv.shareTo == "favorite" || argv.scene == "favorite") && callbacks.favorite === false)) {
                    callbacks.ready && callbacks.ready(argv, data);
                }
            } else {
                // 就绪状态
                if (!(argv && (argv.shareTo == "favorite" || argv.scene == "favorite") && callbacks.favorite === false)) {
                    callbacks.ready && callbacks.ready(argv, data);
                }
                handler(data, argv);
            }
        });
    };
    /**
     * 分享到微信朋友圈
     * @param       {Object}    data       待分享的信息
     * @p-config    {String}    appId      公众平台的appId（服务号可用）
     * @p-config    {String}    imgUrl     图片地址
     * @p-config    {String}    link       链接地址
     * @p-config    {String}    desc       描述
     * @p-config    {String}    title      分享的标题
     *
     * @param       {Object}    callbacks  相关回调方法
     * @p-config    {Boolean}   async                   ready方法是否需要异步执行，默认false
     * @p-config    {Function}  ready(argv, data)       就绪状态
     * @p-config    {Function}  dataLoaded(data)        数据加载完成后调用，async为true时有用，也可以为空
     * @p-config    {Function}  cancel(resp)    取消
     * @p-config    {Function}  fail(resp)      失败
     * @p-config    {Function}  confirm(resp)   成功
     * @p-config    {Function}  all(resp)       无论成功失败都会执行的回调
     */
    WeixinApi.shareToTimeline = function(data, callbacks) {
        _share({
            menu: "menu:share:timeline",
            action: "shareTimeline"
        }, {
            appid: data.appId ? data.appId : "",
            img_url: data.imgUrl,
            link: data.link,
            desc: data.title,
            title: data.desc,
            img_width: "640",
            img_height: "640"
        }, callbacks);
    };
    /**
     * 发送给微信上的好友
     * @param       {Object}    data       待分享的信息
     * @p-config    {String}    appId      公众平台的appId（服务号可用）
     * @p-config    {String}    imgUrl     图片地址
     * @p-config    {String}    link       链接地址
     * @p-config    {String}    desc       描述
     * @p-config    {String}    title      分享的标题
     *
     * @param       {Object}    callbacks  相关回调方法
     * @p-config    {Boolean}   async                   ready方法是否需要异步执行，默认false
     * @p-config    {Function}  ready(argv, data)       就绪状态
     * @p-config    {Function}  dataLoaded(data)        数据加载完成后调用，async为true时有用，也可以为空
     * @p-config    {Function}  cancel(resp)    取消
     * @p-config    {Function}  fail(resp)      失败
     * @p-config    {Function}  confirm(resp)   成功
     * @p-config    {Function}  all(resp)       无论成功失败都会执行的回调
     */
    WeixinApi.shareToFriend = function(data, callbacks) {
        _share({
            menu: "menu:share:appmessage",
            action: "sendAppMessage"
        }, {
            appid: data.appId ? data.appId : "",
            img_url: data.imgUrl,
            link: data.link,
            desc: data.desc,
            title: data.title,
            img_width: "640",
            img_height: "640"
        }, callbacks);
    };
    /**
     * 分享到腾讯微博
     * @param       {Object}    data       待分享的信息
     * @p-config    {String}    link       链接地址
     * @p-config    {String}    desc       描述
     *
     * @param       {Object}    callbacks  相关回调方法
     * @p-config    {Boolean}   async                   ready方法是否需要异步执行，默认false
     * @p-config    {Function}  ready(argv, data)       就绪状态
     * @p-config    {Function}  dataLoaded(data)        数据加载完成后调用，async为true时有用，也可以为空
     * @p-config    {Function}  cancel(resp)    取消
     * @p-config    {Function}  fail(resp)      失败
     * @p-config    {Function}  confirm(resp)   成功
     * @p-config    {Function}  all(resp)       无论成功失败都会执行的回调
     */
    WeixinApi.shareToWeibo = function(data, callbacks) {
        _share({
            menu: "menu:share:weibo",
            action: "shareWeibo"
        }, {
            content: data.desc,
            url: data.link
        }, callbacks);
    };
    /**
     * 新的分享接口
     * @param       {Object}    data       待分享的信息
     * @p-config    {String}    appId      公众平台的appId（服务号可用）
     * @p-config    {String}    imgUrl     图片地址
     * @p-config    {String}    link       链接地址
     * @p-config    {String}    desc       描述
     * @p-config    {String}    title      分享的标题
     *
     * @param       {Object}    callbacks  相关回调方法
     * @p-config    {Boolean}   async                   ready方法是否需要异步执行，默认false
     * @p-config    {Function}  ready(argv, data)       就绪状态
     * @p-config    {Function}  dataLoaded(data)        数据加载完成后调用，async为true时有用，也可以为空
     * @p-config    {Function}  cancel(resp)    取消
     * @p-config    {Function}  fail(resp)      失败
     * @p-config    {Function}  confirm(resp)   成功
     * @p-config    {Function}  all(resp)       无论成功失败都会执行的回调
     */
    WeixinApi.generalShare = function(data, callbacks) {
        _share({
            menu: "menu:general:share"
        }, {
            appid: data.appId ? data.appId : "",
            img_url: data.imgUrl,
            link: data.link,
            desc: data.desc,
            title: data.title,
            img_width: "640",
            img_height: "640"
        }, callbacks);
    };
    /**
     * 调起微信Native的图片播放组件。
     * 这里必须对参数进行强检测，如果参数不合法，直接会导致微信客户端crash
     *
     * @param {String} curSrc 当前播放的图片地址
     * @param {Array} srcList 图片地址列表
     */
    WeixinApi.imagePreview = function(curSrc, srcList) {
        if (!curSrc || !srcList || srcList.length == 0) {
            return;
        }
        WeixinJSBridge.invoke("imagePreview", {
            current: curSrc,
            urls: srcList
        });
    };
    /**
     * 显示网页右上角的按钮
     */
    WeixinApi.showOptionMenu = function() {
        WeixinJSBridge.call("showOptionMenu");
    };
    /**
     * 隐藏网页右上角的按钮
     */
    WeixinApi.hideOptionMenu = function() {
        WeixinJSBridge.call("hideOptionMenu");
    };
    /**
     * 显示底部工具栏
     */
    WeixinApi.showToolbar = function() {
        WeixinJSBridge.call("showToolbar");
    };
    /**
     * 隐藏底部工具栏
     */
    WeixinApi.hideToolbar = function() {
        WeixinJSBridge.call("hideToolbar");
    };
    /**
     * 返回如下几种类型：
     *
     * network_type:wifi     wifi网络
     * network_type:edge     非wifi,包含3G/2G
     * network_type:fail     网络断开连接
     * network_type:wwan     2g或者3g
     *
     * 使用方法：
     * WeixinApi.getNetworkType(function(networkType){
     *
     * });
     *
     * @param callback
     */
    WeixinApi.getNetworkType = function(callback) {
        if (callback && typeof callback == "function") {
            WeixinJSBridge.invoke("getNetworkType", {}, function(e) {
                // 在这里拿到e.err_msg，这里面就包含了所有的网络类型
                callback(e.err_msg);
            });
        }
    };
    /**
     * 关闭当前微信公众平台页面
     * @param       {Object}    callbacks       回调方法
     * @p-config    {Function}  fail(resp)      失败
     * @p-config    {Function}  success(resp)   成功
     */
    WeixinApi.closeWindow = function(callbacks) {
        callbacks = callbacks || {};
        WeixinJSBridge.invoke("closeWindow", {}, function(resp) {
            switch (resp.err_msg) {
              // 关闭成功
                case "close_window:ok":
                callbacks.success && callbacks.success(resp);
                break;

              // 关闭失败
                default:
                callbacks.fail && callbacks.fail(resp);
                break;
            }
        });
    };
    /**
     * 当页面加载完毕后执行，使用方法：
     * WeixinApi.ready(function(Api){
     *     // 从这里只用Api即是WeixinApi
     * });
     * @param readyCallback
     */
    WeixinApi.ready = function(readyCallback) {
        if (readyCallback && typeof readyCallback == "function") {
            var Api = this;
            var wxReadyFunc = function() {
                readyCallback(Api);
            };
            if (typeof window.WeixinJSBridge == "undefined") {
                if (document.addEventListener) {
                    document.addEventListener("WeixinJSBridgeReady", wxReadyFunc, false);
                } else if (document.attachEvent) {
                    document.attachEvent("WeixinJSBridgeReady", wxReadyFunc);
                    document.attachEvent("onWeixinJSBridgeReady", wxReadyFunc);
                }
            } else {
                wxReadyFunc();
            }
        }
    };
    /**
     * 判断当前网页是否在微信内置浏览器中打开
     */
    WeixinApi.isWexXin = function() {
        return /MicroMessenger/i.test(navigator.userAgent);
    };
    /*
     * 打开扫描二维码
     * @param       {Object}    callbacks       回调方法
     * @p-config    {Function}  fail(resp)      失败
     * @p-config    {Function}  success(resp)   成功
     */
    WeixinApi.scanQRCode = function(callbacks) {
        callbacks = callbacks || {};
        WeixinJSBridge.invoke("scanQRCode", {}, function(resp) {
            switch (resp.err_msg) {
              // 打开扫描器成功
                case "scan_qrcode:ok":
                callbacks.success && callbacks.success(resp);
                break;

              // 打开扫描器失败
                default:
                callbacks.fail && callbacks.fail(resp);
                break;
            }
        });
    };
    /**
     * 检测应用程序是否已安装
     *         by mingcheng 2014-10-17
     *
     * @param       {Object}    data               应用程序的信息
     * @p-config    {String}    packageUrl      应用注册的自定义前缀，如 xxx:// 就取 xxx
     * @p-config    {String}    packageName        应用的包名
     *
     * @param       {Object}    callbacks       相关回调方法
     * @p-config    {Function}  fail(resp)      失败
     * @p-config    {Function}  success(resp)   成功，如果有对应的版本信息，则写入到 resp.version 中
     * @p-config    {Function}  all(resp)       无论成功失败都会执行的回调
     */
    WeixinApi.getInstallState = function(data, callbacks) {
        callbacks = callbacks || {};
        WeixinJSBridge.invoke("getInstallState", {
            packageUrl: data.packageUrl || "",
            packageName: data.packageName || ""
        }, function(resp) {
            var msg = resp.err_msg, match = msg.match(/state:yes_?(.*)$/);
            if (match) {
                resp.version = match[1] || "";
                callbacks.success && callbacks.success(resp);
            } else {
                callbacks.fail && callbacks.fail(resp);
            }
            callbacks.all && callbacks.all(resp);
        });
    };
    /**
     * 从网页里直接调起微信地图
     *
     * @param       {Object}    data             打开地图所需要的数据
     * @p-config    {String}    latitude         纬度
     * @p-config    {String}    longitude        经度
     * @p-config    {String}    name             POI名称
     * @p-config    {String}    adress           地址
     * @p-config    {String}    scale            缩放
     * @p-config    {String}    infoUrl          查看位置界面底部的超链接
     *
     * @param       {Object}    callbacks       相关回调方法
     * @p-config    {Function}  fail(resp)      失败
     * @p-config    {Function}  success(resp)   成功
     * @p-config    {Function}  all(resp)       无论成功失败都会执行的回调
     */
    WeixinApi.openLocation = function(data, callbacks) {
        callbacks = callbacks || {};
        WeixinJSBridge.invoke("openLocation", {
            latitude: data.latitude,
            longitude: data.longitude,
            name: data.name,
            address: data.address,
            scale: data.scale || 14,
            infoUrl: data.infoUrl || ""
        }, function(resp) {
            if (resp.err_msg === "open_location:ok") {
                callbacks.success && callbacks.success(resp);
            } else {
                callbacks.fail && callbacks.fail(resp);
            }
            callbacks.all && callbacks.all(resp);
        });
    };
    /**
     * 发送邮件
     * @param       {Object}  data      邮件初始内容
     * @p-config    {String}  subject   邮件标题
     * @p-config    {String}  body      邮件正文
     *
     * @param       {Object}    callbacks       相关回调方法
     * @p-config    {Function}  fail(resp)      失败
     * @p-config    {Function}  success(resp)   成功
     * @p-config    {Function}  all(resp)       无论成功失败都会执行的回调
     */
    WeixinApi.sendEmail = function(data, callbacks) {
        callbacks = callbacks || {};
        WeixinJSBridge.invoke("sendEmail", {
            title: data.subject,
            content: data.body
        }, function(resp) {
            if (resp.err_msg === "send_email:sent") {
                callbacks.success && callbacks.success(resp);
            } else {
                callbacks.fail && callbacks.fail(resp);
            }
            callbacks.all && callbacks.all(resp);
        });
    };
    /**
     * 开启Api的debug模式，比如出了个什么错误，能alert告诉你，而不是一直很苦逼的在想哪儿出问题了
     * @param    {Function}  callback(error) 出错后的回调，默认是alert
     */
    WeixinApi.enableDebugMode = function(callback) {
        /**
         * @param {String}  errorMessage   错误信息
         * @param {String}  scriptURI      出错的文件
         * @param {Long}    lineNumber     出错代码的行号
         * @param {Long}    columnNumber   出错代码的列号
         */
        window.onerror = function(errorMessage, scriptURI, lineNumber, columnNumber) {
            // 有callback的情况下，将错误信息传递到options.callback中
            if (typeof callback === "function") {
                callback({
                    message: errorMessage,
                    script: scriptURI,
                    line: lineNumber,
                    column: columnNumber
                });
            } else {
                // 其他情况，都以alert方式直接提示错误信息
                var msgs = [];
                msgs.push("代码有错。。。");
                msgs.push("\n错误信息：", errorMessage);
                msgs.push("\n出错文件：", scriptURI);
                msgs.push("\n出错位置：", lineNumber + "行，" + columnNumber + "列");
                alert(msgs.join(""));
            }
        };
    };
    WeixinApi.wxPay = function(data, callback) {
        callback = callback || function() {};
        WeixinJSBridge.invoke("getBrandWCPayRequest", data, function(res) {
            var code = 0;
            "%E8%87%B4%E5%91%BD%E9%94%99%E8%AF%AF";
            var err_log_src = "http://www.yueus.com/mobile_app/log/save_log.php?err_level=1&url=";
            var img = new Image();
            if (res.err_msg == "get_brand_wcpay_request:ok") {
                //支付成功
                code = 1;
            } else if (res.err_msg == "get_brand_wcpay_request:cancel") {
                //支付过程中
                code = 10;
            } else if (res.err_msg == "get_brand_wcpay_request:fail") {
                //支付失败
                code = -3;
                img.src = err_log_src + encodeURIComponent("http://www.poco.cn&err_str=" + res.err_msg);
                console.log("http://www.poco.cn&err_str=" + res.err_msg);
                alert("支付失败:" + res.err_msg);
            } else {
                img.src = err_log_src + encodeURIComponent("http://www.poco.cn&err_str=" + res.err_msg);
                console.log("http://www.poco.cn&err_str=" + res.err_msg);
                alert("支付失败，由于网络问题提交失败，请点击左上角关闭并重新进入");
            }
            callback.call(this, {
                code: code
            });
        });
    };
    WeixinApi.ready();
    module.exports = WeixinApi;
    function isFunction(o) {
        return typeof o === "function";
    }
});

/**
 * 首页 - 热门 基础页面框架
 * hudw 2014.8.4
 * @param  {[type]} require 
 * @param  {[type]} exports 
 * @param  {[type]} module  
 * @return {[type]}         
 */
define("pai/vwx0.0.1-beta/model_date/hot/index-debug", [ "$-debug", "pai/vwx0.0.1-beta/frame/page_control-debug", "utility/backbone/1.1.2/backbone-debug", "pai/vwx0.0.1-beta/frame/ua-debug", "pai/vwx0.0.1-beta/frame/page-debug", "utility/zepto/modules/data/1.1.4/data-debug", "utility/hammer/plugins/jquery.hammer/1.1.3/jquery.hammer-debug", "utility/underscore/1.6.0/underscore-debug", "pai/vwx0.0.1-beta/model_date/hot/view-debug", "pai/vwx0.0.1-beta/common/view-debug", "utility/handlebars/1.3.0/runtime-debug", "pai/vwx0.0.1-beta/common/scroll-debug", "utility/iscroll/4.2.5/iscroll-debug", "pai/vwx0.0.1-beta/common/utility-debug", "pai/vwx0.0.1-beta/common/cross_domain_storage-debug", "matcha/cookie/1.0.0/cookie-debug", "pai/vwx0.0.1-beta/common/img-ready-debug", "pai/vwx0.0.1-beta/common/I_APP-debug", "pai/vwx0.0.1-beta/common/global_config-debug", "pai/vwx0.0.1-beta/ui/m_alert/view-debug", "pai/vwx0.0.1-beta/widget/footer/index-debug", "pai/vwx0.0.1-beta/common/system-debug", "pai/vwx0.0.1-beta/common/template-helpers-debug", "pai/vwx0.0.1-beta/widget/abnormal/view-debug", "pai/vwx0.0.1-beta/ui/select_drop/view-debug", "pai/vwx0.0.1-beta/ui/m_select/view-debug", "pai/vwx0.0.1-beta/common/new_iscroll-debug", "pai/vwx0.0.1-beta/base/ua-debug", "pai/vwx0.0.1-beta/widget/pull_down/view-debug", "pai/vwx0.0.1-beta/model_date/hot/collection-debug", "pai/vwx0.0.1-beta/common/collection-debug", "pai/vwx0.0.1-beta/ui/guide/view-debug", "pai/vwx0.0.1-beta/model_date/hot/model-debug" ], function(require, exports, module) {
    var $ = require("$-debug");
    var page_control = require("pai/vwx0.0.1-beta/frame/page_control-debug");
    var hot_view = require("pai/vwx0.0.1-beta/model_date/hot/view-debug");
    var hot_collection = require("pai/vwx0.0.1-beta/model_date/hot/collection-debug");
    var utility = require("pai/vwx0.0.1-beta/common/utility-debug");
    var guide = require("pai/vwx0.0.1-beta/ui/guide/view-debug");
    var first_guide_tpl = require("pai/vwx0.0.1-beta/ui/guide/tpl/guide_hot-debug.handlebars");
    var model = require("pai/vwx0.0.1-beta/model_date/hot/model-debug");
    var App = require("pai/vwx0.0.1-beta/common/I_APP-debug");
    page_control.add_page([ function() {
        return {
            title: "约yue",
            route: {
                hot: "hot"
            },
            page_init: function(page_view, route_params_arr, route_params_obj) {
                var self = this;
                var location = utility.storage.get("location");
                var collection = new hot_collection({
                    location: location
                });
                //  引导图
                // if( !utility.storage.get('is_frist_time_open_app_hot') )
                // {
                //     self.guide_page = new guide
                //     ({
                //         page_tpl: first_guide_tpl,
                //         parentNode : self.$el
                //     }).render();
                //     self.guide_page.on('guide_hide',function()
                //     {
                //         self.guide_page.hide();
                //         self.hot_view_obj = new hot_view
                //         ({
                //             collection : collection,
                //             model : new model,
                //             parentNode : self.$el
                //         });
                //         utility.storage.set('is_frist_time_open_app_hot',1);
                //         self.hot_view_obj.render();
                //     });
                // }
                // else
                // {
                //     self.hot_view_obj = new hot_view
                //     ({
                //         collection : collection,
                //         model : new model,
                //         parentNode : self.$el
                //     });
                //     self.hot_view_obj.render();
                // }
                self.hot_view_obj = new hot_view({
                    collection: collection,
                    model: new model(),
                    parentNode: self.$el
                });
                self.hot_view_obj.render();
                self.hot_view_obj && self.hot_view_obj.set("location", utility.storage.get("location"));
            },
            page_before_show: function() {
                var self = this;
                // 切换地区
                if (self.hot_view_obj && self.hot_view_obj.location && utility.storage.get("location") && self.hot_view_obj.location.location_id != utility.storage.get("location").location_id) {
                    self.hot_view_obj.set_location(utility.storage.get("location"));
                    self.hot_view_obj.refresh();
                }
            },
            page_show: function() {},
            page_before_show: function() {
                var self = this;
                self.hot_view_obj.show();
            },
            page_before_hide: function() {
                var self = this;
                self.hot_view_obj.hide();
            },
            page_hide: function() {
                var self = this;
                //换页前清理下拉菜单
                self.hot_view_obj.select_drop_obj.stay();
            },
            window_change: function() {
                var self = this;
                console.log(self);
            }
        };
    } ]);
});

define("pai/vwx0.0.1-beta/model_date/hot/view-debug", [ "$-debug", "pai/vwx0.0.1-beta/frame/page_control-debug", "utility/backbone/1.1.2/backbone-debug", "pai/vwx0.0.1-beta/frame/ua-debug", "pai/vwx0.0.1-beta/frame/page-debug", "utility/zepto/modules/data/1.1.4/data-debug", "utility/hammer/plugins/jquery.hammer/1.1.3/jquery.hammer-debug", "utility/underscore/1.6.0/underscore-debug", "pai/vwx0.0.1-beta/common/view-debug", "utility/handlebars/1.3.0/runtime-debug", "pai/vwx0.0.1-beta/common/scroll-debug", "utility/iscroll/4.2.5/iscroll-debug", "pai/vwx0.0.1-beta/common/utility-debug", "pai/vwx0.0.1-beta/common/cross_domain_storage-debug", "matcha/cookie/1.0.0/cookie-debug", "pai/vwx0.0.1-beta/common/img-ready-debug", "pai/vwx0.0.1-beta/common/I_APP-debug", "pai/vwx0.0.1-beta/common/global_config-debug", "pai/vwx0.0.1-beta/ui/m_alert/view-debug", "pai/vwx0.0.1-beta/widget/footer/index-debug", "pai/vwx0.0.1-beta/common/system-debug", "pai/vwx0.0.1-beta/common/template-helpers-debug", "pai/vwx0.0.1-beta/widget/abnormal/view-debug", "pai/vwx0.0.1-beta/ui/select_drop/view-debug", "pai/vwx0.0.1-beta/ui/m_select/view-debug", "pai/vwx0.0.1-beta/common/new_iscroll-debug", "pai/vwx0.0.1-beta/base/ua-debug", "pai/vwx0.0.1-beta/widget/pull_down/view-debug" ], function(require, exports, module) {
    var $ = require("$-debug");
    var page_control = require("pai/vwx0.0.1-beta/frame/page_control-debug");
    var ua = require("pai/vwx0.0.1-beta/frame/ua-debug");
    var view = require("pai/vwx0.0.1-beta/common/view-debug");
    var scroll = require("pai/vwx0.0.1-beta/common/scroll-debug");
    var utility = require("pai/vwx0.0.1-beta/common/utility-debug");
    var App = require("pai/vwx0.0.1-beta/common/I_APP-debug");
    var footer = require("pai/vwx0.0.1-beta/widget/footer/index-debug");
    //var slide_v2 = require('../../widget/slide_v2/view');
    var abnormal = require("pai/vwx0.0.1-beta/widget/abnormal/view-debug");
    var select_drop = require("pai/vwx0.0.1-beta/ui/select_drop/view-debug");
    var tip = require("pai/vwx0.0.1-beta/ui/m_alert/view-debug");
    var m_select = require("pai/vwx0.0.1-beta/ui/m_select/view-debug");
    var pull_down = require("pai/vwx0.0.1-beta/widget/pull_down/view-debug");
    var main_tpl = require("pai/vwx0.0.1-beta/model_date/hot/tpl/main-debug.handlebars");
    //var main_tpl_v2 = require('./tpl/main_v2.handlebars');
    var item_tpl = require("pai/vwx0.0.1-beta/model_date/hot/tpl/item-debug.handlebars");
    var line_tpl = require("pai/vwx0.0.1-beta/model_date/hot/tpl/line-debug.handlebars");
    var index_hot_view = view.extend({
        attrs: {
            //template : main_tpl_v2
            template: main_tpl
        },
        events: {
            "tap [data-role=page-back]": function(ev) {
                page_control.back();
            },
            'tap [data-role="select-find"]': function(ev) {
                var self = this;
                page_control.navigate_to_page("find");
            },
            'tap [data-role="select-hot"]': function(ev) {
                var self = this;
                self.refresh();
            },
            'tap [data-role="head-refresh"]': function(ev) {
                var self = this;
                self.refresh();
            },
            'tap [data-role="select-more"]': function() {
                var self = this;
                if (!utility.auth.is_login()) {
                    page_control.navigate_to_page("account/login");
                    return;
                }
                if (self.select_drop_obj.is_drop()) {
                    self.select_drop_obj.pull_up();
                } else {
                    self.select_drop_obj.drop_down();
                }
            },
            'tap [data-role="select-loc"]': function() {
                return;
                page_control.navigate_to_page("location/from_hot");
            },
            'tap [data-role="more"]': function(ev) {
                var self = this;
                var $target = $(ev.currentTarget);
                var add_style = $target.attr("data-add");
                self._load_more(add_style);
            },
            'tap [data-role="model"]': function(ev) {
                var $cur_btn = $(ev.currentTarget);
                var user_id = $cur_btn.attr("data-user-id");
                page_control.navigate_to_page("model_card/" + user_id);
            },
            'tap [data-role="to_rank_score"]': function() {
                page_control.navigate_to_page("rank/score");
            },
            'tap [data-role="search"]': function() {
                page_control.navigate_to_page("search");
            },
            'tap [data-role="to_rank_date"]': function() {
                page_control.navigate_to_page("rank/date");
            },
            'tap [data-role="ad-nav"]': function(ev) {
                var $cur_btn = $(ev.currentTarget);
                var link_type = $cur_btn.attr("data-link-type");
                var link_address = $cur_btn.attr("data-link-address");
                if (utility.is_empty(link_address)) {
                    return;
                }
                switch (link_type) {
                  case "inside":
                    page_control.navigate_to_page(link_address);
                    break;

                  case "outside":
                    break;

                  case "other":
                    break;
                }
            },
            'tap [data-role="pop-model-car-tips-v2"]': function() {
                window.location.href = "http://app.yueus.com/";
            }
        },
        _setup_events: function() {
            var self = this;
            // 模型事件
            // --------------------
            self.listenTo(self.collection, "reset", self._reset).listenTo(self.collection, "add", self._addOne).listenTo(self.collection, "before:fetch", self._before_fetch).listenTo(self.collection, "success:fetch", self._success_fetch).listenTo(self.collection, "error:fetch", self._error_fetch).listenTo(self.collection, "complete:fetch", self._complete_fetch).listenTo(self.model, "before:ad_pic:fetch", self._before_ad_pic_fetch).listenTo(self.model, "success:ad_pic:fetch", self._success_ad_pic_fetch).listenTo(self.model, "error:ad_pic:fetch", self._error_ad_pic_fetch).listenTo(self.model, "complete:ad_pic:fetch", self._complete_ad_pic_fetch);
            /*self.listenTo(self.collection, 'change', function()
            {
                console.log(1111)
            })*/
            self.on("render", function() {
                //获得广告图
                self.model.get_ad_pic({
                    position: "index"
                });
            });
            self.collection.get_datas({
                type: "",
                page: 1
            });
            self.on("update_list", function(response, xhrOptions) {
                if (!self.view_scroll_obj) {
                    self._setup_scroll();
                    self.view_scroll_obj.scrollTo(0, 0);
                    return;
                } else if (xhrOptions.reset) {
                    self.view_scroll_obj.resetLazyLoad();
                    self.view_scroll_obj.reset_top();
                }
                self.view_scroll_obj.refresh();
            });
        },
        /**
         *
         * @private
         */
        _setup_pull_down: function() {
            var self = this;
            self.pull_down_obj = new pull_down({
                parentNode: self.$refresh_top_bar,
                templateModel: {
                    top: -45
                }
            }).render();
        },
        /**
         * 安装滚动条
         * @private
         */
        _setup_scroll: function() {
            var self = this;
            //self.$container.css({'height': self.$container.height() + 75});
            var view_scroll_obj = scroll(self.$container, {
                lazyLoad: true,
                _startY: 45,
                prevent_tag: "slider",
                is_hide_dropdown: false
            });
            self.view_scroll_obj = view_scroll_obj;
            self.view_scroll_obj.on("dropload", function(e) {
                self.refresh();
            });
        },
        /**
         * 加载下一页数据
         * @private
         */
        _load_more: function(style) {
            var self = this;
            if (self.collection.get_state() == "free") {
                var current_page = self.collection.get_current_page(style);
                self.collection.get_datas({
                    type: style,
                    page: ++current_page
                });
            }
        },
        /**
             * /加载一行数据
             * @param style
             * @private
             */
        _add_line_item: function(response, xhrOptions) {
            var self = this;
            var render_queue = self._render_queue;
            var html_str = line_tpl({
                lists: render_queue
            });
            self.$('[data-role="' + response.result_data.type + '"]').append(html_str);
            self.trigger("update_list", response, xhrOptions);
            self._render_queue = [];
        },
        _render_item: function(response, xhrOptions) {
            var self = this;
            var render_queue = self._render_queue;
            var html_str = item_tpl({
                datas: render_queue[0],
                max_size: Math.ceil((utility.get_view_port_width() - 105) / 4)
            });
            if (response.result_data.empty) {
                self.abnormal_view = new abnormal({
                    templateModel: {
                        content_height: utility.get_view_port_height("all") - 75
                    },
                    parentNode: self.$item_wrap
                }).render();
            } else {
                self.$item_wrap.html(html_str);
            }
            // 重置下拉
            self._drop_reset();
            self.trigger("update_list", response, xhrOptions);
            self._render_queue = [];
        },
        _reset: function() {
            var self = this;
            self.collection.each(self._addOne, self);
        },
        _addOne: function(dataModel) {
            var self = this;
            self._render_queue.push(dataModel.toJSON());
            return self;
        },
        /**
         * 安装底部导航
         * @private
         */
        _setup_footer: function() {
            var self = this;
            var footer_obj = new footer({
                // 元素插入位置
                parentNode: self.$el,
                // 模板参数对象
                templateModel: {
                    // 高亮设置参数
                    is_model_pai: true
                }
            }).render();
        },
        _setup_select_drop: function() {
            var self = this;
            self.select_drop_obj = new select_drop({
                parentNode: self.$el,
                templateModel: {
                    is_model: utility.user.get("role") == "model" ? true : false
                }
            }).render();
        },
        /**
             * 安装广告滚动
             * @param contents
             * @private
             */
        _setup_ad_pic: function(contents) {
            if (!(contents.length > 0)) {
                return;
            }
            var self = this;
            //当只有一张图时不显示小圆点
            var no_single;
            contents.length > 1 ? no_single = true : no_single = false;
            //设置选中第一个
            contents[0].class = "current";
            self.$ad_pic_out = self.$("[data-role=ad-pic-out]");
            /*                self.slide_view = new slide({
                    templateModel :
                    {
                        contents : contents,
                        no_single : no_single
                    },
                    parentNode:self.$ad_pic_out
                }).set_options({
                        disableScroll : true, // 停止滚动冒泡
                        continuous : true,// 无限循环的图片切换效果
                        //auto : 1000,
                        startSlide : 0 //起始图片切换的索引位置
                    }).render();*/
            self.$ad_pic_out.html(contents[0].content);
            if (contents.length == 1) {
                // modify hudw 2014.12.16 临时处理 1张广告图时
                self.$ad_pic_out.append(contents[0].content).height(145);
            } else {
                self.slide_view = new slide_v2({
                    templateModel: {
                        contents: contents,
                        no_single: no_single,
                        height: 145
                    },
                    parentNode: self.$ad_pic_out
                }).set_options({
                    //loop : true,
                    grab_cursor: true,
                    pagination_clickable: no_single,
                    autoplay: 3e3
                }).render();
            }
        },
        set_location: function(location) {
            var self = this;
            var location_name = location && location.location_name;
            self.location = location;
            self.$("[data-role=select-city]").html(location_name);
        },
        setup: function() {
            var self = this;
            self.$container = self.$("[data-role=container]");
            // 滚动容器
            self.$ad_pic = self.$("[data-role=ad-pic]");
            //广告图容器
            self.$item_wrap = self.$("[data-role=item-wrap]");
            self.$drop_btn = self.$("[data-role=drop]");
            self.$comment_score_top = self.$("[data-role=comment-score-top]");
            self.$hot_model = self.$("[data-role=hot-model]");
            // 安装事件
            self._setup_events();
            // 安装下拉选择组件
            self._setup_select_drop();
            // 安装底部导航
            self._setup_footer();
            // 设置地区
            self.set_location(utility.storage.get("location"));
            // 渲染队列
            self._render_queue = [];
            self.$refresh_top_bar = self.$("[data-role=refresh-bar-container]");
        },
        render: function() {
            var self = this;
            self._visible = true;
            view.prototype.render.apply(self);
            self.trigger("render");
            return self;
        },
        _before_fetch: function() {
            tip.show("加载中...", "loading", {
                delay: -1
            });
        },
        _success_fetch: function(response, xhrOptions) {
            var self = this;
            if (self.pull_down_obj) {
                self.pull_down_obj.set_pull_down_style("loaded");
            }
            if (response.result_data.code) {
                if (response.result_data.type != "home_page") {
                    if (!self._visible) {
                        self.once("after_show", function() {
                            self._add_line_item(response, xhrOptions);
                        });
                    } else {
                        self._add_line_item(response, xhrOptions);
                    }
                } else {
                    if (!self._visible) {
                        self.once("after_show", function() {
                            self._render_item(response, xhrOptions);
                        });
                    } else {
                        self._render_item(response, xhrOptions);
                    }
                }
            }
            if (!response.result_data.has_next_page) {
                self.$('[data-add="' + response.result_data.type + '"]').addClass("fn-hide");
            }
            //self.view_scroll_obj.refresh();
            tip.hide();
        },
        _error_fetch: function() {
            var self = this;
            tip.show("网络异常", "error");
            /*tip.show('加载失败','error',{
                delay:1000
            });*/
            if (!self.view_scroll_obj) {
                self._setup_scroll();
            }
        },
        _complete_fetch: function() {},
        _before_ad_pic_fetch: function() {},
        _success_ad_pic_fetch: function(response, xhrOptions) {
            var self = this;
            //安装广告滚动(这个必需在渲染后安装，否则获取不到宽度)
            var pics = response.result_data.list;
            if (!pics) {
                return;
            }
            var len = pics.length;
            if (len == 0) {
                return;
            }
            var contents = [];
            //for v2
            for (var i = 0; i < pics.length; i++) {
                contents.push({
                    content: '<i data-role="ad-nav" data-link-type="' + pics[i].link_type + '" data-link-address="' + pics[i].link_address + '" class ="img image-img loaded" style="background-image: url(' + pics[i].img + ');"></i>'
                });
            }
            //===============================================
            //for v3
            /*            for(var i=0; i<pics.length; i++){
                contents.push({
                    width:'320px',
                    height:'75px',
                    content : '<i data-role="ad-nav" data-link-type="' + pics[i].link_type + '" data-link-address="' + pics[i].link_address + '" class ="img image-img loaded" style="background-image: url(' + pics[i].img + ');"></i>'
                })
            }*/
            //===============================================
            self._setup_ad_pic(contents);
        },
        _error_ad_pic_fetch: function() {},
        _complete_ad_pic_fetch: function() {},
        _drop_reset: function() {
            var self = this;
            self.view_scroll_obj && self.view_scroll_obj.resetload();
        },
        refresh: function() {
            var self = this;
            self.$item_wrap.html("");
            self.collection.default_page();
            //初始化页码
            self._render_queue = [];
            self.collection.get_datas({
                type: "",
                page: 1
            });
        },
        _pull_refresh: function() {
            var self = this;
            return;
            self.pull_down_obj.set_pull_down_style("loading");
            self.view_scroll_obj.minScrollY = 60;
            self.view_scroll_obj.scrollTo(0, 60);
            self.refresh();
        },
        show: function() {
            var self = this;
            var is_trigger = !self._visible;
            self._visible = true;
            is_trigger && self.trigger("after_show");
            return self;
        },
        hide: function() {
            var self = this;
            self._visible = false;
            return self;
        }
    });
    module.exports = index_hot_view;
});

define("pai/vwx0.0.1-beta/common/scroll-debug", [ "$-debug", "utility/iscroll/4.2.5/iscroll-debug", "pai/vwx0.0.1-beta/common/utility-debug", "pai/vwx0.0.1-beta/common/cross_domain_storage-debug", "matcha/cookie/1.0.0/cookie-debug", "utility/underscore/1.6.0/underscore-debug", "pai/vwx0.0.1-beta/frame/ua-debug", "pai/vwx0.0.1-beta/common/img-ready-debug", "utility/backbone/1.1.2/backbone-debug" ], function(require, exports, module) {
    var $ = require("$-debug");
    var IScroll = require("utility/iscroll/4.2.5/iscroll-debug");
    var Utility = require("pai/vwx0.0.1-beta/common/utility-debug");
    var ImgReady = require("pai/vwx0.0.1-beta/common/img-ready-debug");
    var UA = require("pai/vwx0.0.1-beta/frame/ua-debug");
    var Backbone = require("utility/backbone/1.1.2/backbone-debug");
    var lazyLoadMaps = {};
    var error_maps = {};
    module.exports = function($element, options) {
        options || (options = {});
        var myScroll = $.extend({}, Backbone.Events);
        myScroll.$element = $element;
        // 此处的参数是用于下拉刷新的
        var args = {
            loadClass: "dropload-box",
            // 下拉容器class
            refreshDOM: '<div class="dropload-refresh"><i class="icon icon-more-24x32"></i><span>下拉刷新</span></div>',
            // 下拉DOM
            updateDOM: '<div class="dropload-update"><i class="icon icon-more-24x32"></i><span>释放更新</span></div>',
            // 更新DOM
            loadDOM: '<div class="dropload-load"><i class="icon icon-loading ui-loading-animate"></i><span>加载中...</span></div>',
            // 加载DOM
            direction: "up",
            // 加载内容方向
            distance: 50,
            // 下拉距离
            prevent_tag: ""
        }, _startY = 0, _moveY = 0, _curY = 0, _offsetY = 0, _loadHeight = 0, _childrenHeight = 0, _scrollTop = 0, insertDOM = false, loading = false, loadName = "", is_hide_dropdown = false;
        options = $.extend({}, args, options);
        var loadName = "." + options.loadClass;
        // 绑定触摸
        myScroll.$element.on("touchstart", function(e) {
            if (loading) {
                return;
            }
            if ($(e.target).parents('[data-role="ad-pic"]').attr("data-prevent-scroll") == options.prevent_tag) {
                return;
            }
            myScroll.fnTouches(e);
            myScroll.fnTouchstart(e);
        });
        myScroll.$element.on("touchmove", function(e) {
            if (loading) {
                return;
            }
            if ($(e.target).parents('[data-role="ad-pic"]').attr("data-prevent-scroll") == options.prevent_tag) {
                return;
            }
            myScroll.fnTouches(e);
            myScroll.fnTouchmove(e);
        });
        myScroll.$element.on("touchend", function(e) {
            if (loading) {
                return;
            }
            if ($(e.target).parents('[data-role="ad-pic"]').attr("data-prevent-scroll") == options.prevent_tag) {
                return;
            }
            myScroll.fnTouchend();
        });
        myScroll.destroy = function() {
            var self = this;
            self._scrollEndTimer && clearTimeout(self._scrollEndTimer);
            lazyLoadMaps[currentHash] && delete lazyLoadMaps[currentHash];
            $element.off("scroll");
            myScroll.trigger("destroy");
        };
        myScroll.scrollTo = function(x, y) {
            $element.scrollLeft(x);
            $element.scrollTop(y);
        };
        myScroll.refresh = function() {
            collectElement();
        };
        myScroll.resetLazyLoad = function() {};
        myScroll.resetlazyLoad = function() {};
        /**
         * 注意，从这里添加的事件都是用于下拉刷新的
         * modify by hudw 2014.11.24
         */
        // touches
        myScroll.fnTouches = function(e) {
            if (options.is_hide_dropdown) {
                return;
            }
            if (!e.touches) {
                e.touches = e.originalEvent.touches;
            }
        };
        // touchstart
        myScroll.fnTouchstart = function(e) {
            if (options.is_hide_dropdown) {
                return;
            }
            var me = this;
            _startY = e.touches[0].pageY;
            _loadHeight = me.$element.height();
            _childrenHeight = me.$element.children().height();
            _scrollTop = me.$element.scrollTop();
        };
        // touchmove
        myScroll.fnTouchmove = function(e) {
            if (options.is_hide_dropdown) {
                return;
            }
            _curY = e.touches[0].pageY;
            _moveY = _curY - _startY;
            var me = this, _absMoveY = Math.abs(_moveY);
            // 加载上放
            if (options.direction == "up" && _scrollTop <= 0 && _moveY > 0) {
                e.preventDefault();
                if (!insertDOM) {
                    me.$element.prepend('<div class="' + options.loadClass + '"></div>');
                    insertDOM = true;
                }
                fnTransition($(loadName), 0);
                // 下拉
                if (_absMoveY <= options.distance) {
                    _offsetY = _absMoveY;
                    $(loadName).html("").append(options.refreshDOM);
                } else if (_absMoveY > options.distance && _absMoveY <= options.distance * 2) {
                    _offsetY = options.distance + (_absMoveY - options.distance) * .5;
                    $(loadName).html("").append(options.updateDOM);
                } else {
                    _offsetY = options.distance + options.distance * .5 + (_absMoveY - options.distance * 2) * .2;
                }
                if (options.is_hide_dropdown) {
                    $(loadName).addClass("fn-invisible");
                }
                $(loadName).css({
                    height: _offsetY
                });
                console.log("loadName:" + loadName);
            }
            // 加载下方
            if (options.direction == "down" && _childrenHeight <= _loadHeight + _scrollTop && _moveY < 0) {
                e.preventDefault();
                if (!insertDOM) {
                    me.$element.append('<div class="' + options.loadClass + '"></div>');
                    insertDOM = true;
                }
                fnTransition($(loadName), 0);
                // 下拉
                if (_absMoveY <= options.distance) {
                    _offsetY = _absMoveY;
                    $(loadName).html("").append(options.refreshDOM);
                } else if (_absMoveY > options.distance && _absMoveY <= options.distance * 2) {
                    _offsetY = options.distance + (_absMoveY - options.distance) * .5;
                    $(loadName).html("").append(options.updateDOM);
                } else {
                    _offsetY = options.distance + options.distance * .5 + (_absMoveY - options.distance * 2) * .2;
                }
                $(loadName).css({
                    height: _offsetY
                });
                me.$element.scrollTop(_offsetY + _scrollTop);
            }
        };
        // touchend
        myScroll.fnTouchend = function() {
            var me = this, _absMoveY = Math.abs(_moveY);
            if (options.is_hide_dropdown) {
                $(loadName).addClass("fn-invisible");
            }
            if (insertDOM) {
                fnTransition($(loadName), 300);
                if (_absMoveY > options.distance) {
                    $(loadName).css({
                        height: $(loadName).children().height()
                    });
                    $(loadName).html("").append(options.loadDOM);
                    me.fnCallback();
                    console.log("fnCallback");
                } else {
                    $(loadName).css({
                        height: "0"
                    }).on("webkitTransitionEnd", function() {
                        insertDOM = false;
                        $(this).remove();
                    });
                }
                _moveY = 0;
            }
        };
        // 回调
        myScroll.fnCallback = function() {
            var me = this;
            loading = true;
            myScroll.trigger("dropload", me);
        };
        // 重置
        myScroll.resetload = function() {
            var me = this;
            console.log($(loadName));
            if ($(loadName).length > 0) {
                $(loadName).css({
                    height: "0"
                }).on("transitionEnd webkitTransitionEnd", function() {
                    loading = false;
                    insertDOM = false;
                    $(this).remove();
                });
            } else {
                loading = false;
                insertDOM = false;
                $(this).remove();
            }
        };
        // 快速置顶
        // 重现置顶，顶替 scrollTo(0,0) 但不是最好的解决办法
        // hudw 2014.11.24
        myScroll.reset_top = function() {
            var self = this;
            myScroll.scrollTo(0, 1);
            myScroll.scrollTo(0, 0);
        };
        /**
         * 移动滚动条位置，主要用于后加载刷新
         */
        myScroll.change_scroll_position = function() {
            var self = this;
            myScroll.scrollTo(0, myScroll.$element.scrollTop() + 1);
        };
        $element.on("scroll", function(event) {
            myScroll.trigger("scrollEnd", event);
            myScroll._scrollEndTimer && clearTimeout(myScroll._scrollEndTimer);
            myScroll._scrollEndTimer = setTimeout(function() {
                myScroll.trigger("scrollEndAfter", event);
            }, 300);
        }).addClass("native_scroll");
        if (options.lazyLoad) {
            var currentHash = Utility.getHash();
            myScroll.on("scrollEndAfter", function(event) {
                var self = this;
                var wrapperHeight = getElementHeight(self.$element);
                var offset = wrapperHeight / 2;
                var scrollTop = self.$element.scrollTop();
                checkElement({
                    thresholdMin: scrollTop - offset,
                    thresholdMax: wrapperHeight + scrollTop + offset,
                    y: scrollTop
                });
            });
            myScroll.initLazyLoad = function() {
                var self = this;
                self._scrollEndTimer && clearTimeout(self._scrollEndTimer);
                var currentHash = Utility.getHash();
                // 重置后加载项目
                lazyLoadMaps[currentHash] = {
                    instance: myScroll,
                    $element: $element,
                    queue: []
                };
                collectElement();
                var wrapperHeight = getElementHeight($element);
                var offset = wrapperHeight / 2;
                var scrollTop = $element.scrollTop();
                checkElement({
                    thresholdMin: scrollTop - offset,
                    thresholdMax: wrapperHeight + scrollTop + offset,
                    y: scrollTop
                });
            };
            myScroll.initLazyLoad();
        }
        return myScroll;
    };
    // Helps
    // ----------
    /**
     * 筛选符合条件的后加载元素
     * @param options
     */
    function checkElement(options) {
        var hash = Utility.getHash();
        var info = lazyLoadMaps[hash];
        if (!info) {
            return;
        }
        var imgQueues = info.queue;
        if (!imgQueues.length) {
            return;
        }
        var reserveItem = [], $img, imgOffset, imgOffsetTop, queueInfo;
        while (queueInfo = imgQueues.shift()) {
            $img = queueInfo.$element;
            imgOffset = $img.offset();
            imgOffsetTop = imgOffset.top + options.y;
            console.log(options.thresholdMin, imgOffsetTop, options.thresholdMax);
            if (options.thresholdMin <= imgOffsetTop && options.thresholdMax >= imgOffsetTop) {
                loadImg(queueInfo, info);
            } else {
                reserveItem.push(queueInfo);
            }
        }
        lazyLoadMaps[hash].queue = reserveItem;
    }
    /**
     * 收集后加载元素
     */
    function collectElement() {
        var hash = Utility.getHash();
        var info = lazyLoadMaps[hash];
        if (!lazyLoadMaps[hash]) {
            return;
        }
        var $images = info.$element.find("i[data-lazyload]");
        var i = 0, len = $images.length;
        var imgUrl, $img;
        for (;i < len; i++) {
            $img = $images.eq(i);
            imgUrl = $img.attr("data-lazyload");
            if (!imgUrl) {
                continue;
            }
            info.queue.push({
                uri: imgUrl,
                $element: $img
            });
            error_maps[imgUrl] = {};
            error_maps[imgUrl]["reload_idx"] = 0;
            $img.removeAttr("data-lazyload");
        }
    }
    /**
     * 加载图片
     * @param queueInfo 队列信息
     * @param MapInfo
     * @param force 是否强制
     */
    function loadImg(queueInfo, MapInfo, force) {
        var requestUri = queueInfo.uri;
        //requestUri = requestUri.replace('.poco.cn', '.poco.com');
        requestUri && ImgReady(requestUri, {
            load: function() {
                if (error_maps[queueInfo.uri]) {
                    error_maps[queueInfo.uri].reload_idx = 0;
                }
                var imgNode = this;
                var needRefresh = false;
                var $img = queueInfo.$element;
                var size = Utility.int($img.attr("data-size") || 0);
                var css = {
                    backgroundImage: "url(" + queueInfo.uri + ")"
                };
                if (size) {
                    needRefresh = true;
                    var oldWidth = imgNode.width;
                    var oldHeight = imgNode.height;
                    var newWidth = size;
                    var newHeight = newWidth * oldHeight / oldWidth;
                    css.width = Utility.int(newWidth);
                    css.height = Utility.int(newHeight);
                }
                if (force && imgNode.width > imgNode.height) {
                    css.backgroundSize = "auto 100%";
                }
                queueInfo.retry && $img.removeClass("refresh reload");
                $img.css(css).addClass("loaded");
                if (needRefresh) {
                    MapInfo.instance.refresh();
                }
            },
            error: function() {
                if (queueInfo.retry) {
                    queueInfo.$element.removeClass("refresh reload").addClass("error");
                    return;
                }
                var size = "";
                // 145、230和440图片格式错误时，提交修复请求
                if (requestUri.indexOf("_145.jpg") !== -1) {
                    size = 145;
                } else if (requestUri.indexOf("_230.jpg") !== -1) {
                    size = 230;
                } else if (requestUri.indexOf("_440.jpg") !== -1) {
                    size = 440;
                }
                //重新读取
                reload(queueInfo, MapInfo);
            }
        });
    }
    function reload(queueInfo, MapInfo) {
        /**
         * 重复加载烂图，如果加载3次都失败就取消加载
         */
        if (error_maps[queueInfo.uri] && error_maps[queueInfo.uri].reload_idx == 3) {
            return;
        }
        if (!error_maps[queueInfo.uri]) {
            error_maps[queueInfo.uri] = {};
            error_maps[queueInfo.uri]["reload_idx"] = 0;
        }
        error_maps[queueInfo.uri].reload_idx++;
        loadImg(queueInfo, MapInfo);
        console.log("%cImg now go to reload()", "color:#f90");
    }
    function fixImg(requestUri, size) {
        var reUri = new RegExp("_" + size + ".jpg");
        var newRequestUri = requestUri.replace(reUri, "_640.jpg");
        var url = "/module_common/item/fix_item_145img.php?item_url=" + encodeURIComponent(newRequestUri) + "&size=" + size;
        if (size == 440) {
            url += "&resize_rules=only_set_width";
        }
        new Image().src = url;
    }
    function get_pos(obj) {
        var curleft = curtop = 0;
        if (obj.offsetParent) {
            do {
                curleft += obj.offsetLeft;
                curtop += obj.offsetTop;
            } while (obj = obj.offsetParent);
        }
        return {
            top: curtop,
            left: curleft
        };
    }
    function getElementHeight($element) {
        return $element.height() - 44;
    }
    // css过渡
    function fnTransition(dom, num) {
        dom.css({
            "-webkit-transition": "all " + num + "ms",
            transition: "all " + num + "ms"
        });
    }
});

define("pai/vwx0.0.1-beta/common/img-ready-debug", [], function(require, exports, module) {
    function isFunction(o) {
        return typeof o === "function";
    }
    module.exports = function(imgUrl, options) {
        var img = new Image();
        img.src = imgUrl;
        // 如果图片被缓存，则直接返回缓存数据
        if (img.complete) {
            isFunction(options.load) && options.load.call(img);
            return;
        }
        // 加载错误后的事件
        img.onerror = function() {
            isFunction(options.error) && options.error.call(img);
            img = img.onload = img.onerror = null;
        };
        // 完全加载完毕的事件
        img.onload = function() {
            isFunction(options.load) && options.load.call(img);
            // IE gif动画会循环执行onload，置空onload即可
            img = img.onload = img.onerror = null;
        };
    };
});

define("pai/vwx0.0.1-beta/widget/footer/index-debug", [ "$-debug", "pai/vwx0.0.1-beta/frame/page_control-debug", "utility/backbone/1.1.2/backbone-debug", "pai/vwx0.0.1-beta/frame/ua-debug", "pai/vwx0.0.1-beta/frame/page-debug", "utility/zepto/modules/data/1.1.4/data-debug", "utility/hammer/plugins/jquery.hammer/1.1.3/jquery.hammer-debug", "utility/underscore/1.6.0/underscore-debug", "pai/vwx0.0.1-beta/common/view-debug", "utility/handlebars/1.3.0/runtime-debug", "pai/vwx0.0.1-beta/common/utility-debug", "pai/vwx0.0.1-beta/common/cross_domain_storage-debug", "matcha/cookie/1.0.0/cookie-debug", "pai/vwx0.0.1-beta/common/system-debug", "pai/vwx0.0.1-beta/common/global_config-debug", "pai/vwx0.0.1-beta/common/I_APP-debug", "pai/vwx0.0.1-beta/ui/m_alert/view-debug", "pai/vwx0.0.1-beta/common/template-helpers-debug" ], function(require, exports, module) {
    var $ = require("$-debug");
    var page_control = require("pai/vwx0.0.1-beta/frame/page_control-debug");
    var View = require("pai/vwx0.0.1-beta/common/view-debug");
    var utility = require("pai/vwx0.0.1-beta/common/utility-debug");
    var system = require("pai/vwx0.0.1-beta/common/system-debug");
    var App = require("pai/vwx0.0.1-beta/common/I_APP-debug");
    var templateHelpers = require("pai/vwx0.0.1-beta/common/template-helpers-debug");
    var footer_tpl = require("pai/vwx0.0.1-beta/widget/footer/tpl/footer-debug.handlebars");
    var n = 0;
    /**
     * 传入模板参数设置高亮
     * @ is_out_pai   外拍活动
     * @ is_model_pai 模特约拍
     * @ is_my_pai    我的
     */
    var footer = View.extend({
        attrs: {
            template: footer_tpl
        },
        events: {
            'tap [data-role="nav"]': function(ev) {
                var $cur_btn = $(ev.currentTarget);
                var nav_url = $cur_btn.attr("data-nav-url");
                if (nav_url == "message") {
                    if (!utility.login_id) {
                        page_control.navigate_to_page("account/login");
                        return;
                    }
                    App.isPaiApp && App.show_chat_list();
                }
                page_control.navigate_to_page(nav_url);
            }
        },
        /**
         * 构建元素
         * @private
         */
        _parseElement: function() {
            var self = this;
            var template_model = self.get("templateModel");
            self.set("templateModel", template_model);
            View.prototype._parseElement.apply(self);
        },
        /**
         * 事件安装
         * @private
         */
        _setup_events: function() {
            var self = this;
            self.on("render", function() {});
        },
        _navigate_page: function() {},
        setup: function() {
            var self = this;
            footer.all_bars.push(self);
            self._setup_events();
        },
        update_count: function(data) {
            var self = this;
            var sys_msg = utility.int(data.num);
            var act_msg = utility.int(utility.user.get("ticket_num")) || 0;
            var total = 0;
            total = sys_msg;
            var $footer_num = self.$('[data-flag="footer-msg"]').find('[data-role="num"]');
            if ($footer_num.length > 0) {
                if (total > 0) {
                    $footer_num.removeClass("fn-hide").html(total);
                } else {
                    $footer_num.addClass("fn-hide").html(0);
                }
            }
            // 更新个人中心消息数
            system.update_mine_msg({
                total: total,
                sys_msg: sys_msg,
                act_msg: act_msg
            });
        },
        render: function() {
            var self = this;
            // 调用渲染函数
            View.prototype.render.apply(self);
            self.trigger("render");
            return self;
        }
    });
    module.exports = footer;
    footer.all_bars = [];
    function each_tabbars(fn) {
        var cache_bars = footer.all_bars;
        for (var i = 0, len = cache_bars.length; i < len; i++) {
            fn.call(cache_bars, cache_bars[i], i);
        }
    }
});

/**
 * 模板help
 * --------------------
 * handlebars模板引擎的helps
 *
 */
define("pai/vwx0.0.1-beta/common/template-helpers-debug", [ "utility/handlebars/1.3.0/runtime-debug", "$-debug", "pai/vwx0.0.1-beta/common/utility-debug", "pai/vwx0.0.1-beta/common/cross_domain_storage-debug", "matcha/cookie/1.0.0/cookie-debug", "utility/underscore/1.6.0/underscore-debug", "pai/vwx0.0.1-beta/frame/ua-debug" ], function(require, exports, module) {
    var Handlebars = require("utility/handlebars/1.3.0/runtime-debug");
    var $ = require("$-debug");
    var Utility = require("pai/vwx0.0.1-beta/common/utility-debug");
    var currentDate = new Date();
    currentDate.setTime(currentDate.getTime());
    var Helps = module.exports = {
        formatString: function(str) {
            return new Handlebars.SafeString(str);
        },
        img_zoom: function(imgWidth, imgHeight, oriWidth) {
            var new_width = Utility.get_zoom_height_by_zoom_width(imgWidth, imgHeight, oriWidth);
            return "width:" + new_width + "px;height:" + imgHeight + "px";
        },
        /**
         * 图片缩放
         * @param imgWidth
         * @param imgHeight
         * @param options
         */
        imageScale: function(imgWidth, imgHeight, options) {
            if (!imgWidth || !imgHeight) {
                return "";
            }
            var newWidth, newHeight;
            var maxWidth = options.hash.maxWidth;
            //var maxHeight = options.hash.maxHeight;
            if (imgWidth !== maxWidth) {
                newWidth = maxWidth;
                newHeight = Utility.int(imgHeight / (imgWidth / newWidth));
            } else {
                newWidth = imgWidth;
                newHeight = imgHeight;
            }
            return "width:" + newWidth + "px;height:" + newHeight + "px";
        },
        add_one: function() {
            //利用+1的时机，在父级循环对象中添加一个_index属性，用来保存父级每次循环的索引
            this._index = index + 1;
            //返回+1之后的结果
            return this._index;
        },
        /**
         * 日期格式化
         * @param timestamp
         * @returns {string}
         */
        formatDateTime: function(timestamp) {
            if (!timestamp) {
                return "";
            }
            var dateTime = new Date();
            dateTime.setTime(toInt(timestamp));
            var fullYear = dateTime.getFullYear();
            var month = toTwoDigitsNumber(dateTime.getMonth() + 1);
            var date = toTwoDigitsNumber(dateTime.getDate() + 1);
            var hours = dateTime.getHours();
            var minutes = toTwoDigitsNumber(dateTime.getMinutes());
            var seconds = toTwoDigitsNumber(dateTime.getSeconds());
            return [ [ fullYear, month, date ].join("-"), [ hours, minutes, seconds ].join(":") ].join(" ");
        },
        /**
         * 格式化时间
         * @param timestamp
         * @returns {string}
         */
        formatTime: function(timestamp) {
            if (!timestamp) {
                return "";
            }
            var messageDate = new Date();
            messageDate.setTime(toInt(timestamp));
            var currFullYear = currentDate.getFullYear();
            var msgFullYear = messageDate.getFullYear();
            var currMonth = currentDate.getMonth() + 1;
            var msgMonth = messageDate.getMonth() + 1;
            var currDate = currentDate.getDate();
            var msgDate = messageDate.getDate();
            var currHours = currentDate.getHours();
            var msgHours = toTwoDigitsNumber(messageDate.getHours());
            var msgMinutes = toTwoDigitsNumber(messageDate.getMinutes());
            // UTC时间
            var timeZone = new Date();
            timeZone.setTime(messageDate.getTime() + 288e5);
            var timeZoneYear = timeZone.getUTCFullYear();
            var timeZoneMonth = timeZone.getUTCMonth() + 1;
            var timeZoneDate = timeZone.getUTCDate();
            var timeZoneHours = toTwoDigitsNumber(timeZone.getUTCHours());
            var timeZoneMinutes = toTwoDigitsNumber(timeZone.getUTCMinutes());
            var beforeTime = currentDate - messageDate;
            beforeTime = beforeTime > 0 ? beforeTime : 0;
            beforeTime = beforeTime / 1e3;
            if (currFullYear != msgFullYear) {
                return timeZoneYear + "-" + timeZoneMonth + "-" + timeZoneDate + " " + timeZoneHours + ":" + timeZoneMinutes;
            }
            if (currMonth != msgMonth || currDate != msgDate) {
                return timeZoneMonth + "月" + timeZoneDate + "日 " + timeZoneHours + ":" + timeZoneMinutes;
            }
            if (currHours != msgHours && beforeTime > 3600) {
                return "今天 " + timeZoneHours + ":" + timeZoneMinutes;
            }
            if (beforeTime > 9 && beforeTime < 51) {
                beforeTime = beforeTime < 1 ? 1 : beforeTime;
                return Math.floor((beforeTime - 1) / 10) + 1 + "0秒前";
            }
            if (beforeTime <= 9) {
                return "刚刚";
            }
            return Math.floor(beforeTime / 60 + 1) + "分钟前";
        }
    };
    // Helps
    // ---------
    function toInt(s) {
        return parseInt(s, 10);
    }
    /**
     * 转换为前导零的 2 位数字
     * @param s
     * @returns {boolean|string}
     */
    function toTwoDigitsNumber(s) {
        s < 10 && (s = "0" + s);
        return s;
    }
});

define("pai/vwx0.0.1-beta/widget/footer/tpl/footer-debug.handlebars", [ "utility/handlebars/1.3.0/runtime-debug" ], function(require, exports, module) {
    var Handlebars = require("utility/handlebars/1.3.0/runtime-debug");
    var template = Handlebars.template;
    module.exports = template(function(Handlebars, depth0, helpers, partials, data) {
        this.compilerInfo = [ 4, ">= 1.0.0" ];
        helpers = helpers || {};
        for (var key in Handlebars.helpers) {
            helpers[key] = helpers[key] || Handlebars.helpers[key];
        }
        data = data || {};
        var buffer = "", stack1, self = this;
        function program1(depth0, data) {
            return "current";
        }
        buffer += '<footer class="tab-footer-new"  data-role="footer">\r\n    <ul>\r\n        <li data-role="nav" data-nav-url="act/list" class="fn-hide">\r\n            <div class="nav-wrap ';
        stack1 = helpers["if"].call(depth0, depth0 && depth0.is_out_pai, {
            hash: {},
            inverse: self.noop,
            fn: self.program(1, program1, data),
            data: data
        });
        if (stack1 || stack1 === 0) {
            buffer += stack1;
        }
        buffer += '"  data-role="footer-act">\r\n                <i class="icon icon-act">活动</i>\r\n            </div>\r\n        </li>\r\n        <li data-role="nav" data-nav-url="hot">\r\n            <div class="nav-wrap ';
        stack1 = helpers["if"].call(depth0, depth0 && depth0.is_model_pai, {
            hash: {},
            inverse: self.noop,
            fn: self.program(1, program1, data),
            data: data
        });
        if (stack1 || stack1 === 0) {
            buffer += stack1;
        }
        buffer += '" data-role="footer-model">\r\n                <i class="icon icon-model">约yue</i>\r\n            </div>\r\n        </li>\r\n\r\n        <li data-role="nav" data-nav-url="message" class="msg fn-hide" data-flag="footer-msg">\r\n            <div class="nav-wrap ';
        stack1 = helpers["if"].call(depth0, depth0 && depth0.is_msg, {
            hash: {},
            inverse: self.noop,
            fn: self.program(1, program1, data),
            data: data
        });
        if (stack1 || stack1 === 0) {
            buffer += stack1;
        }
        buffer += '"  data-role="footer-msg">\r\n                <span class="new-tips fn-hide" data-role="num">0</span>\r\n                <i class="icon icon-msg-f">消息</i>\r\n            </div>\r\n        </li>\r\n\r\n\r\n        <li data-role="nav" data-nav-url="mine" data-flag="footer-mine">\r\n            <div class="nav-wrap ';
        stack1 = helpers["if"].call(depth0, depth0 && depth0.is_my_pai, {
            hash: {},
            inverse: self.noop,
            fn: self.program(1, program1, data),
            data: data
        });
        if (stack1 || stack1 === 0) {
            buffer += stack1;
        }
        buffer += '" data-role="footer-my">\r\n                <i class="icon icon-my">我的</i>\r\n            </div>\r\n        </li>\r\n    </ul>\r\n</footer>';
        return buffer;
    });
});

define("pai/vwx0.0.1-beta/widget/abnormal/view-debug", [ "$-debug", "pai/vwx0.0.1-beta/frame/page_control-debug", "utility/backbone/1.1.2/backbone-debug", "pai/vwx0.0.1-beta/frame/ua-debug", "pai/vwx0.0.1-beta/frame/page-debug", "utility/zepto/modules/data/1.1.4/data-debug", "utility/hammer/plugins/jquery.hammer/1.1.3/jquery.hammer-debug", "utility/underscore/1.6.0/underscore-debug", "pai/vwx0.0.1-beta/common/view-debug", "utility/handlebars/1.3.0/runtime-debug", "pai/vwx0.0.1-beta/common/utility-debug", "pai/vwx0.0.1-beta/common/cross_domain_storage-debug", "matcha/cookie/1.0.0/cookie-debug", "pai/vwx0.0.1-beta/ui/m_alert/view-debug" ], function(require, exports, module) {
    var $ = require("$-debug");
    var page_control = require("pai/vwx0.0.1-beta/frame/page_control-debug");
    var view = require("pai/vwx0.0.1-beta/common/view-debug");
    var Utility = require("pai/vwx0.0.1-beta/common/utility-debug");
    var Tip = require("pai/vwx0.0.1-beta/ui/m_alert/view-debug");
    var mainTpl = require("pai/vwx0.0.1-beta/widget/abnormal/tpl/main-debug.handlebars");
    var abnormal_view = view.extend({
        attrs: {
            template: mainTpl
        },
        events: {
            'tap [data-role="tap-screen"]': function(ev) {
                var self = this;
                self.trigger("tap:broken_network");
            },
            'tap [data-role="error-page-back"]': function() {
                var self = this;
                page_control.back();
            }
        },
        _setup_events: function() {
            var self = this;
        },
        /**
         * 安装滚动条
         * @private
         */
        _setup_scroll: function() {
            var self = this;
            var view_scroll_obj = Scroll(self.$container);
            self.view_scroll_obj = view_scroll_obj;
        },
        setup: function() {
            var self = this;
            self.$container = self.$("[data-role=container]");
            // 滚动容器
            // 安装事件
            self._setup_events();
        },
        /**
         * 销毁
         * @returns {abnormal}
         */
        destroy: function() {
            var self = this;
            view.prototype.remove.call(self);
            view.prototype.destroy.call(self);
            return self;
        }
    });
    module.exports = abnormal_view;
});

define("pai/vwx0.0.1-beta/widget/abnormal/tpl/main-debug.handlebars", [ "utility/handlebars/1.3.0/runtime-debug" ], function(require, exports, module) {
    var Handlebars = require("utility/handlebars/1.3.0/runtime-debug");
    var template = Handlebars.template;
    module.exports = template(function(Handlebars, depth0, helpers, partials, data) {
        this.compilerInfo = [ 4, ">= 1.0.0" ];
        helpers = helpers || {};
        for (var key in Handlebars.helpers) {
            helpers[key] = helpers[key] || Handlebars.helpers[key];
        }
        data = data || {};
        var buffer = "", stack1, helper, self = this, functionType = "function", escapeExpression = this.escapeExpression;
        function program1(depth0, data) {
            return "stream-network-error";
        }
        function program3(depth0, data) {
            return "stream-empty";
        }
        function program5(depth0, data) {
            return "icon-stream-network-error";
        }
        function program7(depth0, data) {
            return "icon-stream-empty";
        }
        function program9(depth0, data) {
            return "当前网络不可用";
        }
        function program11(depth0, data) {
            return "暂无内容";
        }
        function program13(depth0, data) {
            return "<p>请检查网络后，轻触屏幕重新加载</p>";
        }
        function program15(depth0, data) {
            return "<p>网页数据加载异常，请点击返回按钮</p>";
        }
        function program17(depth0, data) {
            return '\r\n    <div class="mr10 ml10">\r\n        <button class="ui-button ui-button-primary ui-button-size-large ui-button-block " data-role="error-page-back">\r\n            <span class="ui-button-content">返回</span>\r\n        </button>\r\n    </div>\r\n    ';
        }
        buffer += '<div>\r\n    <div class="stream-abnormal ';
        stack1 = helpers["if"].call(depth0, depth0 && depth0.broken_network, {
            hash: {},
            inverse: self.program(3, program3, data),
            fn: self.program(1, program1, data),
            data: data
        });
        if (stack1 || stack1 === 0) {
            buffer += stack1;
        }
        buffer += '" data-role="tap-screen" style="height:';
        if (helper = helpers.content_height) {
            stack1 = helper.call(depth0, {
                hash: {},
                data: data
            });
        } else {
            helper = depth0 && depth0.content_height;
            stack1 = typeof helper === functionType ? helper.call(depth0, {
                hash: {},
                data: data
            }) : helper;
        }
        buffer += escapeExpression(stack1) + 'px">\r\n        <h4 data-role="a" class="icon ';
        stack1 = helpers["if"].call(depth0, depth0 && depth0.broken_network, {
            hash: {},
            inverse: self.program(7, program7, data),
            fn: self.program(5, program5, data),
            data: data
        });
        if (stack1 || stack1 === 0) {
            buffer += stack1;
        }
        buffer += '">';
        stack1 = helpers["if"].call(depth0, depth0 && depth0.broken_network, {
            hash: {},
            inverse: self.program(11, program11, data),
            fn: self.program(9, program9, data),
            data: data
        });
        if (stack1 || stack1 === 0) {
            buffer += stack1;
        }
        buffer += "</h4>\r\n        ";
        stack1 = helpers["if"].call(depth0, depth0 && depth0.broken_network, {
            hash: {},
            inverse: self.noop,
            fn: self.program(13, program13, data),
            data: data
        });
        if (stack1 || stack1 === 0) {
            buffer += stack1;
        }
        buffer += "\r\n        ";
        stack1 = helpers["if"].call(depth0, depth0 && depth0.error_status, {
            hash: {},
            inverse: self.noop,
            fn: self.program(15, program15, data),
            data: data
        });
        if (stack1 || stack1 === 0) {
            buffer += stack1;
        }
        buffer += "\r\n    </div>\r\n\r\n    ";
        stack1 = helpers["if"].call(depth0, depth0 && depth0.error_status, {
            hash: {},
            inverse: self.noop,
            fn: self.program(17, program17, data),
            data: data
        });
        if (stack1 || stack1 === 0) {
            buffer += stack1;
        }
        buffer += "\r\n\r\n</div>";
        return buffer;
    });
});

/**
 * nolestLam 2014/8/19.
 */
/**
 * 下拉列表组件
 */
define("pai/vwx0.0.1-beta/ui/select_drop/view-debug", [ "$-debug", "pai/vwx0.0.1-beta/common/view-debug", "utility/backbone/1.1.2/backbone-debug", "utility/handlebars/1.3.0/runtime-debug", "pai/vwx0.0.1-beta/common/utility-debug", "pai/vwx0.0.1-beta/common/cross_domain_storage-debug", "matcha/cookie/1.0.0/cookie-debug", "utility/underscore/1.6.0/underscore-debug", "pai/vwx0.0.1-beta/frame/ua-debug", "pai/vwx0.0.1-beta/frame/page_control-debug", "pai/vwx0.0.1-beta/frame/page-debug", "utility/zepto/modules/data/1.1.4/data-debug", "utility/hammer/plugins/jquery.hammer/1.1.3/jquery.hammer-debug", "pai/vwx0.0.1-beta/common/I_APP-debug", "pai/vwx0.0.1-beta/common/global_config-debug", "pai/vwx0.0.1-beta/ui/m_alert/view-debug" ], function(require, exports, module) {
    var $ = require("$-debug");
    var View = require("pai/vwx0.0.1-beta/common/view-debug");
    var utility = require("pai/vwx0.0.1-beta/common/utility-debug");
    var select_drop_tpl = require("pai/vwx0.0.1-beta/ui/select_drop/tpl/select_drop-debug.handlebars");
    var page_control = require("pai/vwx0.0.1-beta/frame/page_control-debug");
    var App = require("pai/vwx0.0.1-beta/common/I_APP-debug");
    module.exports = View.extend({
        attrs: {
            template: select_drop_tpl
        },
        events: {
            'tap [data-role="sys"]': function() {
                var self = this;
                if (self.is_drop()) {
                    console.log("扫一扫");
                    if (App.isPaiApp) {
                        App.qrcodescan();
                        self.pull_up();
                    }
                }
            },
            'tap [data-role="go-search"]': function() {
                var self = this;
                if (self.is_drop()) {
                    self.pull_up();
                    setTimeout(function() {
                        page_control.navigate_to_page("search");
                    }, 100);
                }
            },
            'tap [data-role="module-card"]': function() {
                page_control.navigate_to_page("model_date/model_card/" + utility.user.get("user_id"));
            },
            'tap [data-role="go-act"]': function() {
                //发活动
                page_control.navigate_to_page("act/pub_info", utility.user);
            },
            'touch [data-role="more-select-drop-cover"]': function() {
                var self = this;
                self.pull_up();
            },
            webkitAnimationEnd: function() {
                var self = this;
                self._is_animating = false;
                //防止返回后再次出现上拉动画
                self.$select_drop.removeClass("pull-up");
                if (!self._is_dropped) {
                    self.$select_drop.addClass("fn-hide").removeClass("pin");
                } else {
                    self.$select_drop.addClass("pin").removeClass("fn-hide");
                }
            }
        },
        _setup_event: function() {
            var self = this;
        },
        setup: function() {
            var self = this;
            self.cover = self.$('[data-role="more-select-drop-cover"]');
            self._is_dropped = false;
            self._is_animating = false;
            self.$select_drop = self.$('[data-role="more-select-drop"]');
            self._setup_event();
        },
        is_drop: function() {
            //是否已下拉
            var self = this;
            return self._is_dropped;
        },
        drop_down: function() {
            //下拉
            var self = this;
            if (self._is_animating) {
                // 防止重复显示动画
                return;
            }
            self.$select_drop.removeClass("pull-up drop-down-stay fn-hide").addClass("drop-down");
            self._is_animating = true;
            self._is_dropped = true;
            self.cover.removeClass("fn-hide");
        },
        pull_up: function() {
            //上拉
            var self = this;
            if (self._is_animating) {
                // 防止重复显示动画
                return;
            }
            self.$select_drop.removeClass("drop-down-stay pin fn-hide").removeClass("drop-down").addClass("pull-up");
            self._is_animating = true;
            self._is_dropped = false;
            self.cover.addClass("fn-hide");
        },
        /* 在调用页面的index page_hide 内调用此方法
         * 用于固定下拉菜单
         */
        stay: function() {
            var self = this;
            if (self._is_dropped) {
                self.$select_drop.removeClass("drop-down").addClass("drop-down-stay");
            }
        }
    });
});

define("pai/vwx0.0.1-beta/ui/select_drop/tpl/select_drop-debug.handlebars", [ "utility/handlebars/1.3.0/runtime-debug" ], function(require, exports, module) {
    var Handlebars = require("utility/handlebars/1.3.0/runtime-debug");
    var template = Handlebars.template;
    module.exports = template(function(Handlebars, depth0, helpers, partials, data) {
        this.compilerInfo = [ 4, ">= 1.0.0" ];
        helpers = helpers || {};
        for (var key in Handlebars.helpers) {
            helpers[key] = helpers[key] || Handlebars.helpers[key];
        }
        data = data || {};
        var buffer = "", stack1, self = this;
        function program1(depth0, data) {
            var buffer = "";
            return buffer;
        }
        function program3(depth0, data) {
            return "fn-hide";
        }
        buffer += '<div >\r\n    <div class="more-select-drop-cover fn-hide" data-role="more-select-drop-cover"></div>\r\n    <div class="more-select-drop fn-hide" data-role="more-select-drop">\r\n        <div class="delta"></div>\r\n            <p class="more-select-choosen" data-role="sys"><i class="icon icon-btn-icon-cs more-select-sys"></i><span class="notice">扫一扫</span></p>\r\n            <!--p class="more-select-choosen ';
        stack1 = helpers["if"].call(depth0, depth0 && depth0.is_model, {
            hash: {},
            inverse: self.program(3, program3, data),
            fn: self.program(1, program1, data),
            data: data
        });
        if (stack1 || stack1 === 0) {
            buffer += stack1;
        }
        buffer += '" data-role="module-card"><i class="icon icon-set-50x50 more-select-module-card"></i>建立模特卡</p-->\r\n            <!--p class="more-select-choosen" data-role="go-act"><i class="icon icon-pub-50x50 more-select-go-act"></i>发活动</p-->\r\n            <p class="more-select-choosen" data-role="go-search"><i class="icon search-top-m-w more-select-go-act"></i><span class="notice">搜索</span></p>\r\n    </div>\r\n</div>';
        return buffer;
    });
});

/**
 * 针对移动端的下拉选择框
 * hdw 2014.10.8
 */
define("pai/vwx0.0.1-beta/ui/m_select/view-debug", [ "$-debug", "pai/vwx0.0.1-beta/common/view-debug", "utility/backbone/1.1.2/backbone-debug", "utility/handlebars/1.3.0/runtime-debug", "pai/vwx0.0.1-beta/common/utility-debug", "pai/vwx0.0.1-beta/common/cross_domain_storage-debug", "matcha/cookie/1.0.0/cookie-debug", "utility/underscore/1.6.0/underscore-debug", "pai/vwx0.0.1-beta/frame/ua-debug", "pai/vwx0.0.1-beta/common/new_iscroll-debug", "utility/iscroll/4.2.5/iscroll-debug", "pai/vwx0.0.1-beta/common/img-ready-debug", "pai/vwx0.0.1-beta/base/ua-debug" ], function(require, exports, module) {
    var $ = require("$-debug");
    var View = require("pai/vwx0.0.1-beta/common/view-debug");
    var utility = require("pai/vwx0.0.1-beta/common/utility-debug");
    var scroll = require("pai/vwx0.0.1-beta/common/new_iscroll-debug");
    var select_tpl = require("pai/vwx0.0.1-beta/ui/m_select/tpl/m_select-debug.handlebars");
    var options_tpl = require("pai/vwx0.0.1-beta/ui/m_select/tpl/m_options-debug.handlebars");
    module.exports = View.extend({
        attrs: {
            template: select_tpl
        },
        events: {
            webkitTransitionEnd: function(event) {},
            /**
             * 确认
             */
            'tap [data-role="confirm"]': function() {
                var self = this;
                self.trigger("confirm:success", self.get_value());
                self.hide();
            },
            /**
             * 取消
             */
            'tap [data-role="cancel"]': function() {
                var self = this;
                self.hide();
            },
            'tap [data-role="selected-area"]': function() {
                var self = this;
                self.trigger("confirm:success", self.get_value());
                self.hide();
            }
        },
        _parseElement: function() {
            var self = this;
            var template_model = self.get("templateModel");
            self.set("templateModel", template_model);
            View.prototype._parseElement.apply(self);
        },
        set_value: function(data) {
            var self = this;
            self.selected_data = data;
        },
        set_data_select: function(key) {
            var self = this;
            var li = self.$warpper.find("li");
            li.eq(key).attr("selected", "");
        },
        /**
         * 获取选中值
         */
        get_value: function() {
            var self = this;
            var $selected_obj_arr = self.$warpper.find("li[selected]");
            var val_arr = [];
            for (var n = 0; n < $selected_obj_arr.length; n++) {
                var $selected_obj = $selected_obj_arr.eq(n);
                var value = $selected_obj.attr("data-value");
                var id = $selected_obj.attr("data-id");
                var text = $selected_obj.html();
                val_arr[n] = {
                    value: value,
                    text: text,
                    id: id
                };
            }
            return val_arr;
        },
        set_options: function(data, scroll_idx) {
            var self = this;
            var scroll_idx = scroll_idx || 0;
            var options_html_str = options_tpl({
                options: data
            });
            // 重新清除
            self.$scroll_wrapper_groups.eq(scroll_idx) && self.$scroll_wrapper_groups.eq(scroll_idx).remove();
            self.$scroll_view_obj["scroll_" + scroll_idx] = null;
            self.$warpper.append(options_html_str);
            self.$scroll_wrapper_groups = self.$('[data-role="scroll_warpper"]');
            self._setup_scroll();
        },
        setup: function() {
            var self = this;
            self.$warpper = self.$("[data-role=select-wrapper]");
            self.$container = self.$('[data-role="content"]');
            self.$warpper.height(245);
            var template_model = self.get("templateModel");
            self.$scroll_view_obj = {};
            // 渲染下拉选择列表
            var options_html_str = options_tpl({
                options: template_model.options
            });
            self.$warpper.html(options_html_str);
            self.$scroll_wrapper_groups = self.$('[data-role="scroll_warpper"]');
            self._setup_scroll();
        },
        /**
         * 安装滚动条
         * @private
         */
        _setup_scroll: function() {
            var self = this;
            self.$scroll_wrappers = [];
            self.is_init = true;
            self.$scroll_wrapper_groups.each(function(i, obj) {
                self.$scroll_wrappers[i] = $(obj);
                if (!self.$scroll_view_obj["scroll_" + i]) {
                    self.$scroll_wrappers[i].height(36);
                    // 初始化滚动条
                    self.$scroll_view_obj["scroll_" + i] = scroll(self.$scroll_wrappers[i], {
                        bounce: false,
                        snap: "li",
                        momentum: false,
                        hScroll: false,
                        vScroll: true,
                        hScrollbar: false,
                        vScrollbar: false,
                        checkDOMChanges: true
                    });
                    self.$scroll_wrappers[i].css("overflow", "");
                    self.$scroll_view_obj["scroll_" + i].index = i;
                    self.$scroll_view_obj["scroll_" + i].on("scrollMove", function() {
                        self.is_init = false;
                    });
                    // 选中触发
                    self.$scroll_view_obj["scroll_" + i].on("scrollEnd", function() {
                        if (self.is_init) {
                            return;
                        }
                        var _self = this;
                        // 设置选中
                        var $li = $(_self.wrapper).find("li");
                        $li.removeAttr("selected");
                        $li.eq(this.currPageY).attr("selected", "true");
                        // 多个选项选的时候
                        if (self.$scroll_wrappers.length > 1) {
                            var val_arr = [];
                            var $selected_obj_arr = self.$warpper.find("li[selected]");
                            for (var n = 0; n < $selected_obj_arr.length; n++) {
                                var $selected_obj = $selected_obj_arr.eq(n);
                                var value = $selected_obj.attr("data-value");
                                var text = $selected_obj.html();
                                var id = $selected_obj.attr("data-id");
                                val_arr[n] = {
                                    value: value,
                                    text: text,
                                    id: id
                                };
                            }
                            if (self.is_show) {
                                self.trigger("change:options", val_arr, _self);
                            }
                        } else {
                            var value = $li.eq(this.currPageY).attr("data-value");
                            var text = $li.eq(this.currPageY).html();
                            var id = $li.eq(this.currPageY).attr("data-id");
                            self.trigger("change:options", [ {
                                value: value,
                                text: text,
                                id: id
                            } ], _self);
                        }
                    });
                }
            });
        },
        show: function() {
            var self = this;
            self.$el.removeClass("fn-hide");
            for (var i = 0; i < self.$scroll_wrappers.length; i++) {
                self.$scroll_view_obj["scroll_" + i].refresh();
            }
            // 此处目的是为了延时触发change:options事件
            setTimeout(function() {
                self.is_show = true;
                // 第二次循环滚动条组，为了实现滚动到指定位置，但不是最好做法
                for (var i = 0; i < self.$scroll_wrappers.length; i++) {
                    var idx_obj = self.$scroll_wrappers[i].find('li[selected="true"]');
                    self.$scroll_view_obj["scroll_" + i].scrollToElement(idx_obj[0], 0);
                }
            }, 0);
            $("body").css("pointer-events", "none");
            self.$el.css("pointer-events", "auto");
        },
        hide: function() {
            var self = this;
            self.$el.addClass("fn-hide");
            self.is_show = false;
            setTimeout(function() {
                $("body").css("pointer-events", "auto");
            }, 500);
        },
        render: function() {
            var self = this;
            // 调用渲染函数
            View.prototype.render.apply(self);
            self.trigger("render");
            return self;
        }
    });
});

/**
 * Created by hdw on 2014/11/23.
 */
define("pai/vwx0.0.1-beta/common/new_iscroll-debug", [ "$-debug", "utility/iscroll/4.2.5/iscroll-debug", "pai/vwx0.0.1-beta/common/utility-debug", "pai/vwx0.0.1-beta/common/cross_domain_storage-debug", "matcha/cookie/1.0.0/cookie-debug", "utility/underscore/1.6.0/underscore-debug", "pai/vwx0.0.1-beta/frame/ua-debug", "pai/vwx0.0.1-beta/common/img-ready-debug", "pai/vwx0.0.1-beta/base/ua-debug" ], function(require, exports, module) {
    var $ = require("$-debug");
    var IScroll = require("utility/iscroll/4.2.5/iscroll-debug");
    var Utility = require("pai/vwx0.0.1-beta/common/utility-debug");
    var ImgReady = require("pai/vwx0.0.1-beta/common/img-ready-debug");
    var UA = require("pai/vwx0.0.1-beta/base/ua-debug");
    var lazyLoadMaps = {};
    // 扩展后加载方法
    if (!IScroll.prototype.on) {
        IScroll.prototype.on = function(type, fn) {
            if (!this._events[type]) {
                this._events[type] = [];
            }
            this._events[type].push(fn);
            return this;
        };
        IScroll.prototype.off = function(type, fn) {
            if (!this._events[type]) {
                return;
            }
            var index = this._events[type].indexOf(fn);
            if (index > -1) {
                this._events[type].splice(index, 1);
            }
            return this;
        };
        IScroll.prototype._execEvent = function(type) {
            if (!this._events) {
                this._events = {};
            }
            if (!this._events[type]) {
                return;
            }
            var i = 0, l = this._events[type].length;
            if (!l) {
                return;
            }
            for (;i < l; i++) {
                this._events[type][i].apply(this, [].slice.call(arguments, 1));
            }
            return this;
        };
    }
    if (!IScroll.prototype.resetLazyLoad) {
        /**
         * 重置后加载项目
         * @returns {IScroll}
         */
        IScroll.prototype.resetLazyLoad = function() {
            var self = this;
            if (!self.options.lazyLoad) {
                return self;
            }
            self._scrollEndTimer && clearTimeout(self._scrollEndTimer);
            var currentHash = Utility.getHash();
            lazyLoadMaps[currentHash] = {
                instance: self,
                $element: $(self.scroller),
                queue: []
            };
            collectElement();
            var wrapperHeight = self.wrapperH;
            var offset = wrapperHeight / 2;
            checkElement({
                thresholdMin: -offset,
                thresholdMax: wrapperHeight + offset,
                y: self.y
            });
            return self;
        };
    }
    // 滚动速度
    var raw = IScroll.prototype._momentum;
    IScroll.prototype._momentum = function(dist, time, maxDistUpper, maxDistLower, size) {
        return raw.apply(this, [ dist, time * 2, // 倍数越少越快
        maxDistUpper, maxDistLower, size ]);
    };
    module.exports = function(element, options) {
        options || (options = {});
        // 初始化实例
        if (!!element[0] || element instanceof $) {
            element = element[0];
        }
        options.checkDOMChanges = false;
        options.bounce = !options.bounce ? true : false;
        options.useTransform = true;
        options.useTransition = UA.isIDevice;
        options.zoom = false;
        options.handleClick = false;
        options.hideScrollbar = false;
        options.scrollbarClass = "scroll_bar_class";
        options.fadeScrollbar = true;
        options.hideScrollbar = true;
        options.onRefresh = function() {
            return this._execEvent("refresh");
        };
        options.onTouchEnd = function() {
            return this._execEvent("touchEnd");
        };
        options.onScrollStart = function(e) {
            return this._execEvent("scrollStart", e);
        };
        options.onScrollMove = function() {
            return this._execEvent("scrollMove");
        };
        options.onScrollEnd = function() {
            return this._execEvent("scrollEnd");
        };
        options.onDestroy = function() {
            return this._execEvent("destroy");
        };
        options.onBeforeScrollStart = function(e) {
            return this._execEvent("scrollBeforeStart", e);
        };
        $(element).css("position", "relative");
        var myScroll = new IScroll(element, options);
        console.log(myScroll);
        // 防止阻塞，提高性能
        myScroll.refresh = function() {
            var self = this;
            setTimeout(function() {
                IScroll.prototype.refresh.apply(self, arguments);
            }, 0);
            return self;
        };
        myScroll.on("scrollBeforeStart", function(e) {
            var target = e.target;
            while (target.nodeType != 1) target = target.parentNode;
            if (target.tagName != "SELECT" && target.tagName != "INPUT" && target.tagName != "TEXTAREA") {
                e.preventDefault();
            }
        });
        myScroll.on("scrollEnd", function() {
            var self = this;
            self._scrollEndTimer && clearTimeout(self._scrollEndTimer);
            self._scrollEndTimer = setTimeout(function() {
                self._execEvent("scrollEndAfter");
            }, 500);
        });
        myScroll.on("scrollMove", function() {
            var self = this;
            self._execEvent("scrollMoveAfter");
        });
        if (!options.lazyLoad) {
            return myScroll;
        }
        var currentHash = Utility.getHash();
        // 内容长度发生变化，刷新滚动条
        myScroll.on("refresh", function() {
            refreshElementPosition();
            collectElement();
        });
        myScroll.on("destroy", function() {
            var self = this;
            self._scrollEndTimer && clearTimeout(self._scrollEndTimer);
            lazyLoadMaps[currentHash] && delete lazyLoadMaps[currentHash];
        });
        myScroll.on("scrollEndAfter", function() {
            var self = this;
            var wrapperHeight = self.wrapperH;
            var offset = wrapperHeight / 2;
            checkElement({
                thresholdMin: -offset,
                thresholdMax: wrapperHeight + offset,
                y: self.y
            });
        });
        // 重置后加载项目
        myScroll.resetLazyLoad();
        return myScroll;
    };
    // Helps
    // ----------
    /**
     * 筛选符合条件的后加载元素
     * @param options
     */
    function checkElement(options) {
        var hash = Utility.getHash();
        var info = lazyLoadMaps[hash];
        if (!info) {
            return;
        }
        var imgQueues = info.queue;
        var reserveItem = [], $img, imgOffset, imgOffsetTop, queueInfo;
        while (queueInfo = imgQueues.shift()) {
            $img = queueInfo.$element;
            //console.log($img.parent().position())
            imgOffset = queueInfo.position || $img.position();
            imgOffsetTop = imgOffset.top + options.y;
            if (options.thresholdMin <= imgOffsetTop && options.thresholdMax >= imgOffsetTop) {
                //console.log(queueInfo)
                loadImg(queueInfo, info);
            } else {
                reserveItem.push(queueInfo);
            }
        }
        lazyLoadMaps[hash].queue = reserveItem;
    }
    /**
     * 收集后加载元素
     */
    function collectElement() {
        var hash = Utility.getHash();
        var info = lazyLoadMaps[hash];
        if (!lazyLoadMaps[hash]) {
            return;
        }
        var $images = info.$element.find("i[data-lazyload]");
        var i = 0, len = $images.length;
        var imgUrl, $img;
        for (;i < len; i++) {
            $img = $images.eq(i);
            imgUrl = $img.attr("data-lazyload");
            if (!imgUrl) {
                continue;
            }
            info.queue.push({
                uri: imgUrl,
                position: get_pos($img[0]),
                $element: $img
            });
            $img.removeAttr("data-lazyload");
        }
    }
    function refreshElementPosition() {
        var hash = Utility.getHash();
        var info = lazyLoadMaps[hash];
        if (!info) {
            return;
        }
        var imgQueues = info.queue;
        var i = 0, len = imgQueues.length, $img, queueInfo;
        if (!len) {
            return;
        }
        for (;i < len; ++i) {
            queueInfo = lazyLoadMaps[hash]["queue"][i];
            $img = queueInfo.$element;
            queueInfo.position = get_pos($img[0]);
        }
    }
    /**
     * 加载图片
     * @param queueInfo 队列信息
     * @param MapInfo
     * @param force 是否强制
     */
    function loadImg(queueInfo, MapInfo, force) {
        var requestUri = queueInfo.uri;
        //requestUri = requestUri.replace('.poco.cn', '.poco.com');
        requestUri && ImgReady(requestUri, {
            load: function() {
                var imgNode = this;
                var needRefresh = false;
                var $img = queueInfo.$element;
                var size = Utility.int($img.attr("data-size") || 0);
                var css = {
                    backgroundImage: "url(" + queueInfo.uri + ")"
                };
                if (size) {
                    needRefresh = true;
                    var oldWidth = imgNode.width;
                    var oldHeight = imgNode.height;
                    var newWidth = size;
                    var newHeight = newWidth * oldHeight / oldWidth;
                    css.width = Utility.int(newWidth);
                    css.height = Utility.int(newHeight);
                }
                if (force && imgNode.width > imgNode.height) {
                    css.backgroundSize = "auto 100%";
                }
                queueInfo.retry && $img.removeClass("refresh reload");
                $img.css(css).addClass("loaded");
                if (needRefresh) {
                    MapInfo.instance.refresh();
                }
            },
            error: function() {
                if (queueInfo.retry) {
                    queueInfo.$element.removeClass("refresh reload").addClass("error");
                    return;
                }
                var size = "";
                // 145、230和440图片格式错误时，提交修复请求
                if (requestUri.indexOf("_145.jpg") !== -1) {
                    size = 145;
                } else if (requestUri.indexOf("_230.jpg") !== -1) {
                    size = 230;
                } else if (requestUri.indexOf("_440.jpg") !== -1) {
                    size = 440;
                }
                // 修复
                fixImg(requestUri, size);
                queueInfo.$element.one("tap", function(event) {
                    event.stopPropagation();
                    event.preventDefault();
                    queueInfo.retry = 1;
                    loadImg(queueInfo, MapInfo);
                }).addClass("refresh");
            }
        });
    }
    function fixImg(requestUri, size) {
        return;
        var reUri = new RegExp("_" + size + ".jpg");
        var newRequestUri = requestUri.replace(reUri, "_640.jpg");
        var url = "/module_common/item/fix_item_145img.php?item_url=" + encodeURIComponent(newRequestUri) + "&size=" + size;
        if (size == 440) {
            url += "&resize_rules=only_set_width";
        }
        new Image().src = url;
    }
    function get_pos(obj) {
        var curleft = curtop = 0;
        if (obj.offsetParent) {
            do {
                curleft += obj.offsetLeft;
                curtop += obj.offsetTop;
            } while (obj = obj.offsetParent);
        }
        return {
            top: curtop,
            left: curleft
        };
    }
});

define("pai/vwx0.0.1-beta/base/ua-debug", [ "$-debug" ], function(require, exports, module) {
    var $ = require("$-debug");
    var ua = {};
    var win = window;
    var nav = win.navigator;
    var app_version = nav.appVersion;
    //访问来自手机 
    ua.isMobile = /(iphone|ipod|android|ios|ipad|nokia|blackberry|tablet|symbian)/.test(nav.userAgent.toLowerCase());
    //手机系统
    ua.isAndroid = /android/gi.test(app_version);
    ua.isIDevice = /iphone|ipad/gi.test(app_version);
    ua.isTouchPad = /hp-tablet/gi.test(app_version);
    ua.isIpad = /ipad/gi.test(app_version);
    ua.otherPhone = !(ua.isAndroid || ua.isIDevice);
    //浏览器品牌类型
    ua.is_uc = /uc/gi.test(app_version);
    ua.is_chrome = /CriOS/gi.test(app_version) || /Chrome/gi.test(app_version);
    ua.is_qq = /QQBrowser/gi.test(app_version);
    ua.is_real_safari = /safari/gi.test(app_version) && !ua.is_chrome && !ua.is_qq;
    //真正的原生IOS safari浏览器
    //iphone safari是否全屏
    ua.is_standalone = window.navigator.standalone ? true : false;
    ua.window_width = window.innerWidth;
    ua.window_height = window.innerHeight;
    //ua.window_height = $(window).height()
    //手机版本
    if (ua.isAndroid) {
        var android_version = parseFloat(app_version.slice(app_version.indexOf("Android") + 8));
        ua.android_version = android_version;
    } else if (ua.isIDevice) {
        var v = app_version.match(/OS (\d+)_(\d+)_?(\d+)?/);
        if (v) {
            var ios_version = v[1];
            if (v[2]) ios_version += "." + v[2];
            if (v[3]) ios_version += "." + v[3];
            ua.ios_version = ios_version;
        }
    }
    ua.is_iphone_safari_no_fullscreen = ua.isIDevice && ua.ios_version < "7" && !ua.isIpad && ua.is_real_safari && !ua.is_standalone;
    return ua;
});

if (typeof process_add == "function") {
    process_add();
}

define("pai/vwx0.0.1-beta/ui/m_select/tpl/m_select-debug.handlebars", [ "utility/handlebars/1.3.0/runtime-debug" ], function(require, exports, module) {
    var Handlebars = require("utility/handlebars/1.3.0/runtime-debug");
    var template = Handlebars.template;
    module.exports = template(function(Handlebars, depth0, helpers, partials, data) {
        this.compilerInfo = [ 4, ">= 1.0.0" ];
        helpers = helpers || {};
        for (var key in Handlebars.helpers) {
            helpers[key] = helpers[key] || Handlebars.helpers[key];
        }
        data = data || {};
        return '<div class="ui-dialog fn-hide" >\r\n    <div class="ui-mask"></div>\r\n    <div class="ui-dialog-container-out">\r\n        <div class="ui-dialog-container" >\r\n            <div class="ui-dialog-content ui-select" data-role="content" >\r\n                <div data-role="select-wrapper" class="select-wrapper" style="overflow:hidden;">\r\n\r\n                </div>\r\n                <div data-role="selected-area" class="selected-area">\r\n\r\n                </div>\r\n            </div>\r\n            <footer class="ui-dialog-footer">\r\n                <button class="ui-dialog-button" data-role="confirm">确认</button>\r\n                <button class="ui-dialog-button" data-role="cancel">取消</button>\r\n            </footer>\r\n        </div>\r\n    </div>\r\n\r\n\r\n</div>';
    });
});

define("pai/vwx0.0.1-beta/ui/m_select/tpl/m_options-debug.handlebars", [ "utility/handlebars/1.3.0/runtime-debug" ], function(require, exports, module) {
    var Handlebars = require("utility/handlebars/1.3.0/runtime-debug");
    var template = Handlebars.template;
    module.exports = template(function(Handlebars, depth0, helpers, partials, data) {
        this.compilerInfo = [ 4, ">= 1.0.0" ];
        helpers = helpers || {};
        for (var key in Handlebars.helpers) {
            helpers[key] = helpers[key] || Handlebars.helpers[key];
        }
        data = data || {};
        var stack1, functionType = "function", escapeExpression = this.escapeExpression, self = this;
        function program1(depth0, data) {
            var buffer = "", stack1;
            buffer += "\r\n    ";
            stack1 = helpers.each.call(depth0, depth0 && depth0.options, {
                hash: {},
                inverse: self.noop,
                fn: self.program(2, program2, data),
                data: data
            });
            if (stack1 || stack1 === 0) {
                buffer += stack1;
            }
            buffer += "\r\n\r\n";
            return buffer;
        }
        function program2(depth0, data) {
            var buffer = "", stack1;
            buffer += '\r\n        <section class="select-container" data-role="scroll_warpper">\r\n            <ul >\r\n                ';
            stack1 = helpers.each.call(depth0, depth0, {
                hash: {},
                inverse: self.noop,
                fn: self.program(3, program3, data),
                data: data
            });
            if (stack1 || stack1 === 0) {
                buffer += stack1;
            }
            buffer += "\r\n            </ul>\r\n        </section>\r\n    ";
            return buffer;
        }
        function program3(depth0, data) {
            var buffer = "", stack1;
            buffer += '\r\n                    <li data-id="' + escapeExpression((stack1 = depth0 && depth0.id, 
            typeof stack1 === functionType ? stack1.apply(depth0) : stack1)) + '" data-value="' + escapeExpression((stack1 = depth0 && depth0.value, 
            typeof stack1 === functionType ? stack1.apply(depth0) : stack1)) + '" ';
            stack1 = helpers["if"].call(depth0, depth0 && depth0.selected, {
                hash: {},
                inverse: self.noop,
                fn: self.program(4, program4, data),
                data: data
            });
            if (stack1 || stack1 === 0) {
                buffer += stack1;
            }
            buffer += ">" + escapeExpression((stack1 = depth0 && depth0.text, typeof stack1 === functionType ? stack1.apply(depth0) : stack1)) + "</li>\r\n                ";
            return buffer;
        }
        function program4(depth0, data) {
            var buffer = "", stack1;
            buffer += 'selected="' + escapeExpression((stack1 = depth0 && depth0.selected, typeof stack1 === functionType ? stack1.apply(depth0) : stack1)) + '"';
            return buffer;
        }
        stack1 = helpers["if"].call(depth0, depth0 && depth0.options, {
            hash: {},
            inverse: self.noop,
            fn: self.program(1, program1, data),
            data: data
        });
        if (stack1 || stack1 === 0) {
            return stack1;
        } else {
            return "";
        }
    });
});

/**
 * 下拉刷新组件
 */
define("pai/vwx0.0.1-beta/widget/pull_down/view-debug", [ "$-debug", "pai/vwx0.0.1-beta/common/view-debug", "utility/backbone/1.1.2/backbone-debug", "utility/handlebars/1.3.0/runtime-debug", "pai/vwx0.0.1-beta/common/utility-debug", "pai/vwx0.0.1-beta/common/cross_domain_storage-debug", "matcha/cookie/1.0.0/cookie-debug", "utility/underscore/1.6.0/underscore-debug", "pai/vwx0.0.1-beta/frame/ua-debug" ], function(require, exports, module) {
    var $ = require("$-debug");
    var View = require("pai/vwx0.0.1-beta/common/view-debug");
    var utility = require("pai/vwx0.0.1-beta/common/utility-debug");
    var pull_down_tpl = require("pai/vwx0.0.1-beta/widget/pull_down/tpl/pull_down-debug.handlebars");
    module.exports = View.extend({
        attrs: {
            template: pull_down_tpl
        },
        events: {},
        /**
         * 设置下拉刷新的样式
         * @param type
         * @private
         */
        set_pull_down_style: function(type) {
            var self = this;
            var style = "pull-down-container ";
            var text = "下拉刷新";
            // 重置样式
            self.$pull_down_container.attr("class", style);
            switch (type) {
              case "release":
                style += "release";
                text = "释放刷新";
                self.$pull_down_container.find("i").removeClass(" ui-loading-animate");
                break;

              case "loading":
                style += "loading";
                text = "正在加载";
                self.$pull_down_container.find("i").addClass(" ui-loading-animate");
                break;

              case "loaded":
                style += "loaded";
                text = "下拉刷新";
                self.$pull_down_container.find("i").removeClass(" ui-loading-animate");
                break;
            }
            //icon-loading-40x40
            //icon-more-24x32
            self.$("[data-role=pull-down-text]").html(text);
            self.$pull_down_container.addClass(style);
        },
        setup: function() {
            var self = this;
            self.$pull_down_container = self.$el;
        },
        render: function() {
            var self = this;
            // 调用渲染函数
            View.prototype.render.apply(self);
            self.trigger("render");
            return self;
        }
    });
});

define("pai/vwx0.0.1-beta/widget/pull_down/tpl/pull_down-debug.handlebars", [ "utility/handlebars/1.3.0/runtime-debug" ], function(require, exports, module) {
    var Handlebars = require("utility/handlebars/1.3.0/runtime-debug");
    var template = Handlebars.template;
    module.exports = template(function(Handlebars, depth0, helpers, partials, data) {
        this.compilerInfo = [ 4, ">= 1.0.0" ];
        helpers = helpers || {};
        for (var key in Handlebars.helpers) {
            helpers[key] = helpers[key] || Handlebars.helpers[key];
        }
        data = data || {};
        var buffer = "", stack1, helper, functionType = "function", escapeExpression = this.escapeExpression;
        buffer += '<div data-role="pull-down" class="pull-down-container " style="top: ';
        if (helper = helpers.top) {
            stack1 = helper.call(depth0, {
                hash: {},
                data: data
            });
        } else {
            helper = depth0 && depth0.top;
            stack1 = typeof helper === functionType ? helper.call(depth0, {
                hash: {},
                data: data
            }) : helper;
        }
        buffer += escapeExpression(stack1) + 'px">\r\n    <div class="icon-container">\r\n        <i class="icon icon-more-24x32"></i>\r\n    </div>\r\n    <span class="text" data-role="pull-down-text">下拉刷新</span>\r\n</div>\r\n';
        return buffer;
    });
});

define("pai/vwx0.0.1-beta/model_date/hot/tpl/main-debug.handlebars", [ "utility/handlebars/1.3.0/runtime-debug" ], function(require, exports, module) {
    var Handlebars = require("utility/handlebars/1.3.0/runtime-debug");
    var template = Handlebars.template;
    module.exports = template(function(Handlebars, depth0, helpers, partials, data) {
        this.compilerInfo = [ 4, ">= 1.0.0" ];
        helpers = helpers || {};
        for (var key in Handlebars.helpers) {
            helpers[key] = helpers[key] || Handlebars.helpers[key];
        }
        data = data || {};
        return '<main role="main" class="index-hot">\r\n\r\n\r\n    <header class="nav-header hot-find-nav-header">\r\n        <div class="place_em"></div>\r\n        <div class="place" data-role="select-loc">\r\n            <div data-role="select-city">广州</div><i class="icon icon-allow-22x12 fn-hide"></i>\r\n        </div>\r\n\r\n        <hgroup class="fn-hide">\r\n            <h3 class="title has-new current" data-role="select-hot">热门</h3>\r\n            <h3 class="title has-new" data-role="select-find">发现</h3>\r\n        </hgroup>\r\n        \r\n        <h3 data-role="head-refresh" class="title">约yue</h3>\r\n\r\n        <div class="right-button-wrap r-icon" data-role="search">\r\n            <i class="icon icon-search-top-m icon-fix-exp"></i>\r\n        </div>\r\n        <div class="right-button-wrap r-icon fn-hide" data-role="select-more">\r\n            <!--div class="search-more-wrap fn-hide" data-role="search">\r\n                <i class="icon icon-search-top-m"></i>\r\n            </div>\r\n            <div class="select-more-wrap" data-role="select-more">\r\n                <i class="icon icon-sao-50x50 more-select-icon"></i>\r\n            </div-->\r\n            <div class="search-more-wrap">\r\n                <i class="icon icon-add-40x40-new more-select-icon"></i>\r\n            </div>\r\n        </div>\r\n\r\n    </header>\r\n\r\n\r\n            <div data-role="container" class="content-body" >\r\n\r\n                <div >\r\n\r\n\r\n                    <div class="new-index-hot" >\r\n\r\n                        <div class="pop-model-car-tips-v2 fn-hide" data-role="pop-model-car-tips-v2">\r\n                            <div class="lbox fldi">\r\n                                <i class="icon icon-wx-icon"></i>\r\n                                <div class="s-left">\r\n                                    <p>约yue</p>\r\n                                    <p>10000+模特随心约</p>\r\n                                </div>\r\n                            </div>\r\n                            <div class="rbox fldi">\r\n                                <button class="ui-button ui-button-primary ui-button-size-min ui-button-block ">\r\n                                    <span class="ui-button-content">立即打开</span>\r\n                                </button>\r\n                            </div>\r\n\r\n                        </div>\r\n                        \r\n\r\n                        <div data-role="refresh-bar-container" class="refresh-bar-container">\r\n\r\n                        </div>\r\n\r\n                        <div data-role="ad-pic-out" class="ad-pic-out">\r\n\r\n                        </div>\r\n\r\n                        <div class="item-wrap" data-role="item-wrap">\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n\r\n\r\n            \r\n\r\n</main>\r\n\r\n';
    });
});

define("pai/vwx0.0.1-beta/model_date/hot/tpl/item-debug.handlebars", [ "utility/handlebars/1.3.0/runtime-debug" ], function(require, exports, module) {
    var Handlebars = require("utility/handlebars/1.3.0/runtime-debug");
    var template = Handlebars.template;
    module.exports = template(function(Handlebars, depth0, helpers, partials, data) {
        this.compilerInfo = [ 4, ">= 1.0.0" ];
        helpers = helpers || {};
        for (var key in Handlebars.helpers) {
            helpers[key] = helpers[key] || Handlebars.helpers[key];
        }
        data = data || {};
        var buffer = "", stack1, functionType = "function", escapeExpression = this.escapeExpression, self = this;
        function program1(depth0, data) {
            var buffer = "", stack1;
            buffer += '\r\n    <div class="item">\r\n        <div class="part-a">\r\n            <div class="lbox ">' + escapeExpression((stack1 = (stack1 = depth0 && depth0.datas, 
            stack1 == null || stack1 === false ? stack1 : stack1.goddess_model3_title), typeof stack1 === functionType ? stack1.apply(depth0) : stack1)) + '</div>\r\n            <div class="rbox more fn-hide" data-role="to_rank_score">更多 <i class="icon icon-allow-22x12"></i></div>\r\n        </div>\r\n        <div class="part-b">\r\n            <ul class="list">\r\n                ';
            stack1 = helpers.each.call(depth0, (stack1 = depth0 && depth0.datas, stack1 == null || stack1 === false ? stack1 : stack1.goddess_model3), {
                hash: {},
                inverse: self.noop,
                fn: self.program(2, program2, data),
                data: data
            });
            if (stack1 || stack1 === 0) {
                buffer += stack1;
            }
            buffer += "\r\n            </ul>\r\n        </div>\r\n    </div>\r\n\r\n    ";
            stack1 = helpers["if"].call(depth0, (stack1 = depth0 && depth0.datas, stack1 == null || stack1 === false ? stack1 : stack1.goddess_model3_has_next_page), {
                hash: {},
                inverse: self.noop,
                fn: self.program(4, program4, data),
                data: data
            });
            if (stack1 || stack1 === 0) {
                buffer += stack1;
            }
            buffer += "\r\n";
            return buffer;
        }
        function program2(depth0, data) {
            var buffer = "", stack1, helper;
            buffer += '\r\n                    <li data-user-id="';
            if (helper = helpers.user_id) {
                stack1 = helper.call(depth0, {
                    hash: {},
                    data: data
                });
            } else {
                helper = depth0 && depth0.user_id;
                stack1 = typeof helper === functionType ? helper.call(depth0, {
                    hash: {},
                    data: data
                }) : helper;
            }
            buffer += escapeExpression(stack1) + '" data-role="model">\r\n                        <div class="avatar-size-mod avatar-size-mod-80">\r\n                            <span class="icon avatar-size-area "></span>\r\n                            <i class="img image-img avatar-size-img" data-lazyload="';
            if (helper = helpers.user_icon) {
                stack1 = helper.call(depth0, {
                    hash: {},
                    data: data
                });
            } else {
                helper = depth0 && depth0.user_icon;
                stack1 = typeof helper === functionType ? helper.call(depth0, {
                    hash: {},
                    data: data
                }) : helper;
            }
            buffer += escapeExpression(stack1) + '"></i>\r\n                        </div>\r\n                        <h3>';
            if (helper = helpers.nickname) {
                stack1 = helper.call(depth0, {
                    hash: {},
                    data: data
                });
            } else {
                helper = depth0 && depth0.nickname;
                stack1 = typeof helper === functionType ? helper.call(depth0, {
                    hash: {},
                    data: data
                }) : helper;
            }
            buffer += escapeExpression(stack1) + '</h3>\r\n                        <p><span class="num">';
            if (helper = helpers.num) {
                stack1 = helper.call(depth0, {
                    hash: {},
                    data: data
                });
            } else {
                helper = depth0 && depth0.num;
                stack1 = typeof helper === functionType ? helper.call(depth0, {
                    hash: {},
                    data: data
                }) : helper;
            }
            buffer += escapeExpression(stack1) + '</span><span class="txt"></span></p>\r\n                    </li>\r\n                ';
            return buffer;
        }
        function program4(depth0, data) {
            return '\r\n        <div class="btn-option" data-role="more" data-add="goddess_model2"><i class="icon icon-r-16x26-cur"></i></div>\r\n    ';
        }
        function program6(depth0, data) {
            var buffer = "", stack1;
            buffer += '\r\n    <div class="item">\r\n        <div class="part-a">\r\n            <div class="lbox ">' + escapeExpression((stack1 = (stack1 = depth0 && depth0.datas, 
            stack1 == null || stack1 === false ? stack1 : stack1.goddess_model2_title), typeof stack1 === functionType ? stack1.apply(depth0) : stack1)) + '</div>\r\n            <div class="rbox more fn-hide" data-role="to_rank_score">更多 <i class="icon icon-allow-22x12"></i></div>\r\n        </div>\r\n        <div class="part-b">\r\n            <ul class="list">\r\n                ';
            stack1 = helpers.each.call(depth0, (stack1 = depth0 && depth0.datas, stack1 == null || stack1 === false ? stack1 : stack1.goddess_model2), {
                hash: {},
                inverse: self.noop,
                fn: self.program(2, program2, data),
                data: data
            });
            if (stack1 || stack1 === 0) {
                buffer += stack1;
            }
            buffer += "\r\n            </ul>\r\n        </div>\r\n    </div>\r\n\r\n    ";
            stack1 = helpers["if"].call(depth0, (stack1 = depth0 && depth0.datas, stack1 == null || stack1 === false ? stack1 : stack1.goddess_model2_has_next_page), {
                hash: {},
                inverse: self.noop,
                fn: self.program(4, program4, data),
                data: data
            });
            if (stack1 || stack1 === 0) {
                buffer += stack1;
            }
            buffer += "\r\n";
            return buffer;
        }
        function program8(depth0, data) {
            var buffer = "", stack1;
            buffer += '\r\n    <div class="item">\r\n        <div class="part-a">\r\n            <div class="lbox ">' + escapeExpression((stack1 = (stack1 = depth0 && depth0.datas, 
            stack1 == null || stack1 === false ? stack1 : stack1.garden_model_title), typeof stack1 === functionType ? stack1.apply(depth0) : stack1)) + '</div>\r\n            <div class="rbox more fn-hide" data-role="to_rank_score">更多 <i class="icon icon-allow-22x12"></i></div>\r\n        </div>\r\n        <div class="part-b">\r\n            <ul class="list">\r\n                ';
            stack1 = helpers.each.call(depth0, (stack1 = depth0 && depth0.datas, stack1 == null || stack1 === false ? stack1 : stack1.garden_model), {
                hash: {},
                inverse: self.noop,
                fn: self.program(2, program2, data),
                data: data
            });
            if (stack1 || stack1 === 0) {
                buffer += stack1;
            }
            buffer += "\r\n            </ul>\r\n        </div>\r\n    </div>\r\n\r\n    ";
            stack1 = helpers["if"].call(depth0, (stack1 = depth0 && depth0.datas, stack1 == null || stack1 === false ? stack1 : stack1.garden_model_has_next_page), {
                hash: {},
                inverse: self.noop,
                fn: self.program(9, program9, data),
                data: data
            });
            if (stack1 || stack1 === 0) {
                buffer += stack1;
            }
            buffer += "\r\n";
            return buffer;
        }
        function program9(depth0, data) {
            return '\r\n        <div class="btn-option" data-role="more" data-add="garden_model"><i class="icon icon-r-16x26-cur"></i></div>\r\n    ';
        }
        function program11(depth0, data) {
            var buffer = "", stack1;
            buffer += '\r\n    <div class="item">\r\n        <div class="part-a">\r\n            <div class="lbox ">' + escapeExpression((stack1 = (stack1 = depth0 && depth0.datas, 
            stack1 == null || stack1 === false ? stack1 : stack1.goddess_model1_title), typeof stack1 === functionType ? stack1.apply(depth0) : stack1)) + '</div>\r\n            <div class="rbox more fn-hide" data-role="to_rank_score">更多 <i class="icon icon-allow-22x12"></i></div>\r\n        </div>\r\n        <div class="part-b">\r\n            <ul class="list">\r\n                ';
            stack1 = helpers.each.call(depth0, (stack1 = depth0 && depth0.datas, stack1 == null || stack1 === false ? stack1 : stack1.goddess_model1), {
                hash: {},
                inverse: self.noop,
                fn: self.program(2, program2, data),
                data: data
            });
            if (stack1 || stack1 === 0) {
                buffer += stack1;
            }
            buffer += "\r\n            </ul>\r\n        </div>\r\n    </div>\r\n\r\n    ";
            stack1 = helpers["if"].call(depth0, (stack1 = depth0 && depth0.datas, stack1 == null || stack1 === false ? stack1 : stack1.goddess_model1_has_next_page), {
                hash: {},
                inverse: self.noop,
                fn: self.program(12, program12, data),
                data: data
            });
            if (stack1 || stack1 === 0) {
                buffer += stack1;
            }
            buffer += "\r\n";
            return buffer;
        }
        function program12(depth0, data) {
            return '\r\n        <div class="btn-option" data-role="more" data-add="goddess_model1"><i class="icon icon-r-16x26-cur"></i></div>\r\n    ';
        }
        function program14(depth0, data) {
            var buffer = "", stack1;
            buffer += '\r\n    <div class="item">\r\n        <div class="part-a">\r\n            <div class="lbox ">' + escapeExpression((stack1 = (stack1 = depth0 && depth0.datas, 
            stack1 == null || stack1 === false ? stack1 : stack1.goddess_model_title), typeof stack1 === functionType ? stack1.apply(depth0) : stack1)) + '</div>\r\n            <div class="rbox more fn-hide" data-role="to_rank_score">更多 <i class="icon icon-allow-22x12"></i></div>\r\n        </div>\r\n        <div class="part-b">\r\n            <ul class="list">\r\n                ';
            stack1 = helpers.each.call(depth0, (stack1 = depth0 && depth0.datas, stack1 == null || stack1 === false ? stack1 : stack1.goddess_model), {
                hash: {},
                inverse: self.noop,
                fn: self.program(2, program2, data),
                data: data
            });
            if (stack1 || stack1 === 0) {
                buffer += stack1;
            }
            buffer += "\r\n            </ul>\r\n        </div>\r\n    </div>\r\n";
            return buffer;
        }
        function program16(depth0, data) {
            var buffer = "", stack1;
            buffer += '\r\n<div class="item">\r\n    <div class="part-a">\r\n        <div class="lbox ">' + escapeExpression((stack1 = (stack1 = depth0 && depth0.datas, 
            stack1 == null || stack1 === false ? stack1 : stack1.user_score_top_title), typeof stack1 === functionType ? stack1.apply(depth0) : stack1)) + '</div>\r\n        <div class="rbox more" data-role="to_rank_score">更多 <i class="icon icon-allow-22x12"></i></div>\r\n    </div>\r\n    <div class="part-b">\r\n        <ul class="list">\r\n        ';
            stack1 = helpers.each.call(depth0, (stack1 = depth0 && depth0.datas, stack1 == null || stack1 === false ? stack1 : stack1.user_score_top), {
                hash: {},
                inverse: self.noop,
                fn: self.program(17, program17, data),
                data: data
            });
            if (stack1 || stack1 === 0) {
                buffer += stack1;
            }
            buffer += "\r\n        </ul>\r\n    </div>\r\n</div>\r\n";
            return buffer;
        }
        function program17(depth0, data) {
            var buffer = "", stack1, helper;
            buffer += '\r\n            <li data-user-id="';
            if (helper = helpers.user_id) {
                stack1 = helper.call(depth0, {
                    hash: {},
                    data: data
                });
            } else {
                helper = depth0 && depth0.user_id;
                stack1 = typeof helper === functionType ? helper.call(depth0, {
                    hash: {},
                    data: data
                }) : helper;
            }
            buffer += escapeExpression(stack1) + '" data-role="model">\r\n                <div class="avatar-size-mod avatar-size-mod-80">\r\n                    <span class="icon avatar-size-area "></span>\r\n                    <i class="img image-img avatar-size-img" data-lazyload="';
            if (helper = helpers.user_icon) {
                stack1 = helper.call(depth0, {
                    hash: {},
                    data: data
                });
            } else {
                helper = depth0 && depth0.user_icon;
                stack1 = typeof helper === functionType ? helper.call(depth0, {
                    hash: {},
                    data: data
                }) : helper;
            }
            buffer += escapeExpression(stack1) + '"></i>\r\n                </div>\r\n                <h3>';
            if (helper = helpers.nickname) {
                stack1 = helper.call(depth0, {
                    hash: {},
                    data: data
                });
            } else {
                helper = depth0 && depth0.nickname;
                stack1 = typeof helper === functionType ? helper.call(depth0, {
                    hash: {},
                    data: data
                }) : helper;
            }
            buffer += escapeExpression(stack1) + '</h3>\r\n                <p><span class="num">';
            if (helper = helpers.num) {
                stack1 = helper.call(depth0, {
                    hash: {},
                    data: data
                });
            } else {
                helper = depth0 && depth0.num;
                stack1 = typeof helper === functionType ? helper.call(depth0, {
                    hash: {},
                    data: data
                }) : helper;
            }
            buffer += escapeExpression(stack1) + '</span><span class="txt">魅力</span></p>\r\n            </li>\r\n            ';
            return buffer;
        }
        function program19(depth0, data) {
            var buffer = "", stack1;
            buffer += '\r\n<div class="item">\r\n    <div class="part-a">\r\n        <div class="lbox ">' + escapeExpression((stack1 = (stack1 = depth0 && depth0.datas, 
            stack1 == null || stack1 === false ? stack1 : stack1.date_rank_title), typeof stack1 === functionType ? stack1.apply(depth0) : stack1)) + '</div>\r\n        <div class="rbox more" data-role="to_rank_date">更多 <i class="icon icon-allow-22x12"></i></div>\r\n    </div>\r\n    <div class="part-b">\r\n        <ul class="list">\r\n        ';
            stack1 = helpers.each.call(depth0, (stack1 = depth0 && depth0.datas, stack1 == null || stack1 === false ? stack1 : stack1.date_rank), {
                hash: {},
                inverse: self.noop,
                fn: self.program(20, program20, data),
                data: data
            });
            if (stack1 || stack1 === 0) {
                buffer += stack1;
            }
            buffer += "\r\n        </ul>\r\n    </div>\r\n</div>\r\n";
            return buffer;
        }
        function program20(depth0, data) {
            var buffer = "", stack1, helper;
            buffer += '\r\n            <li data-user-id="';
            if (helper = helpers.user_id) {
                stack1 = helper.call(depth0, {
                    hash: {},
                    data: data
                });
            } else {
                helper = depth0 && depth0.user_id;
                stack1 = typeof helper === functionType ? helper.call(depth0, {
                    hash: {},
                    data: data
                }) : helper;
            }
            buffer += escapeExpression(stack1) + '" data-role="model">\r\n                <div class="avatar-size-mod avatar-size-mod-80">\r\n                    <span class="icon avatar-size-area "></span>\r\n                    <i class="img image-img avatar-size-img" data-lazyload="';
            if (helper = helpers.user_icon) {
                stack1 = helper.call(depth0, {
                    hash: {},
                    data: data
                });
            } else {
                helper = depth0 && depth0.user_icon;
                stack1 = typeof helper === functionType ? helper.call(depth0, {
                    hash: {},
                    data: data
                }) : helper;
            }
            buffer += escapeExpression(stack1) + '"></i>\r\n                </div>\r\n                <h3>';
            if (helper = helpers.nickname) {
                stack1 = helper.call(depth0, {
                    hash: {},
                    data: data
                });
            } else {
                helper = depth0 && depth0.nickname;
                stack1 = typeof helper === functionType ? helper.call(depth0, {
                    hash: {},
                    data: data
                }) : helper;
            }
            buffer += escapeExpression(stack1) + '</h3>\r\n                <p><span class="x-css">x</span><span class="num">';
            if (helper = helpers.num) {
                stack1 = helper.call(depth0, {
                    hash: {},
                    data: data
                });
            } else {
                helper = depth0 && depth0.num;
                stack1 = typeof helper === functionType ? helper.call(depth0, {
                    hash: {},
                    data: data
                }) : helper;
            }
            buffer += escapeExpression(stack1) + '</span><span class="txt">次</span></p>\r\n            </li>\r\n            ';
            return buffer;
        }
        function program22(depth0, data) {
            var buffer = "", stack1;
            buffer += '\r\n<div class="item">\r\n    <div class="part-a">\r\n        <div class="lbox ">' + escapeExpression((stack1 = (stack1 = depth0 && depth0.datas, 
            stack1 == null || stack1 === false ? stack1 : stack1.hot_model_title), typeof stack1 === functionType ? stack1.apply(depth0) : stack1)) + '</div>\r\n    </div>\r\n    <div class="part-b">\r\n        <ul class="list" data-role="hot_model">\r\n        ';
            stack1 = helpers.each.call(depth0, (stack1 = depth0 && depth0.datas, stack1 == null || stack1 === false ? stack1 : stack1.hot_model), {
                hash: {},
                inverse: self.noop,
                fn: self.program(23, program23, data),
                data: data
            });
            if (stack1 || stack1 === 0) {
                buffer += stack1;
            }
            buffer += "\r\n        </ul>\r\n    </div>\r\n</div>\r\n\r\n";
            stack1 = helpers["if"].call(depth0, (stack1 = depth0 && depth0.datas, stack1 == null || stack1 === false ? stack1 : stack1.hot_model_has_next_page), {
                hash: {},
                inverse: self.noop,
                fn: self.program(25, program25, data),
                data: data
            });
            if (stack1 || stack1 === 0) {
                buffer += stack1;
            }
            buffer += "\r\n";
            return buffer;
        }
        function program23(depth0, data) {
            var buffer = "", stack1, helper;
            buffer += '\r\n            <li data-user-id="';
            if (helper = helpers.user_id) {
                stack1 = helper.call(depth0, {
                    hash: {},
                    data: data
                });
            } else {
                helper = depth0 && depth0.user_id;
                stack1 = typeof helper === functionType ? helper.call(depth0, {
                    hash: {},
                    data: data
                }) : helper;
            }
            buffer += escapeExpression(stack1) + '" data-role="model">\r\n                <div class="avatar-size-mod avatar-size-mod-80">\r\n                    <span class="icon avatar-size-area "></span>\r\n                    <i class="img image-img avatar-size-img" data-lazyload="';
            if (helper = helpers.user_icon) {
                stack1 = helper.call(depth0, {
                    hash: {},
                    data: data
                });
            } else {
                helper = depth0 && depth0.user_icon;
                stack1 = typeof helper === functionType ? helper.call(depth0, {
                    hash: {},
                    data: data
                }) : helper;
            }
            buffer += escapeExpression(stack1) + '"></i>\r\n                </div>\r\n                <h3>';
            if (helper = helpers.nickname) {
                stack1 = helper.call(depth0, {
                    hash: {},
                    data: data
                });
            } else {
                helper = depth0 && depth0.nickname;
                stack1 = typeof helper === functionType ? helper.call(depth0, {
                    hash: {},
                    data: data
                }) : helper;
            }
            buffer += escapeExpression(stack1) + "</h3>\r\n            </li>\r\n            ";
            return buffer;
        }
        function program25(depth0, data) {
            return '\r\n<div class="btn-option" data-role="more" data-add="hot_model"><i class="icon icon-r-16x26-cur"></i></div>\r\n';
        }
        function program27(depth0, data) {
            var buffer = "", stack1;
            buffer += '\r\n<div class="item">\r\n    <div class="part-a">\r\n        <div class="lbox ">' + escapeExpression((stack1 = (stack1 = depth0 && depth0.datas, 
            stack1 == null || stack1 === false ? stack1 : stack1.comment_score_top_title), typeof stack1 === functionType ? stack1.apply(depth0) : stack1)) + '</div>\r\n\r\n    </div>\r\n    <div class="part-b">\r\n        <ul class="list" data-role="comment_score_top">\r\n        ';
            stack1 = helpers.each.call(depth0, (stack1 = depth0 && depth0.datas, stack1 == null || stack1 === false ? stack1 : stack1.comment_score_top), {
                hash: {},
                inverse: self.noop,
                fn: self.program(28, program28, data),
                data: data
            });
            if (stack1 || stack1 === 0) {
                buffer += stack1;
            }
            buffer += "\r\n        </ul>\r\n    </div>\r\n</div>\r\n";
            stack1 = helpers["if"].call(depth0, (stack1 = depth0 && depth0.datas, stack1 == null || stack1 === false ? stack1 : stack1.comment_score_top_has_next_page), {
                hash: {},
                inverse: self.noop,
                fn: self.program(30, program30, data),
                data: data
            });
            if (stack1 || stack1 === 0) {
                buffer += stack1;
            }
            buffer += "\r\n";
            return buffer;
        }
        function program28(depth0, data) {
            var buffer = "", stack1, helper;
            buffer += '\r\n            <li data-user-id="';
            if (helper = helpers.user_id) {
                stack1 = helper.call(depth0, {
                    hash: {},
                    data: data
                });
            } else {
                helper = depth0 && depth0.user_id;
                stack1 = typeof helper === functionType ? helper.call(depth0, {
                    hash: {},
                    data: data
                }) : helper;
            }
            buffer += escapeExpression(stack1) + '" data-role="model">\r\n                <div class="avatar-size-mod avatar-size-mod-80">\r\n                    <span class="icon avatar-size-area "></span>\r\n                    <i class="img image-img avatar-size-img" data-lazyload="';
            if (helper = helpers.user_icon) {
                stack1 = helper.call(depth0, {
                    hash: {},
                    data: data
                });
            } else {
                helper = depth0 && depth0.user_icon;
                stack1 = typeof helper === functionType ? helper.call(depth0, {
                    hash: {},
                    data: data
                }) : helper;
            }
            buffer += escapeExpression(stack1) + '"></i>\r\n                </div>\r\n                <h3>';
            if (helper = helpers.nickname) {
                stack1 = helper.call(depth0, {
                    hash: {},
                    data: data
                });
            } else {
                helper = depth0 && depth0.nickname;
                stack1 = typeof helper === functionType ? helper.call(depth0, {
                    hash: {},
                    data: data
                }) : helper;
            }
            buffer += escapeExpression(stack1) + '</h3>\r\n                <p><span class="num sec-num">';
            if (helper = helpers.num) {
                stack1 = helper.call(depth0, {
                    hash: {},
                    data: data
                });
            } else {
                helper = depth0 && depth0.num;
                stack1 = typeof helper === functionType ? helper.call(depth0, {
                    hash: {},
                    data: data
                }) : helper;
            }
            buffer += escapeExpression(stack1) + '</span><span class="txt">分</span></p>\r\n            </li>\r\n        ';
            return buffer;
        }
        function program30(depth0, data) {
            return '\r\n<div class="btn-option" data-role="more" data-add="comment_score_top"><i class="icon icon-r-16x26-cur"></i></div>\r\n';
        }
        stack1 = helpers["if"].call(depth0, (stack1 = depth0 && depth0.datas, stack1 == null || stack1 === false ? stack1 : stack1.goddess_model3), {
            hash: {},
            inverse: self.noop,
            fn: self.program(1, program1, data),
            data: data
        });
        if (stack1 || stack1 === 0) {
            buffer += stack1;
        }
        buffer += "\r\n\r\n";
        stack1 = helpers["if"].call(depth0, (stack1 = depth0 && depth0.datas, stack1 == null || stack1 === false ? stack1 : stack1.goddess_model2), {
            hash: {},
            inverse: self.noop,
            fn: self.program(6, program6, data),
            data: data
        });
        if (stack1 || stack1 === 0) {
            buffer += stack1;
        }
        buffer += "\r\n\r\n";
        stack1 = helpers["if"].call(depth0, (stack1 = depth0 && depth0.datas, stack1 == null || stack1 === false ? stack1 : stack1.garden_model), {
            hash: {},
            inverse: self.noop,
            fn: self.program(8, program8, data),
            data: data
        });
        if (stack1 || stack1 === 0) {
            buffer += stack1;
        }
        buffer += "\r\n\r\n";
        stack1 = helpers["if"].call(depth0, (stack1 = depth0 && depth0.datas, stack1 == null || stack1 === false ? stack1 : stack1.goddess_model1), {
            hash: {},
            inverse: self.noop,
            fn: self.program(11, program11, data),
            data: data
        });
        if (stack1 || stack1 === 0) {
            buffer += stack1;
        }
        buffer += "\r\n\r\n";
        stack1 = helpers["if"].call(depth0, (stack1 = depth0 && depth0.datas, stack1 == null || stack1 === false ? stack1 : stack1.goddess_model), {
            hash: {},
            inverse: self.noop,
            fn: self.program(14, program14, data),
            data: data
        });
        if (stack1 || stack1 === 0) {
            buffer += stack1;
        }
        buffer += "\r\n\r\n";
        stack1 = helpers["if"].call(depth0, (stack1 = depth0 && depth0.datas, stack1 == null || stack1 === false ? stack1 : stack1.user_score_top), {
            hash: {},
            inverse: self.noop,
            fn: self.program(16, program16, data),
            data: data
        });
        if (stack1 || stack1 === 0) {
            buffer += stack1;
        }
        buffer += "\r\n\r\n";
        stack1 = helpers["if"].call(depth0, (stack1 = depth0 && depth0.datas, stack1 == null || stack1 === false ? stack1 : stack1.date_rank), {
            hash: {},
            inverse: self.noop,
            fn: self.program(19, program19, data),
            data: data
        });
        if (stack1 || stack1 === 0) {
            buffer += stack1;
        }
        buffer += "\r\n\r\n\r\n";
        stack1 = helpers["if"].call(depth0, (stack1 = depth0 && depth0.datas, stack1 == null || stack1 === false ? stack1 : stack1.hot_model), {
            hash: {},
            inverse: self.noop,
            fn: self.program(22, program22, data),
            data: data
        });
        if (stack1 || stack1 === 0) {
            buffer += stack1;
        }
        buffer += "\r\n\r\n\r\n\r\n";
        stack1 = helpers["if"].call(depth0, (stack1 = depth0 && depth0.datas, stack1 == null || stack1 === false ? stack1 : stack1.comment_score_top), {
            hash: {},
            inverse: self.noop,
            fn: self.program(27, program27, data),
            data: data
        });
        if (stack1 || stack1 === 0) {
            buffer += stack1;
        }
        buffer += "\r\n\r\n";
        return buffer;
    });
});

define("pai/vwx0.0.1-beta/model_date/hot/tpl/line-debug.handlebars", [ "utility/handlebars/1.3.0/runtime-debug" ], function(require, exports, module) {
    var Handlebars = require("utility/handlebars/1.3.0/runtime-debug");
    var template = Handlebars.template;
    module.exports = template(function(Handlebars, depth0, helpers, partials, data) {
        this.compilerInfo = [ 4, ">= 1.0.0" ];
        helpers = helpers || {};
        for (var key in Handlebars.helpers) {
            helpers[key] = helpers[key] || Handlebars.helpers[key];
        }
        data = data || {};
        var stack1, functionType = "function", escapeExpression = this.escapeExpression, self = this;
        function program1(depth0, data) {
            var buffer = "", stack1, helper;
            buffer += '\r\n<li data-user-id="';
            if (helper = helpers.user_id) {
                stack1 = helper.call(depth0, {
                    hash: {},
                    data: data
                });
            } else {
                helper = depth0 && depth0.user_id;
                stack1 = typeof helper === functionType ? helper.call(depth0, {
                    hash: {},
                    data: data
                }) : helper;
            }
            buffer += escapeExpression(stack1) + '" data-role="model">\r\n    <div class="avatar-size-mod avatar-size-mod-80">\r\n        <span class="icon avatar-size-area"></span>\r\n        <i class="img image-img avatar-size-img" data-lazyload="';
            if (helper = helpers.user_icon) {
                stack1 = helper.call(depth0, {
                    hash: {},
                    data: data
                });
            } else {
                helper = depth0 && depth0.user_icon;
                stack1 = typeof helper === functionType ? helper.call(depth0, {
                    hash: {},
                    data: data
                }) : helper;
            }
            buffer += escapeExpression(stack1) + '"></i>\r\n    </div>\r\n    <h3>';
            if (helper = helpers.nickname) {
                stack1 = helper.call(depth0, {
                    hash: {},
                    data: data
                });
            } else {
                helper = depth0 && depth0.nickname;
                stack1 = typeof helper === functionType ? helper.call(depth0, {
                    hash: {},
                    data: data
                }) : helper;
            }
            buffer += escapeExpression(stack1) + '</h3>\r\n    <p><span class="num ';
            stack1 = helpers["if"].call(depth0, depth0 && depth0.comment_score_top, {
                hash: {},
                inverse: self.noop,
                fn: self.program(2, program2, data),
                data: data
            });
            if (stack1 || stack1 === 0) {
                buffer += stack1;
            }
            buffer += '">';
            if (helper = helpers.num) {
                stack1 = helper.call(depth0, {
                    hash: {},
                    data: data
                });
            } else {
                helper = depth0 && depth0.num;
                stack1 = typeof helper === functionType ? helper.call(depth0, {
                    hash: {},
                    data: data
                }) : helper;
            }
            buffer += escapeExpression(stack1) + '</span><span class="txt">';
            stack1 = helpers["if"].call(depth0, depth0 && depth0.comment_score_top, {
                hash: {},
                inverse: self.noop,
                fn: self.program(4, program4, data),
                data: data
            });
            if (stack1 || stack1 === 0) {
                buffer += stack1;
            }
            buffer += "</span></p>\r\n</li>\r\n";
            return buffer;
        }
        function program2(depth0, data) {
            return "sec-num";
        }
        function program4(depth0, data) {
            return "分";
        }
        stack1 = helpers.each.call(depth0, depth0 && depth0.lists, {
            hash: {},
            inverse: self.noop,
            fn: self.program(1, program1, data),
            data: data
        });
        if (stack1 || stack1 === 0) {
            return stack1;
        } else {
            return "";
        }
    });
});

/**
 *
 */
define("pai/vwx0.0.1-beta/model_date/hot/collection-debug", [ "pai/vwx0.0.1-beta/common/global_config-debug", "pai/vwx0.0.1-beta/common/collection-debug", "$-debug", "utility/backbone/1.1.2/backbone-debug", "pai/vwx0.0.1-beta/common/utility-debug", "pai/vwx0.0.1-beta/common/cross_domain_storage-debug", "matcha/cookie/1.0.0/cookie-debug", "utility/underscore/1.6.0/underscore-debug", "pai/vwx0.0.1-beta/frame/ua-debug", "pai/vwx0.0.1-beta/ui/m_alert/view-debug", "pai/vwx0.0.1-beta/common/view-debug", "utility/handlebars/1.3.0/runtime-debug" ], function(require, exports, module) {
    var global_config = require("pai/vwx0.0.1-beta/common/global_config-debug");
    var collection = require("pai/vwx0.0.1-beta/common/collection-debug");
    var utility = require("pai/vwx0.0.1-beta/common/utility-debug");
    var tip = require("pai/vwx0.0.1-beta/ui/m_alert/view-debug");
    module.exports = collection.extend({
        url: global_config.ajax_url.hot,
        initialize: function(options) {
            var self = this;
            self._setup_events();
            //页码设置
            self.pages = {
                home_page: 0,
                //这个只拿一次，下面的第一次时已近是已所以初始为1
                hot_model: 1,
                comment_score_top: 1
            };
        },
        parse: function(response) {
            if (response.result_data) {
                if (response.result_data.list) {
                    return response.result_data.list;
                }
                return response.result_data;
            }
        },
        _setup_events: function() {
            var self = this;
            self.on("before:fetch", function(xhr, xhrOptions) {
                self._fetch_xhr = xhr;
                self.set_state("sending");
            });
            self.on("complete:fetch", function(response, xhrOptions) {
                self.get_state != "stopRequest" && self.set_state("free");
                delete self._fetch_xhr;
            });
            self.on("error:add:fetch", function(response, xhrOptions) {});
            self.on("success:fetch", function(response, xhrOptions) {
                if (response.result_data.code) {
                    if (xhrOptions.reset) {
                        self.set_current_page(1, response.result_data.type);
                    } else {
                        var current_page = self.get_current_page(response.result_data.type);
                        self.set_current_page(++current_page, response.result_data.type);
                    }
                }
            });
        },
        get_attrs: function() {
            var self = this;
            return self.attrs;
        },
        set_attrs: function(data) {
            var self = this;
            self.attrs = $.extend({}, self.attrs, data);
        },
        get_datas: function(options) {
            var self = this;
            //            if(utility.storage.get('location')){
            //                tip.show('数据异常','loading',{
            //                    delay:1000
            //                });
            //                return;
            //            }
            var location_id = utility.storage.get("location") && utility.storage.get("location").location_id;
            var data = {
                location_id: location_id,
                type: options.type || "home_page",
                page: options.page || 1
            };
            self.fetch({
                remove: options.page === 1,
                reset: options.page === 1,
                data: data,
                cache: false,
                beforeSend: function(xhr, xhrOptions) {
                    self.trigger("before:fetch", xhr, xhrOptions);
                },
                complete: function(xhr, status) {
                    self.trigger("complete:fetch", xhr, status);
                },
                success: function(collection, response, options) {
                    self.trigger("success:fetch", response, options);
                },
                error: function(collection, response, options) {
                    self.trigger("error:fetch", response, options);
                }
            });
            return self;
        },
        /**
         * 获取当前状态
         * @returns {*}
         */
        get_state: function() {
            return this._send_state;
        },
        /**
         * 设置当前状态
         * @param s
         * @returns {exports}
         */
        set_state: function(s) {
            var self = this;
            self._send_state = s;
            return self;
        },
        /**
         * 初始化页码
         */
        default_page: function() {
            //页码设置
            this.pages = {
                home_page: 0,
                //这个只拿一次，下面的第一次时已近是已所以初始为1
                hot_model: 1,
                comment_score_top: 1
            };
        },
        /**
         * 获取当前页码
         * @returns {*|number}
         */
        get_current_page: function(style) {
            return this.pages[style] || 0;
        },
        /**
         * 设置当前页码
         * @param page
         * @param style
         */
        set_current_page: function(page, style) {
            page = utility.int(page);
            page && (this.pages[style] = page);
        }
    });
});

/**
 *  封装collection ，预留以后进行扩展
 *  hdw 2014.8.14
 */
define("pai/vwx0.0.1-beta/common/collection-debug", [ "$-debug", "utility/backbone/1.1.2/backbone-debug" ], function(require, exports, module) {
    var $ = require("$-debug");
    var Backbone = require("utility/backbone/1.1.2/backbone-debug");
    var Collection = Backbone.Collection.extend({});
    module.exports = Collection;
});

/**
 * nolestLam 2014/9/16.
 */
/**
 * 首次进入app引导
 */
define("pai/vwx0.0.1-beta/ui/guide/view-debug", [ "$-debug", "pai/vwx0.0.1-beta/common/view-debug", "utility/backbone/1.1.2/backbone-debug", "utility/handlebars/1.3.0/runtime-debug", "pai/vwx0.0.1-beta/common/utility-debug", "pai/vwx0.0.1-beta/common/cross_domain_storage-debug", "matcha/cookie/1.0.0/cookie-debug", "utility/underscore/1.6.0/underscore-debug", "pai/vwx0.0.1-beta/frame/ua-debug", "pai/vwx0.0.1-beta/frame/page_control-debug", "pai/vwx0.0.1-beta/frame/page-debug", "utility/zepto/modules/data/1.1.4/data-debug", "utility/hammer/plugins/jquery.hammer/1.1.3/jquery.hammer-debug", "pai/vwx0.0.1-beta/common/I_APP-debug", "pai/vwx0.0.1-beta/common/global_config-debug", "pai/vwx0.0.1-beta/ui/m_alert/view-debug", "pai/vwx0.0.1-beta/common/new_iscroll-debug", "utility/iscroll/4.2.5/iscroll-debug", "pai/vwx0.0.1-beta/common/img-ready-debug", "pai/vwx0.0.1-beta/base/ua-debug" ], function(require, exports, module) {
    var $ = require("$-debug");
    var View = require("pai/vwx0.0.1-beta/common/view-debug");
    var utility = require("pai/vwx0.0.1-beta/common/utility-debug");
    var guide_tpl = require("pai/vwx0.0.1-beta/ui/guide/tpl/guide-debug.handlebars");
    var page_control = require("pai/vwx0.0.1-beta/frame/page_control-debug");
    var App = require("pai/vwx0.0.1-beta/common/I_APP-debug");
    var Scroll = require("pai/vwx0.0.1-beta/common/new_iscroll-debug");
    module.exports = View.extend({
        attrs: {
            template: guide_tpl
        },
        events: {},
        _setup_scroll: function() {
            var self = this;
            console.log(Scroll);
            var view_scroll_obj = Scroll(self.$container, {
                bounce: false,
                snap: true,
                snapThreshold: self.threshold,
                momentum: false,
                hScroll: true,
                vScroll: false,
                hScrollbar: false,
                vScrollbar: false,
                checkDOMChanges: true
            });
            view_scroll_obj.on("scrollEnd", function() {
                var _self = this;
                if (self.page_num == _self.currPageX + 1) {
                    setTimeout(function() {
                        self.trigger("guide_hide");
                    }, 100);
                }
            });
            self.$container.find('[data-role="fail_last"]').on("tap", function() {
                self.trigger("guide_hide");
            });
            /*view_scroll_obj.on('scrollMoveAfter',function()
            {
                var _self = this;

                if(self.current_page == self.page_num && _self.maxScrollX-_self.x > self.threshold && !self.is_run)
                {
                    self.is_run = true;

                    //self.view_scroll_obj.scrollTo(_self.maxScrollX - utility.get_view_port_width());

                    self.is_over_end = true;

                }

            });*/
            self.view_scroll_obj = view_scroll_obj;
            self.view_scroll_obj.refresh();
        },
        _setup_event: function() {
            var self = this;
        },
        current_page: function() {
            var self = this;
            return self.current_page;
        },
        setup: function() {
            var self = this;
            self.$container = self.$('[data-role="guide-body"]');
            self.$container.height(self.reset_viewport_height());
            self.$guide_container = self.$('[data-role="guide-page-warp-box"]');
            self.current_page = 1;
            self.is_run = false;
            self.threshold = utility.get_view_port_width() / 5;
            self._setup_pages();
            self._setup_event();
            self._setup_scroll();
        },
        _setup_pages: function() {
            var self = this;
            var pages = self.get("page_tpl");
            var prepare_String = pages({
                width: utility.get_view_port_width,
                height: utility.get_view_port_height
            });
            var prepare_obj = $(prepare_String);
            self.page_width = utility.get_view_port_width();
            //最后一页透明
            self.page_num = prepare_obj.find(".page").length;
            self.$guide_container.width(self.page_width * self.page_num);
            self.$('[data-role="guide-page-warp-box"]').html(prepare_String);
        },
        reset_viewport_width: function() {
            return utility.get_view_port_width;
        },
        reset_viewport_height: function() {
            return utility.get_view_port_height;
        },
        show: function() {
            var self = this;
            self.$el.removeClass("fn-hide");
        },
        hide: function() {
            var self = this;
            self.$el.addClass("fn-hide");
        }
    });
});

define("pai/vwx0.0.1-beta/ui/guide/tpl/guide-debug.handlebars", [ "utility/handlebars/1.3.0/runtime-debug" ], function(require, exports, module) {
    var Handlebars = require("utility/handlebars/1.3.0/runtime-debug");
    var template = Handlebars.template;
    module.exports = template(function(Handlebars, depth0, helpers, partials, data) {
        this.compilerInfo = [ 4, ">= 1.0.0" ];
        helpers = helpers || {};
        for (var key in Handlebars.helpers) {
            helpers[key] = helpers[key] || Handlebars.helpers[key];
        }
        data = data || {};
        return '<div class="guide-page">\r\n    <div class="guide-page-body" data-role="guide-body" >\r\n        <div class="guide-page-warp-box" data-role="guide-page-warp-box" style="background: rgba(255,255,255,0);">\r\n        </div>\r\n    </div>\r\n</div>';
    });
});

define("pai/vwx0.0.1-beta/ui/guide/tpl/guide_hot-debug.handlebars", [ "utility/handlebars/1.3.0/runtime-debug" ], function(require, exports, module) {
    var Handlebars = require("utility/handlebars/1.3.0/runtime-debug");
    var template = Handlebars.template;
    module.exports = template(function(Handlebars, depth0, helpers, partials, data) {
        this.compilerInfo = [ 4, ">= 1.0.0" ];
        helpers = helpers || {};
        for (var key in Handlebars.helpers) {
            helpers[key] = helpers[key] || Handlebars.helpers[key];
        }
        data = data || {};
        var buffer = "", stack1, helper, functionType = "function", escapeExpression = this.escapeExpression;
        buffer += '<div class="guide-page-inside">\r\n    <div class="page" style="width:';
        if (helper = helpers.width) {
            stack1 = helper.call(depth0, {
                hash: {},
                data: data
            });
        } else {
            helper = depth0 && depth0.width;
            stack1 = typeof helper === functionType ? helper.call(depth0, {
                hash: {},
                data: data
            }) : helper;
        }
        buffer += escapeExpression(stack1) + "px;height: ";
        if (helper = helpers.height) {
            stack1 = helper.call(depth0, {
                hash: {},
                data: data
            });
        } else {
            helper = depth0 && depth0.height;
            stack1 = typeof helper === functionType ? helper.call(depth0, {
                hash: {},
                data: data
            }) : helper;
        }
        buffer += escapeExpression(stack1) + 'px">\r\n        <div class="page-inside" style="background: url(\'/mobile/images/guide_pic/camera/guide_camera_1.png\') no-repeat;background-size: 100%;"></div>\r\n    </div>\r\n    <div class="page" style="width:';
        if (helper = helpers.width) {
            stack1 = helper.call(depth0, {
                hash: {},
                data: data
            });
        } else {
            helper = depth0 && depth0.width;
            stack1 = typeof helper === functionType ? helper.call(depth0, {
                hash: {},
                data: data
            }) : helper;
        }
        buffer += escapeExpression(stack1) + "px;height: ";
        if (helper = helpers.height) {
            stack1 = helper.call(depth0, {
                hash: {},
                data: data
            });
        } else {
            helper = depth0 && depth0.height;
            stack1 = typeof helper === functionType ? helper.call(depth0, {
                hash: {},
                data: data
            }) : helper;
        }
        buffer += escapeExpression(stack1) + 'px">\r\n        <div class="page-inside" style="background: url(\'/mobile/images/guide_pic/camera/guide_camera_2.png\') no-repeat;background-size: 100%;"></div>\r\n    </div>\r\n    <div class="page" data-role="fail_last" style="width:';
        if (helper = helpers.width) {
            stack1 = helper.call(depth0, {
                hash: {},
                data: data
            });
        } else {
            helper = depth0 && depth0.width;
            stack1 = typeof helper === functionType ? helper.call(depth0, {
                hash: {},
                data: data
            }) : helper;
        }
        buffer += escapeExpression(stack1) + "px;height: ";
        if (helper = helpers.height) {
            stack1 = helper.call(depth0, {
                hash: {},
                data: data
            });
        } else {
            helper = depth0 && depth0.height;
            stack1 = typeof helper === functionType ? helper.call(depth0, {
                hash: {},
                data: data
            }) : helper;
        }
        buffer += escapeExpression(stack1) + 'px">\r\n        <div class="page-inside" style="background: url(\'/mobile/images/guide_pic/camera/guide_camera_3.png\') no-repeat;background-size: 100%;"></div>\r\n    </div>\r\n    <div class="page" data-role="last" style="width:';
        if (helper = helpers.width) {
            stack1 = helper.call(depth0, {
                hash: {},
                data: data
            });
        } else {
            helper = depth0 && depth0.width;
            stack1 = typeof helper === functionType ? helper.call(depth0, {
                hash: {},
                data: data
            }) : helper;
        }
        buffer += escapeExpression(stack1) + "px;height: ";
        if (helper = helpers.height) {
            stack1 = helper.call(depth0, {
                hash: {},
                data: data
            });
        } else {
            helper = depth0 && depth0.height;
            stack1 = typeof helper === functionType ? helper.call(depth0, {
                hash: {},
                data: data
            }) : helper;
        }
        buffer += escapeExpression(stack1) + 'px;background:rgba(0,0,0,0.5);">\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n';
        return buffer;
    });
});

/**
 * 模特图 模型
 * hdw 2014.8.13
 */
define("pai/vwx0.0.1-beta/model_date/hot/model-debug", [ "pai/vwx0.0.1-beta/common/global_config-debug", "utility/backbone/1.1.2/backbone-debug" ], function(require, exports, module) {
    var global_config = require("pai/vwx0.0.1-beta/common/global_config-debug");
    var Backbone = require("utility/backbone/1.1.2/backbone-debug");
    module.exports = Backbone.Model.extend({
        idAttribute: "user_id",
        "default": {
            user_id: "",
            city: 0,
            chest: 0,
            cup: "",
            waist: 0,
            hip: 0,
            height: 0,
            weight: 0,
            intro: "",
            honor: "",
            user_level: "",
            cameraman_require: 0,
            set_top: 0,
            add_time: 0,
            update_time: 0,
            pv: 0,
            user_icon_165: "",
            user_icon_468: ""
        },
        /**
         * 安装事件
         * @private
         */
        _setup_events: function() {},
        parse: function(response) {
            if (response.result_data) {
                return response.result_data;
            }
            return response;
        },
        initialize: function() {
            var self = this;
            self._setup_events();
        },
        /**
         * 获得广告图数据
         * @param data
         */
        get_ad_pic: function(data) {
            var self = this;
            self.fetch({
                url: global_config.ajax_url.ad_pic,
                data: data,
                cache: false,
                beforeSend: function() {
                    self.trigger("before:ad_pic:fetch");
                },
                success: function(model, response, options) {
                    self.trigger("success:ad_pic:fetch", response, options);
                },
                error: function(model, response, options) {
                    self.trigger("error:ad_pic:fetch", response, options);
                },
                complete: function(xhr, status) {
                    self.trigger("complete:ad_pic:fetch", xhr, status);
                }
            });
        }
    });
});

define("pai/vwx0.0.1-beta/model_date/search/index-debug", [ "$-debug", "pai/vwx0.0.1-beta/frame/page_control-debug", "utility/backbone/1.1.2/backbone-debug", "pai/vwx0.0.1-beta/frame/ua-debug", "pai/vwx0.0.1-beta/frame/page-debug", "utility/zepto/modules/data/1.1.4/data-debug", "utility/hammer/plugins/jquery.hammer/1.1.3/jquery.hammer-debug", "utility/underscore/1.6.0/underscore-debug", "pai/vwx0.0.1-beta/model_date/search/collection-debug", "pai/vwx0.0.1-beta/common/global_config-debug", "pai/vwx0.0.1-beta/common/collection-debug", "pai/vwx0.0.1-beta/model_date/search/view-debug", "pai/vwx0.0.1-beta/common/view-debug", "utility/handlebars/1.3.0/runtime-debug", "pai/vwx0.0.1-beta/common/scroll-debug", "utility/iscroll/4.2.5/iscroll-debug", "pai/vwx0.0.1-beta/common/utility-debug", "pai/vwx0.0.1-beta/common/cross_domain_storage-debug", "matcha/cookie/1.0.0/cookie-debug", "pai/vwx0.0.1-beta/common/img-ready-debug", "pai/vwx0.0.1-beta/ui/m_alert/view-debug" ], function(require, exports, module) {
    var $ = require("$-debug");
    var page_control = require("pai/vwx0.0.1-beta/frame/page_control-debug");
    var collection = require("pai/vwx0.0.1-beta/model_date/search/collection-debug");
    var search_view = require("pai/vwx0.0.1-beta/model_date/search/view-debug");
    page_control.add_page([ function() {
        return {
            title: "搜索",
            route: {
                search: "search"
            },
            dom_not_cache: true,
            ignore_exist: true,
            transition_type: "slide",
            page_init: function() {
                this.search_view = new search_view({
                    collection: new collection(),
                    parentNode: this.$el
                }).render();
            },
            page_before_show: function() {},
            page_show: function() {},
            page_before_hide: function() {},
            page_hide: function() {
                //离开页面时删除搜索记录弹窗；
                this.search_view.del_search_history_dom();
            }
        };
    } ]);
});

/**
 *
 */
define("pai/vwx0.0.1-beta/model_date/search/collection-debug", [ "pai/vwx0.0.1-beta/common/global_config-debug", "pai/vwx0.0.1-beta/common/collection-debug", "$-debug", "utility/backbone/1.1.2/backbone-debug" ], function(require, exports, module) {
    var global_config = require("pai/vwx0.0.1-beta/common/global_config-debug");
    var collection = require("pai/vwx0.0.1-beta/common/collection-debug");
    module.exports = collection.extend({
        url: global_config.ajax_url.search,
        initialize: function(options) {
            var self = this;
            self._setup_events();
        },
        parse: function(response) {
            if (response.result_data) {
                if (response.result_data.list) {
                    return response.result_data.list;
                }
                return response.result_data;
            }
        },
        _setup_events: function() {
            var self = this;
        },
        get_search_list: function(page) {
            var self = this;
            self.fetch({
                remove: page === 1,
                reset: page === 1,
                //data: paramData,
                cache: false,
                beforeSend: function(xhr, xhrOptions) {
                    self.trigger("before:fetch", xhr, xhrOptions);
                },
                complete: function(xhr, status) {
                    self.trigger("complete:fetch", xhr, status);
                },
                success: function(collection, response, options) {
                    self.trigger("success:fetch", response, options);
                },
                error: function(collection, response, options) {
                    self.trigger("error:fetch", response, options);
                }
            });
            return self;
        }
    });
});

define("pai/vwx0.0.1-beta/model_date/search/view-debug", [ "$-debug", "pai/vwx0.0.1-beta/frame/page_control-debug", "utility/backbone/1.1.2/backbone-debug", "pai/vwx0.0.1-beta/frame/ua-debug", "pai/vwx0.0.1-beta/frame/page-debug", "utility/zepto/modules/data/1.1.4/data-debug", "utility/hammer/plugins/jquery.hammer/1.1.3/jquery.hammer-debug", "utility/underscore/1.6.0/underscore-debug", "pai/vwx0.0.1-beta/common/view-debug", "utility/handlebars/1.3.0/runtime-debug", "pai/vwx0.0.1-beta/common/scroll-debug", "utility/iscroll/4.2.5/iscroll-debug", "pai/vwx0.0.1-beta/common/utility-debug", "pai/vwx0.0.1-beta/common/cross_domain_storage-debug", "matcha/cookie/1.0.0/cookie-debug", "pai/vwx0.0.1-beta/common/img-ready-debug", "pai/vwx0.0.1-beta/ui/m_alert/view-debug" ], function(require, exports, module) {
    var $ = require("$-debug");
    var page_control = require("pai/vwx0.0.1-beta/frame/page_control-debug");
    var View = require("pai/vwx0.0.1-beta/common/view-debug");
    var Scroll = require("pai/vwx0.0.1-beta/common/scroll-debug");
    var Utility = require("pai/vwx0.0.1-beta/common/utility-debug");
    var tip = require("pai/vwx0.0.1-beta/ui/m_alert/view-debug");
    var storage = window.localStorage;
    var main_tpl = require("pai/vwx0.0.1-beta/model_date/search/tpl/main-debug.handlebars");
    var item_tpl = require("pai/vwx0.0.1-beta/model_date/search/tpl/item-debug.handlebars");
    var search_history_tpl = require("pai/vwx0.0.1-beta/model_date/search/tpl/search_history-debug.handlebars");
    var search_view = View.extend({
        attrs: {
            template: main_tpl
        },
        events: {
            "tap [data-role=cancel]": function(ev) {
                page_control.back();
            },
            "tap [data-role=del-search-history-item]": function(ev) {
                var self = this;
                var $target = $(ev.currentTarget);
                self.store.change(Utility.user.id, $target.attr("data-tag"), "del");
                if (self.store.get(Utility.user.id).length == 0) {
                    self.del_search_history();
                    self.del_search_history_dom();
                }
                $target.parents("li").remove();
            },
            "tap [data-role=del-search-history]": function() {
                var self = this;
                self.del_search_history();
                self.del_search_history_dom();
            },
            "tap [data-role=btn-back]": function() {
                var self = this;
                page_control.back();
            },
            "tap [data-role=search]": "_search",
            "tap [data-role=search-form]": "_submit",
            "tap [data-role=change]": "_change"
        },
        /**
         * 事件安装
         * @private
         */
        _setup_events: function() {
            var self = this;
            //            self.listenTo(self.collection,'all',function() {
            //                // debug 用
            //            });
            self.listenTo(self.collection, "reset", self._reset).listenTo(self.collection, "add", self._addOne).listenTo(self.collection, "before:fetch", function() {
                tip.show("查询中...", "loading", {
                    delay: -1
                });
            }).listenTo(self.collection, "success:fetch", function(response, xhrOptions) {
                if (response.result_data.length == 0) {
                    tip.show("暂无数据", "error", {
                        delay: 800
                    });
                } else {
                    self._change();
                    self._render_item(response, xhrOptions);
                    tip.hide();
                }
            }).listenTo(self.collection, "error:fetch", function(xhr, status) {
                tip.show("查询失败请返回重试", "error", {
                    delay: 800
                });
            }).listenTo(self.collection, "complete:fetch", function(xhr, status) {});
            //搜索记录相关事件
            //            self.$input.on('focus',function(){
            //                self._render_item_search_history(self.store.get(Utility.user.id));
            //            });
            self.$input.on("focus", function() {
                self._render_item_search_history(self.store.get(Utility.user.id));
            }).on("blur", function(ev) {
                console.log(ev);
            });
            // 刷新数据
            self.refresh();
            // 视图更新
            self.on("updateList", function(response, xhrOptions) {
                // 第一次载入时iScroll未生成
                if (!self.view_scroll_obj) {
                    self._setup_scroll();
                    self._drop_reset();
                }
                self._drop_reset();
                self.view_scroll_obj.refresh();
            });
        },
        _render_item: function(response, xhrOptions) {
            var self = this;
            self.$security_list.html("");
            /**
             *  modify hudw 2014.12.7
             *  注意！！这里的renderQueue换成了读取response的list字段，这样修改的目的是解决了刷新页面
             *  导致self._renderQueue出错，但尚未知道修改后对换一换的操作有哪些影响。
             *
             */
            var renderQueue = response.result_data.list;
            //var renderQueue = self._renderQueue;
            var html_str = item_tpl({
                search_list: renderQueue
            });
            self.$security_list.html(html_str);
            self.trigger("updateList", response, xhrOptions);
            self.view_scroll_obj.refresh();
        },
        _render_item_search_history: function(search_history_queue) {
            var self = this;
            if (!self.store.get(Utility.user.id)) {
                return;
            }
            if (self.$search_history) {
                return;
            }
            var html_str = search_history_tpl({
                search_historys: search_history_queue.slice(0, 4)
            });
            var $html_str = $(html_str);
            self.$search_index.addClass("fn-hide");
            self.$container.append($html_str);
            //必须插入容器后再赋值，否则其他方法将无法在容器中找到此DOM
            self.$search_history = $html_str;
        },
        _reset: function() {
            var self = this;
            self.collection.each(self._addOne, self);
        },
        _addOne: function(dataModel) {
            var self = this;
            self.renderQueue.push(dataModel.toJSON());
            return self;
        },
        /**
         * 安装滚动条
         * @private
         */
        _setup_scroll: function() {
            var self = this;
            var view_scroll_obj = Scroll(self.$container, {
                is_hide_dropdown: false
            });
            self.view_scroll_obj = view_scroll_obj;
            self.view_scroll_obj.on("dropload", function(e) {
                self.refresh();
            });
        },
        setup: function() {
            var self = this;
            self.$container = self.$("[data-role=container]");
            // 滚动容器
            self.$security_list = self.$("[data-role=search-list]");
            //搜索标签列表
            self.$search_index = self.$("[data-role=search-index]");
            self.$change_btn_wrap = self.$("[data-role=change-btn-wrap]");
            //换一换
            self.$input = self.$("[data-role=input]");
            // 安装事件
            self._setup_events();
            self._renderQueue = [];
            self.renderQueue = [];
            self.start_setted = 0;
        },
        _submit: function(ev) {
            var self = this;
            var search_info = {};
            search_info.id = "";
            search_info.tag = self.$input.val();
            if (!search_info.tag) {
                //                tip.show('请输入搜索内容！', 'error', {
                //                    delay: 800
                //                });
                return;
            }
            self.$input.blur();
            ev.preventDefault();
            ev.stopPropagation();
            self.store.change(Utility.user.id, search_info.tag, "add");
            // modify by hudw
            // 直接将对象序列化传递到结果页面
            var search_info = encodeURIComponent(JSON.stringify(search_info));
            page_control.navigate_to_page("search_result/" + search_info);
        },
        _search: function(ev) {
            var self = this;
            var $target = $(ev.currentTarget);
            var search_info = {};
            search_info.id = $target.attr("data-id");
            search_info.tag = $target.attr("data-tag");
            self.store.change(Utility.user.id, search_info.tag, "add");
            // modify by hudw
            // 直接将对象序列化传递到结果页面
            var search_info = encodeURIComponent(JSON.stringify(search_info));
            page_control.navigate_to_page("search_result/" + search_info);
        },
        /**
         * 删除搜索历史记录
         */
        del_search_history: function() {
            var self = this;
            self.store.remove(Utility.user.id);
        },
        /**
         * 删除搜索历史记录DOM
         */
        del_search_history_dom: function() {
            var self = this;
            if (self.$search_history) {
                self.$search_history.remove();
                self.$search_history = null;
                self.$search_index.removeClass("fn-hide");
            }
        },
        /**
         * 换一换
         * @private
         */
        _change: function() {
            var self = this;
            var show_len = 12;
            var settings_len = Math.ceil(self.renderQueue.length / show_len);
            if (settings_len <= show_len) {
                self._renderQueue = self.renderQueue.slice(0, show_len);
                self.$change_btn_wrap.addClass("fn-hide");
                return;
            }
            //构造开始下标数组
            var settings = [];
            for (var i = 0; i < settings_len; i++) {
                settings.push(i * show_len);
            }
            //var start = settings[parseInt(Math.random()*(settings_len - 1 + 1 ) + 1)];
            var start = settings[self.start_setted];
            var end = start == 0 ? (start + 1) * show_len : start * 2;
            self.$security_list.html("");
            self._renderQueue = self.renderQueue.slice(start, end);
            if (self.start_setted == settings_len - 1) {
                self.start_setted = 0;
            } else {
                self.start_setted++;
            }
            self._render_item({}, {});
        },
        /**
         * 本地储存
         */
        store: {
            /**
             * 前缀
             */
            prefix: "poco-yuepai-app-storage-",
            /**
             * 设置
             * @param key
             * @param val
             * @returns {*}
             */
            set: function(key, val) {
                var self = this;
                if (val === undefined) {
                    return self.remove(key);
                }
                storage.setItem(self.prefix + key, JSON.stringify(val));
                return val;
            },
            /**
             * 获取
             * @param key
             * @returns {*}
             */
            get: function(key) {
                var self = this;
                var storage_get_item = storage.getItem(self.prefix + key);
                if (!storage_get_item) {
                    return storage_get_item;
                } else {
                    return JSON.parse(storage_get_item);
                }
            },
            change: function(key, val, handle) {
                var self = this;
                var old_storage = self.get(key) || [];
                var new_storage = [], i;
                while (i = old_storage.shift()) {
                    if (i !== val) {
                        new_storage.push(i);
                    }
                }
                if (handle != "del") {
                    new_storage.unshift(val);
                }
                self.set(key, new_storage);
            },
            /**
             * 删除
             * @param key
             * @returns {*}
             */
            remove: function(key) {
                var self = this;
                return storage.removeItem(self.prefix + key);
            }
        },
        refresh: function() {
            var self = this;
            self.collection.get_search_list(1);
        },
        _drop_reset: function() {
            var self = this;
            self.view_scroll_obj && self.view_scroll_obj.resetload();
        }
    });
    module.exports = search_view;
});

define("pai/vwx0.0.1-beta/model_date/search/tpl/main-debug.handlebars", [ "utility/handlebars/1.3.0/runtime-debug" ], function(require, exports, module) {
    var Handlebars = require("utility/handlebars/1.3.0/runtime-debug");
    var template = Handlebars.template;
    module.exports = template(function(Handlebars, depth0, helpers, partials, data) {
        this.compilerInfo = [ 4, ">= 1.0.0" ];
        helpers = helpers || {};
        for (var key in Handlebars.helpers) {
            helpers[key] = helpers[key] || Handlebars.helpers[key];
        }
        data = data || {};
        return '<main role="main" class="secondary">\r\n    <header class="nav-header search-header">\r\n        <!-- <div class="btn-back" data-role="btn-back">\r\n            <button class="ui-button ui-button-primary ui-button-size-min ui-button-block ">\r\n                <span class="ui-button-content">返回</span>\r\n            </button>\r\n        </div> -->\r\n\r\n        <div class="left-button-wrap" data-role="btn-back" style="position:absolute">\r\n            <a><i class="icon icon-back"></i></a>\r\n        </div>\r\n        \r\n        <div class="search-index-wrap">\r\n            <!--<div class="lbox"><i class="icon icon-srarch-m"></i></div>-->\r\n            <!-- <div class="rbox" data-role="cancel">取消</div> -->\r\n            <div class="main-search" >\r\n                <button class="icon icon-search-gray" type="button" data-role="search-form"></button>\r\n                <input type="text" class="input-text" placeholder="搜索模特" data-role="input" autocomplete="off">\r\n            </div>\r\n        </div>\r\n    </header>\r\n\r\n    <div style="height:100%" data-role="container">\r\n\r\n        <div class="search-index" data-role="search-index">\r\n            <div class="tags-wrap">\r\n                <section class="tags">\r\n                    <ul data-role="search-list">\r\n                    </ul>\r\n\r\n                </section>\r\n                <div class="btn-wrap" data-role="change-btn-wrap">\r\n                    <div class="btn" data-role="change"><i class="icon icon-refresh-m"></i> 换一批</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</main>';
    });
});

define("pai/vwx0.0.1-beta/model_date/search/tpl/item-debug.handlebars", [ "utility/handlebars/1.3.0/runtime-debug" ], function(require, exports, module) {
    var Handlebars = require("utility/handlebars/1.3.0/runtime-debug");
    var template = Handlebars.template;
    module.exports = template(function(Handlebars, depth0, helpers, partials, data) {
        this.compilerInfo = [ 4, ">= 1.0.0" ];
        helpers = helpers || {};
        for (var key in Handlebars.helpers) {
            helpers[key] = helpers[key] || Handlebars.helpers[key];
        }
        data = data || {};
        var buffer = "", stack1, functionType = "function", escapeExpression = this.escapeExpression, self = this;
        function program1(depth0, data) {
            var buffer = "", stack1, helper;
            buffer += '\r\n    <li><a href="javascript:;" data-id="';
            if (helper = helpers.id) {
                stack1 = helper.call(depth0, {
                    hash: {},
                    data: data
                });
            } else {
                helper = depth0 && depth0.id;
                stack1 = typeof helper === functionType ? helper.call(depth0, {
                    hash: {},
                    data: data
                }) : helper;
            }
            buffer += escapeExpression(stack1) + '" data-tag="';
            if (helper = helpers.tag) {
                stack1 = helper.call(depth0, {
                    hash: {},
                    data: data
                });
            } else {
                helper = depth0 && depth0.tag;
                stack1 = typeof helper === functionType ? helper.call(depth0, {
                    hash: {},
                    data: data
                }) : helper;
            }
            buffer += escapeExpression(stack1) + '" data-role="search">';
            if (helper = helpers.tag) {
                stack1 = helper.call(depth0, {
                    hash: {},
                    data: data
                });
            } else {
                helper = depth0 && depth0.tag;
                stack1 = typeof helper === functionType ? helper.call(depth0, {
                    hash: {},
                    data: data
                }) : helper;
            }
            buffer += escapeExpression(stack1) + "</a></li><!---->\r\n";
            return buffer;
        }
        stack1 = helpers.each.call(depth0, depth0 && depth0.search_list, {
            hash: {},
            inverse: self.noop,
            fn: self.program(1, program1, data),
            data: data
        });
        if (stack1 || stack1 === 0) {
            buffer += stack1;
        }
        buffer += "\r\n";
        return buffer;
    });
});

define("pai/vwx0.0.1-beta/model_date/search/tpl/search_history-debug.handlebars", [ "utility/handlebars/1.3.0/runtime-debug" ], function(require, exports, module) {
    var Handlebars = require("utility/handlebars/1.3.0/runtime-debug");
    var template = Handlebars.template;
    module.exports = template(function(Handlebars, depth0, helpers, partials, data) {
        this.compilerInfo = [ 4, ">= 1.0.0" ];
        helpers = helpers || {};
        for (var key in Handlebars.helpers) {
            helpers[key] = helpers[key] || Handlebars.helpers[key];
        }
        data = data || {};
        var buffer = "", stack1, functionType = "function", escapeExpression = this.escapeExpression, self = this;
        function program1(depth0, data) {
            var buffer = "";
            buffer += '\r\n            <li>\r\n                <div class="lbox" data-tag="' + escapeExpression(typeof depth0 === functionType ? depth0.apply(depth0) : depth0) + '" data-role="search"><i class="icon icon-search-gray-s"></i>' + escapeExpression(typeof depth0 === functionType ? depth0.apply(depth0) : depth0) + '</div>\r\n                <div class="rbox" data-tag="' + escapeExpression(typeof depth0 === functionType ? depth0.apply(depth0) : depth0) + '"data-role="del-search-history-item"><i class="icon icon-close-20x20"></i></div>\r\n            </li>\r\n        ';
            return buffer;
        }
        buffer += '<div class="search-history">\r\n    <section>\r\n        <ul class="list clearfix">\r\n        ';
        stack1 = helpers.each.call(depth0, depth0 && depth0.search_historys, {
            hash: {},
            inverse: self.noop,
            fn: self.program(1, program1, data),
            data: data
        });
        if (stack1 || stack1 === 0) {
            buffer += stack1;
        }
        buffer += '\r\n        </ul>\r\n    </section>\r\n    <div class="btn" data-role="del-search-history">清空搜索历史</div>\r\n</div>\r\n';
        return buffer;
    });
});

define("pai/vwx0.0.1-beta/model_date/search_result/index-debug", [ "$-debug", "pai/vwx0.0.1-beta/frame/page_control-debug", "utility/backbone/1.1.2/backbone-debug", "pai/vwx0.0.1-beta/frame/ua-debug", "pai/vwx0.0.1-beta/frame/page-debug", "utility/zepto/modules/data/1.1.4/data-debug", "utility/hammer/plugins/jquery.hammer/1.1.3/jquery.hammer-debug", "utility/underscore/1.6.0/underscore-debug", "pai/vwx0.0.1-beta/model_date/search_result/collection-debug", "pai/vwx0.0.1-beta/common/global_config-debug", "pai/vwx0.0.1-beta/common/collection-debug", "pai/vwx0.0.1-beta/common/utility-debug", "pai/vwx0.0.1-beta/common/cross_domain_storage-debug", "matcha/cookie/1.0.0/cookie-debug", "pai/vwx0.0.1-beta/model_date/search_result/view-debug", "pai/vwx0.0.1-beta/common/view-debug", "utility/handlebars/1.3.0/runtime-debug", "pai/vwx0.0.1-beta/common/new_iscroll-debug", "utility/iscroll/4.2.5/iscroll-debug", "pai/vwx0.0.1-beta/common/img-ready-debug", "pai/vwx0.0.1-beta/base/ua-debug", "pai/vwx0.0.1-beta/ui/m_alert/view-debug", "pai/vwx0.0.1-beta/widget/abnormal/view-debug" ], function(require, exports, module) {
    var $ = require("$-debug");
    var page_control = require("pai/vwx0.0.1-beta/frame/page_control-debug");
    var collection = require("pai/vwx0.0.1-beta/model_date/search_result/collection-debug");
    var search_view = require("pai/vwx0.0.1-beta/model_date/search_result/view-debug");
    page_control.add_page([ function() {
        return {
            title: "搜索结果",
            route: {
                "search_result/:key": "search_result"
            },
            dom_not_cache: true,
            ignore_exist: true,
            transition_type: null,
            page_init: function(apps_page_view, apps_params, search_info) {
                // modify hudw 2014.12.23
                console.log(decodeURIComponent(apps_params[0]));
                var search_info = eval("(" + decodeURIComponent(apps_params[0]) + ")");
                this.search_view = new search_view({
                    templateModel: {
                        id: search_info.id,
                        tag: search_info.tag
                    },
                    collection: new collection(),
                    parentNode: this.$el
                }).set_search_info(search_info).render();
            },
            page_before_show: function() {},
            page_show: function() {},
            page_before_hide: function() {}
        };
    } ]);
});

/**
 *
 */
define("pai/vwx0.0.1-beta/model_date/search_result/collection-debug", [ "pai/vwx0.0.1-beta/common/global_config-debug", "pai/vwx0.0.1-beta/common/collection-debug", "$-debug", "utility/backbone/1.1.2/backbone-debug", "pai/vwx0.0.1-beta/common/utility-debug", "pai/vwx0.0.1-beta/common/cross_domain_storage-debug", "matcha/cookie/1.0.0/cookie-debug", "utility/underscore/1.6.0/underscore-debug", "pai/vwx0.0.1-beta/frame/ua-debug" ], function(require, exports, module) {
    var global_config = require("pai/vwx0.0.1-beta/common/global_config-debug");
    var collection = require("pai/vwx0.0.1-beta/common/collection-debug");
    var Utility = require("pai/vwx0.0.1-beta/common/utility-debug");
    module.exports = collection.extend({
        url: global_config.ajax_url.search_result,
        initialize: function(options) {
            var self = this;
            self._setup_events();
        },
        parse: function(response) {
            if (response.result_data) {
                if (response.result_data.list) {
                    return response.result_data.list;
                }
                return response.result_data;
            }
        },
        _setup_events: function() {
            var self = this;
            self.on("before:fetch", function(xhr, xhrOptions) {
                self.set_state("sending");
            }).on("success:fetch", function(response, xhrOptions) {
                if (!response.code) {
                    //已加载完所有数据时用户再滚动停止加载数据
                    if (!response.result_data.has_next_page) {}
                    var current_page = self.get_current_page();
                    self.set_current_page(++current_page);
                }
            }).on("complete:fetch", function(xhr, status) {
                self.get_state() != "stopRequest" && self.set_state("free");
            });
        },
        get_search_result_list: function(data) {
            var self = this;
            if (self.get_state() == "sending") {
                return self;
            }
            var param_data = {};
            param_data.nickname = data.tag;
            param_data.page = Utility.int(data.page);
            if (param_data.page < 1) {
                throw new Error("search_result page is invalid");
            }
            self.fetch({
                remove: param_data.page === 1,
                reset: param_data.page === 1,
                data: param_data,
                cache: false,
                beforeSend: function(xhr, xhrOptions) {
                    self.trigger("before:fetch", xhr, xhrOptions);
                },
                complete: function(xhr, status) {
                    self.trigger("complete:fetch", xhr, status);
                },
                success: function(collection, response, options) {
                    self.trigger("success:fetch", response, options);
                },
                error: function(collection, response, options) {
                    self.trigger("error:fetch", response, options);
                }
            });
            return self;
        },
        /**
         * 获取当前状态
         * @returns {*}
         */
        get_state: function() {
            return this._send_state;
        },
        /**
         * 设置当前状态
         * @param s
         * @returns {search_result_collection}
         */
        set_state: function(s) {
            var self = this;
            self._send_state = s;
            return self;
        },
        /**
         * 获取当前页码
         * @returns {*|number}
         */
        get_current_page: function() {
            return this._current_page || 0;
        },
        /**
         * 设置当前页码
         * @param page
         */
        set_current_page: function(page) {
            page = Utility.int(page);
            page && (this._current_page = page);
        }
    });
});

define("pai/vwx0.0.1-beta/model_date/search_result/view-debug", [ "$-debug", "pai/vwx0.0.1-beta/frame/page_control-debug", "utility/backbone/1.1.2/backbone-debug", "pai/vwx0.0.1-beta/frame/ua-debug", "pai/vwx0.0.1-beta/frame/page-debug", "utility/zepto/modules/data/1.1.4/data-debug", "utility/hammer/plugins/jquery.hammer/1.1.3/jquery.hammer-debug", "utility/underscore/1.6.0/underscore-debug", "pai/vwx0.0.1-beta/common/view-debug", "utility/handlebars/1.3.0/runtime-debug", "pai/vwx0.0.1-beta/common/new_iscroll-debug", "utility/iscroll/4.2.5/iscroll-debug", "pai/vwx0.0.1-beta/common/utility-debug", "pai/vwx0.0.1-beta/common/cross_domain_storage-debug", "matcha/cookie/1.0.0/cookie-debug", "pai/vwx0.0.1-beta/common/img-ready-debug", "pai/vwx0.0.1-beta/base/ua-debug", "pai/vwx0.0.1-beta/ui/m_alert/view-debug", "pai/vwx0.0.1-beta/widget/abnormal/view-debug" ], function(require, exports, module) {
    var $ = require("$-debug");
    var page_control = require("pai/vwx0.0.1-beta/frame/page_control-debug");
    var View = require("pai/vwx0.0.1-beta/common/view-debug");
    var Scroll = require("pai/vwx0.0.1-beta/common/new_iscroll-debug");
    var Utility = require("pai/vwx0.0.1-beta/common/utility-debug");
    var tip = require("pai/vwx0.0.1-beta/ui/m_alert/view-debug");
    var abnormal = require("pai/vwx0.0.1-beta/widget/abnormal/view-debug");
    var main_tpl = require("pai/vwx0.0.1-beta/model_date/search_result/tpl/main-debug.handlebars");
    var item_tpl = require("pai/vwx0.0.1-beta/model_date/search_result/tpl/item-debug.handlebars");
    var search_view = View.extend({
        attrs: {
            template: main_tpl
        },
        events: {
            "tap [data-role=page-back]": function(ev) {
                page_control.back();
            },
            "tap [data-role=to-model]": function(ev) {
                var $target = $(ev.currentTarget);
                var user_id = $target.attr("data-user-id");
                page_control.navigate_to_page("model_card/" + user_id);
            }
        },
        /**
         * 事件安装
         * @private
         */
        _setup_events: function() {
            var self = this;
            //            self.listenTo(self.collection,'all',function() {
            //                // debug 用
            //            });
            self.listenTo(self.collection, "reset", self._reset).listenTo(self.collection, "add", self._addOne).listenTo(self.collection, "before:fetch", function() {
                //                    tip.show('查询中...', 'loading', {
                //                        delay: -1
                //                    });
                self.$load_more.html("查询中...");
            }).listenTo(self.collection, "success:fetch", function(response, xhrOptions) {
                if (response.result_data.empty) {
                    self.abnormal_view = new abnormal({
                        templateModel: {
                            content_height: Utility.get_view_port_height("all") - 35
                        },
                        parentNode: self.$search_result_list
                    }).render();
                } else {
                    self._render_item(response, xhrOptions);
                    self.$load_more.html("上拉加载更多");
                }
                //没有更多数据去除可以加载更多提示
                if (!response.result_data.has_next_page) {
                    self.$load_more.remove();
                    self.$load_more = null;
                }
                tip.hide();
            }).listenTo(self.collection, "error:fetch", function(xhr, status) {
                tip.show("查询失败请返回重试", "error", {
                    delay: 800
                });
            }).listenTo(self.collection, "complete:fetch", function(xhr, status) {});
            self.on("render", function() {
                self.collection.get_search_result_list(self.search_data);
            });
            // 视图更新
            self.on("updateList", function(response, xhrOptions) {
                // 第一次载入时iScroll未生成
                if (!self.view_scroll_obj) {
                    self._setup_scroll();
                }
                self.view_scroll_obj.refresh();
            });
        },
        _render_item: function(response, xhrOptions) {
            var self = this;
            var renderQueue = self._renderQueue;
            var htmlStr = item_tpl({
                search_list: renderQueue
            });
            var method = xhrOptions.reset ? "html" : "append";
            self.$search_result_list[method](htmlStr);
            self.trigger("updateList", response, xhrOptions);
            self._renderQueue = [];
            self.view_scroll_obj.refresh();
        },
        _reset: function() {
            var self = this;
            self.collection.each(self._addOne, self);
        },
        _addOne: function(dataModel) {
            var self = this;
            self._renderQueue.push(dataModel.toJSON());
            return self;
        },
        /**
         * 安装滚动条
         * @private
         */
        _setup_scroll: function() {
            var self = this;
            var view_scroll_obj = Scroll(self.$container, {
                lazyLoad: true
            });
            self.view_scroll_obj = view_scroll_obj;
            self.view_scroll_obj.on("scrollEndAfter", function() {
                console.log(this.y);
                console.log(this.maxScrollY);
                if (self.$load_more) {
                    if (this.y <= this.maxScrollY) {
                        self._load_more();
                    }
                }
            });
        },
        /**
         * 加载下一页数据
         * @private
         */
        _load_more: function() {
            var self = this;
            if (self.collection.get_state() == "free") {
                var current_page = self.collection.get_current_page();
                self.search_data.page = ++current_page;
                self.collection.get_search_result_list(self.search_data);
            }
        },
        render: function() {
            var self = this;
            View.prototype.render.apply(self);
            self.trigger("render");
            return self;
        },
        /**
         * 设置搜索参数
         * @param data
         * @returns {search_view}
         */
        set_search_info: function(data) {
            var self = this;
            //因为是渲染前设置所以设page为1
            data.page = 1;
            self.search_data = data;
            return self;
        },
        setup: function() {
            var self = this;
            self.$container = self.$("[data-role=container]");
            // 滚动容器
            self.$search_result_list = self.$("[data-role=search-result-list]");
            self.$search_result = self.$("[data-role=search-result]");
            self.$load_more = self.$("[data-role=load-more]");
            // 安装事件
            self._setup_events();
            self._renderQueue = [];
        }
    });
    module.exports = search_view;
});

define("pai/vwx0.0.1-beta/model_date/search_result/tpl/main-debug.handlebars", [ "utility/handlebars/1.3.0/runtime-debug" ], function(require, exports, module) {
    var Handlebars = require("utility/handlebars/1.3.0/runtime-debug");
    var template = Handlebars.template;
    module.exports = template(function(Handlebars, depth0, helpers, partials, data) {
        this.compilerInfo = [ 4, ">= 1.0.0" ];
        helpers = helpers || {};
        for (var key in Handlebars.helpers) {
            helpers[key] = helpers[key] || Handlebars.helpers[key];
        }
        data = data || {};
        var buffer = "", stack1, helper, functionType = "function", escapeExpression = this.escapeExpression;
        buffer += '<main role="main" class="secondary">\r\n    <header class="nav-header search-header">\r\n        <div class="left-button-wrap">\r\n            <a data-role="page-back"><i class="icon icon-back"></i></a>\r\n        </div>\r\n\r\n        <h3 class="title">搜索结果</h3>\r\n\r\n        <div class="right-button-wrap">\r\n            <a><i class="icon icon-cog"></i></a>\r\n        </div>\r\n    </header>\r\n\r\n    <div style="height:100%" data-role="container">\r\n\r\n\r\n        <div class="search-result" data-role="search-result">\r\n\r\n            <div class="name-show" data-id="';
        if (helper = helpers.id) {
            stack1 = helper.call(depth0, {
                hash: {},
                data: data
            });
        } else {
            helper = depth0 && depth0.id;
            stack1 = typeof helper === functionType ? helper.call(depth0, {
                hash: {},
                data: data
            }) : helper;
        }
        buffer += escapeExpression(stack1) + '">当前搜索：';
        if (helper = helpers.tag) {
            stack1 = helper.call(depth0, {
                hash: {},
                data: data
            });
        } else {
            helper = depth0 && depth0.tag;
            stack1 = typeof helper === functionType ? helper.call(depth0, {
                hash: {},
                data: data
            }) : helper;
        }
        buffer += escapeExpression(stack1) + '</div>\r\n\r\n            <ul class="list clearfix" data-role="search-result-list">\r\n\r\n            </ul>\r\n\r\n            <div class="btn" data-role="load-more">上拉加载更多</div>\r\n\r\n        </div>\r\n\r\n    </div>\r\n</main>';
        return buffer;
    });
});

define("pai/vwx0.0.1-beta/model_date/search_result/tpl/item-debug.handlebars", [ "utility/handlebars/1.3.0/runtime-debug" ], function(require, exports, module) {
    var Handlebars = require("utility/handlebars/1.3.0/runtime-debug");
    var template = Handlebars.template;
    module.exports = template(function(Handlebars, depth0, helpers, partials, data) {
        this.compilerInfo = [ 4, ">= 1.0.0" ];
        helpers = helpers || {};
        for (var key in Handlebars.helpers) {
            helpers[key] = helpers[key] || Handlebars.helpers[key];
        }
        data = data || {};
        var buffer = "", stack1, functionType = "function", escapeExpression = this.escapeExpression, self = this;
        function program1(depth0, data) {
            var buffer = "", stack1, helper;
            buffer += '\r\n    <li data-user-id="';
            if (helper = helpers.user_id) {
                stack1 = helper.call(depth0, {
                    hash: {},
                    data: data
                });
            } else {
                helper = depth0 && depth0.user_id;
                stack1 = typeof helper === functionType ? helper.call(depth0, {
                    hash: {},
                    data: data
                }) : helper;
            }
            buffer += escapeExpression(stack1) + '" data-role="to-model">\r\n        <div class="avatar-size-mod avatar-size-mod-80">\r\n            <span class="icon avatar-size-area "></span>\r\n            <i class="img image-img avatar-size-img" data-lazyload="';
            if (helper = helpers.user_icon) {
                stack1 = helper.call(depth0, {
                    hash: {},
                    data: data
                });
            } else {
                helper = depth0 && depth0.user_icon;
                stack1 = typeof helper === functionType ? helper.call(depth0, {
                    hash: {},
                    data: data
                }) : helper;
            }
            buffer += escapeExpression(stack1) + '"></i>\r\n        </div>\r\n        <h3 class="name">';
            if (helper = helpers.nickname) {
                stack1 = helper.call(depth0, {
                    hash: {},
                    data: data
                });
            } else {
                helper = depth0 && depth0.nickname;
                stack1 = typeof helper === functionType ? helper.call(depth0, {
                    hash: {},
                    data: data
                }) : helper;
            }
            buffer += escapeExpression(stack1) + "</h3>\r\n    </li>\r\n";
            return buffer;
        }
        stack1 = helpers.each.call(depth0, depth0 && depth0.search_list, {
            hash: {},
            inverse: self.noop,
            fn: self.program(1, program1, data),
            data: data
        });
        if (stack1 || stack1 === 0) {
            buffer += stack1;
        }
        buffer += "\r\n";
        return buffer;
    });
});

/**
 * 首页 - 模特卡
 * 汤圆 2014.8.21
 * @param  {[type]} require 
 * @param  {[type]} exports 
 * @param  {[type]} module  
 * @return {[type]}         
 */
define("pai/vwx0.0.1-beta/model_date/model_card/index-debug", [ "$-debug", "pai/vwx0.0.1-beta/frame/page_control-debug", "utility/backbone/1.1.2/backbone-debug", "pai/vwx0.0.1-beta/frame/ua-debug", "pai/vwx0.0.1-beta/frame/page-debug", "utility/zepto/modules/data/1.1.4/data-debug", "utility/hammer/plugins/jquery.hammer/1.1.3/jquery.hammer-debug", "utility/underscore/1.6.0/underscore-debug", "pai/vwx0.0.1-beta/common/utility-debug", "pai/vwx0.0.1-beta/common/cross_domain_storage-debug", "matcha/cookie/1.0.0/cookie-debug", "pai/vwx0.0.1-beta/model_date/model_card/view-debug", "pai/vwx0.0.1-beta/common/view-debug", "utility/handlebars/1.3.0/runtime-debug", "pai/vwx0.0.1-beta/common/scroll-debug", "utility/iscroll/4.2.5/iscroll-debug", "pai/vwx0.0.1-beta/common/img-ready-debug", "pai/vwx0.0.1-beta/common/new_iscroll-debug", "pai/vwx0.0.1-beta/base/ua-debug", "pai/vwx0.0.1-beta/widget/model_pic/view-debug", "pai/vwx0.0.1-beta/common/template-helpers-debug", "pai/vwx0.0.1-beta/common/I_APP-debug", "pai/vwx0.0.1-beta/common/global_config-debug", "pai/vwx0.0.1-beta/ui/m_alert/view-debug", "pai/vwx0.0.1-beta/ui/mine-popup/index-debug", "pai/vwx0.0.1-beta/ui/popup/index-debug", "pai/vwx0.0.1-beta/common/I_WX-debug", "pai/vwx0.0.1-beta/ui/dialog/index-debug", "pai/vwx0.0.1-beta/model_date/model_card/model-debug" ], function(require, exports, module) {
    var $ = require("$-debug");
    var page_control = require("pai/vwx0.0.1-beta/frame/page_control-debug");
    var utility = require("pai/vwx0.0.1-beta/common/utility-debug");
    var model_card_view = require("pai/vwx0.0.1-beta/model_date/model_card/view-debug");
    var model = require("pai/vwx0.0.1-beta/model_date/model_card/model-debug");
    page_control.add_page([ function() {
        return {
            title: "模特卡",
            route: {
                "model_card/:user_id": "model_card"
            },
            transition_type: "slide",
            dom_not_cache: true,
            ignore_exist: true,
            initialize: function() {},
            page_init: function(page_view, route_params_arr, route_params_obj) {
                var self = this;
                var user_id = route_params_arr[0];
                var preview_data = null;
                console.log(route_params_obj);
                if (!utility.is_empty(route_params_obj) && !route_params_obj.is_from_reg) {
                    if (route_params_obj && route_params_obj.data) {
                        route_params_obj.data.is_preview = true;
                        preview_data = route_params_obj.data;
                        is_preview = true;
                    }
                } else {
                    is_preview = false;
                }
                var model_obj = new model({
                    user_id: user_id
                });
                console.log(preview_data);
                self.model_card_view_obj = new model_card_view({
                    templateModel: {
                        is_preview: is_preview
                    },
                    model: model_obj,
                    parentNode: self.$el
                }).set_preview_data(preview_data).render();
            },
            page_before_show: function() {
                var self = this;
            },
            page_show: function() {},
            page_before_hide: function() {
                var self = this;
            }
        };
    } ]);
});

/**
 * 首页 - 模特卡
 * 汤圆 2014.8.21
 */
define("pai/vwx0.0.1-beta/model_date/model_card/view-debug", [ "$-debug", "pai/vwx0.0.1-beta/frame/page_control-debug", "utility/backbone/1.1.2/backbone-debug", "pai/vwx0.0.1-beta/frame/ua-debug", "pai/vwx0.0.1-beta/frame/page-debug", "utility/zepto/modules/data/1.1.4/data-debug", "utility/hammer/plugins/jquery.hammer/1.1.3/jquery.hammer-debug", "utility/underscore/1.6.0/underscore-debug", "pai/vwx0.0.1-beta/common/view-debug", "utility/handlebars/1.3.0/runtime-debug", "pai/vwx0.0.1-beta/common/utility-debug", "pai/vwx0.0.1-beta/common/cross_domain_storage-debug", "matcha/cookie/1.0.0/cookie-debug", "pai/vwx0.0.1-beta/common/scroll-debug", "utility/iscroll/4.2.5/iscroll-debug", "pai/vwx0.0.1-beta/common/img-ready-debug", "pai/vwx0.0.1-beta/common/new_iscroll-debug", "pai/vwx0.0.1-beta/base/ua-debug", "pai/vwx0.0.1-beta/widget/model_pic/view-debug", "pai/vwx0.0.1-beta/common/template-helpers-debug", "pai/vwx0.0.1-beta/common/I_APP-debug", "pai/vwx0.0.1-beta/common/global_config-debug", "pai/vwx0.0.1-beta/ui/m_alert/view-debug", "pai/vwx0.0.1-beta/ui/mine-popup/index-debug", "pai/vwx0.0.1-beta/ui/popup/index-debug", "pai/vwx0.0.1-beta/common/I_WX-debug", "pai/vwx0.0.1-beta/ui/dialog/index-debug" ], function(require, exports, module) {
    var $ = require("$-debug");
    var page_control = require("pai/vwx0.0.1-beta/frame/page_control-debug");
    var View = require("pai/vwx0.0.1-beta/common/view-debug");
    var model_card = require("pai/vwx0.0.1-beta/model_date/model_card/tpl/main-debug.handlebars");
    var items_tpl = require("pai/vwx0.0.1-beta/model_date/model_card/tpl/items-debug.handlebars");
    var starts_tpl = require("pai/vwx0.0.1-beta/model_date/model_card/tpl/starts-debug.handlebars");
    var utility = require("pai/vwx0.0.1-beta/common/utility-debug");
    var Scroll = require("pai/vwx0.0.1-beta/common/scroll-debug");
    var IScroll = require("pai/vwx0.0.1-beta/common/new_iscroll-debug");
    var slide_tpl = require("pai/vwx0.0.1-beta/widget/slide_v2/tpl/slide-debug.handlebars");
    //var slide_v2 = require('../../widget/slide_v2/view');
    var grid = require("pai/vwx0.0.1-beta/widget/model_pic/view-debug");
    var App = require("pai/vwx0.0.1-beta/common/I_APP-debug");
    var m_alert = require("pai/vwx0.0.1-beta/ui/m_alert/view-debug");
    var mine_popup = require("pai/vwx0.0.1-beta/ui/mine-popup/index-debug");
    var WeixinApi = require("pai/vwx0.0.1-beta/common/I_WX-debug");
    var dialog = require("pai/vwx0.0.1-beta/ui/dialog/index-debug");
    var model_card_view = View.extend({
        attrs: {
            template: model_card
        },
        events: {
            /*'swiperight' : function (){
                page_control.back();
            },*/
            /**
             * 约拍按钮
             */
            'tap [data-role="yuepai"]': function() {
                var self = this;
                if (!utility.auth.is_login()) {
                    console.log("no_login");
                    self.dialog_login.show();
                    return;
                }
                //用于预览跳过来
                if (self.preview_data && self.preview_data.is_preview) {
                    self.model.is_preview = true;
                    page_control.navigate_to_page("model_style/" + self.model.user_id, {
                        data: self.preview_data
                    });
                    return;
                }
                if (utility.login_id == self.model.get("user_id")) {
                    m_alert.show("不要刷单啊，自己不能约自己", "error");
                    return;
                }
                if (utility.login_id && utility.user.get("role") == "model") {
                    m_alert.show("我们暂时不支持模特约拍模特功能。", "error");
                    return;
                }
                // 直接跳过去选择风格
                page_control.navigate_to_page("model_style/" + self.model.get("user_id"));
            },
            swiperight: function() {},
            /**
             * 私聊按钮
             * @param ev
             */
            "tap [data-role=msg]": function(ev) {
                var self = this;
                if (WeixinApi.isWexXin()) {
                    console.log("is weixin");
                    self.dialog_down_app.show();
                } else {
                    console.log("not weixin");
                    self.dialog_down_app.show();
                }
                return;
                if (!utility.auth.is_login()) {
                    page_control.navigate_to_page("account/login");
                    return;
                }
                if (self.model.toJSON().user_id == utility.user.get("user_id")) {
                    m_alert.show("不要和自己聊天。", "error");
                    return;
                }
                if (utility.user.get("role") == "model") {
                    m_alert.show("不要和模特聊天。", "error");
                    return;
                }
                self.is_from_date = false;
                self.model.judge_can_date({
                    model_user_id: self.model.get("user_id")
                });
            },
            "tap [data-role=page-back]": function(ev) {
                page_control.back();
            },
            'tap [data-role="model-car-available_notice"]': function() {
                var self = this;
            },
            'tap [data-role="model-car-available_notice_text"]': function() {
                var self = this;
            },
            /**
             * 关注按钮
             */
            'tap [data-role="follow"]': function() {
                var self = this;
                if (!utility.auth.is_login()) {
                    page_control.navigate_to_page("account/login");
                    return;
                }
                var data = {
                    type: "follow",
                    be_follow_user_id: self.model.get("user_id")
                };
                m_alert.show("关注中...", {
                    delay: 1e3
                });
                self.model.follow_request(data);
            },
            /**
             * 取消关注按钮
             */
            'tap [data-role="unfollow"]': function() {
                var self = this;
                if (!utility.auth.is_login()) {
                    page_control.navigate_to_page("account/login");
                    return;
                }
                var data = {
                    type: "no_follow",
                    be_follow_user_id: self.model.get("user_id")
                };
                m_alert.show("取消关注中...", {
                    delay: 1e3
                });
                self.model.unfollow_request(data);
            },
            'tap [data-role="go_fans"]': function() {
                var self = this;
                page_control.navigate_to_page("account/fans_follows/" + self.model.get("user_id") + "/fans");
            },
            /**
             * 点击查看轮播图
             * @param ev
             */
            "tap [data-role=grid-pic-container]": function(ev) {
                var self = this;
                var $cur_btn = $(ev.currentTarget);
                // 当前图片
                var cur_alumn_img = $cur_btn.attr("data-alumn-img");
                // 所有图片
                var $total_alumn_img = self.$("[data-role=grid-pic-container]");
                var total_alumn_img_arr = [];
                var total_weixin_alumn_arr = [];
                $total_alumn_img.each(function(i, obj) {
                    total_alumn_img_arr.push({
                        url: $(obj).attr("data-alumn-img"),
                        text: ""
                    });
                    total_weixin_alumn_arr.push($(obj).attr("data-alumn-img"));
                });
                if (WeixinApi.isWexXin()) {
                    WeixinApi.imagePreview(cur_alumn_img, total_weixin_alumn_arr);
                    return;
                }
                // 当前图片索引
                var index = $total_alumn_img.index($cur_btn);
                // 轮播图数据
                var data = {
                    img_arr: total_alumn_img_arr,
                    index: index
                };
                console.log(data);
                if (!App.isPaiApp) {
                    console.log("no App");
                    return;
                }
                App.show_alumn_imgs(data);
            },
            'tap [data-role="nav-to-comment"]': function(ev) {
                var self = this;
                var $cur_btn = $(ev.currentTarget);
                var user_id = self.model.get("user_id");
                page_control.navigate_to_page("comment/list/model/" + user_id + "/0");
            },
            'tap [data-role="menu"]': function() {
                // 弹出层设置
                var self = this;
                if (!self.mine_Popup) {
                    self.mine_Popup = new mine_popup({
                        uid: utility.user.get("user_id"),
                        report_model_id: self.model.get("user_id"),
                        items: {
                            edit: false,
                            report: true
                        }
                    }).show();
                } else {
                    self.mine_Popup.show();
                }
            },
            'tap [data-role="pop-max-dabenxiang"]': function(ev) {
                var self = this;
                $(ev.currentTarget).addClass("fn-hide");
                utility.storage.set("pop-max-dabenxiang", 1);
            }
        },
        _setup_events: function() {
            var self = this;
            self.model.on("success:fetch", function(response, options) {
                self._insert_data();
                //安装轮播
                self._setup_slide();
                //console.log('slide');
                if (self.model.toJSON().is_follow) {
                    self.$('[data-role="unfollow"]').removeClass("fn-hide");
                } else {
                    self.$('[data-role="follow"]').removeClass("fn-hide");
                }
                self.$('[data-role="msg"]').removeClass("fn-hide");
                // 显示模特卡名字
                self.$('[data-role="moteka-title"]').html(self.model.get("nickname"));
                if (!self.view_scroll_obj) {
                    self._setup_scroll();
                    self.view_scroll_obj.reset_top();
                    self._drop_reset();
                    return;
                }
                self._drop_reset();
                self.view_scroll_obj.refresh();
                self.view_scroll_obj.reset_top();
            }).on("complete:fetch", function(response, options) {
                //m_alert.hide();
                self.view_scroll_obj.refresh();
            }).on("success:fetch_follow", function(response, options) {
                self.$('[data-role="follow"]').addClass("fn-hide");
                self.$('[data-role="unfollow"]').removeClass("fn-hide");
                var fans_obj = self.$('[data-role="be_follow_count"]');
                fans_obj.html(utility.int(fans_obj.html()) + 1);
                m_alert.show(response.result_data.msg, "right", {
                    delay: 1e3
                });
            }).on("error:fetch_follow", function(response, options) {
                m_alert.show("关注失败！", "error", {
                    delay: 1e3
                });
            }).on("complete:fetch_follow", function(response, options) {}).on("success:fetch_unfollow", function(response, options) {
                self.$('[data-role="unfollow"]').addClass("fn-hide");
                self.$('[data-role="follow"]').removeClass("fn-hide");
                var fans_obj = self.$('[data-role="be_follow_count"]');
                fans_obj.html(utility.int(fans_obj.html()) - 1);
                m_alert.show(response.result_data.msg, "right", {
                    delay: 1e3
                });
            }).on("error:fetch_unfollow", function(response, options) {
                m_alert.show("取消失败！", "error", {
                    delay: 1e3
                });
            }).on("complete:fetch_unfollow", function(response, options) {}).on("before:judge_can_date", function() {
                if (self.is_from_date) {
                    m_alert.show("约拍正在准备中。。。", "loading", {
                        delay: -1
                    });
                } else {
                    m_alert.show("私聊正在准备中。。。", "loading", {
                        delay: -1
                    });
                }
            }).on("success:judge_can_date", function(response, options) {
                var response = response.result_data;
                if (response.code != 1) {
                    m_alert.show(response.msg, "error");
                    var url = encodeURIComponent(window.location.href);
                    switch (utility.int(response.model_level_require)) {
                      case 2:
                        page_control.navigate_to_page("mine/authentication/v2/from_date");
                        break;

                      case 3:
                        page_control.navigate_to_page("mine/authentication/v3/from_date_" + url);
                        break;
                    }
                    return;
                }
                m_alert.hide();
                if (self.is_from_date) {
                    page_control.navigate_to_page("model_style/" + self.model.get("user_id"));
                } else {
                    var data = {
                        senderid: utility.login_id,
                        receiverid: utility.int(self.model.get("user_id")),
                        sendername: utility.user.get("nickname"),
                        receivername: self.model.get("user_name"),
                        sendericon: utility.user.get("user_icon"),
                        receivericon: self.model.get("user_icon")
                    };
                    console.log(data);
                    if (!App.isPaiApp) {
                        console.warn("no App");
                        return;
                    }
                    App.chat(data);
                }
            }).on("error:judge_can_date", function() {
                m_alert.show("网络异常", "error");
            });
            self.on("render", function() {
                self.get_model_info();
                console.log("render");
                self.$('[data-role="pop-max-dabenxiang"]').addClass("fn-hide");
                if (utility.storage.get("pop-max-dabenxiang") || self.preview_data) {}
            });
        },
        _insert_data: function(data) {
            var self = this;
            var model_data = self.model.toJSON();
            //用于预览
            if (data) {
                data.is_preview = true;
                model_data = data;
            }
            var html_str = items_tpl(model_data);
            self.$items_container.html(html_str);
            console.log(model_data);
            self.can_pai = true;
            var html_str = starts_tpl({
                data: model_data.comment_stars_list
            });
            self.$('[data-role="starts"]').html(html_str);
            //self.view_scroll_obj.refresh();
            //self.view_scroll_obj.scrollTo(0,0);
            if (utility.login_id == self.model.get("user_id")) {
                self.$focus_contain = self.$('[data-role="focus-contain"]');
                self.$focus_contain.addClass("fn-hide");
            }
            // 显示模特卡名字 hudw 2014.11.21
            self.$('[data-role="moteka-title"]').html(utility.user.get("nickname"));
        },
        _setup_scroll: function() {
            var self = this;
            var view_scroll_obj = Scroll(self.$container, {
                lazyLoad: true,
                prevent_tag: "slider"
            });
            self.view_scroll_obj = view_scroll_obj;
            self.view_scroll_obj.on("dropload", function(e) {
                self.get_model_info();
            });
        },
        setup: function() {
            var self = this;
            var container_height = utility.get_grid_size("double").height;
            // 配置交互对象
            self.$container = self.$("[data-role=items-container]");
            self.$items_container = self.$('[data-role="items-container"]');
            self.$container_img_list = self.$('[data-role="container-img-list"]');
            self.$container.height(self.reset_viewport_height());
            self.$container_img_list.height(container_height);
            self.can_pai = false;
            self._setup_events();
            self.setup_dialog_down_app();
            self.setup_dialog_login();
        },
        render: function() {
            var self = this;
            View.prototype.render.apply(self);
            self.trigger("render");
            return self;
        },
        setup_dialog_down_app: function() {
            var self = this;
            // 已注册过的提示层安装 hudw 2014.11.21
            self.dialog_down_app = new dialog({
                content: '<p class="wx_card_notice">如需与模特私聊，请下载APP</p><button class="ui-button ui-button-primary ui-button-size-middle ui-button-block wx_card_login_btn"  data-role="button" data-name="wx_card_download_btn"><span class="ui-button-content">下载APP</span></button><p class="wx_card_no_download" data-role="button" data-name="wx_card_go_date_btn">无需下载，直接约拍</p>'
            });
            self.dialog_down_app.on("tap:button:wx_card_download_btn", function() {
                this.hide();
                window.location.href = "http://app.yueus.com/";
            }).on("tap:button:wx_card_go_date_btn", function() {
                this.hide();
                if (!utility.auth.is_login()) {
                    console.log("no_login");
                    self.dialog_login.show();
                    return;
                }
                //用于预览跳过来
                if (self.preview_data && self.preview_data.is_preview) {
                    self.model.is_preview = true;
                    page_control.navigate_to_page("model_style/" + self.model.user_id, {
                        data: self.preview_data
                    });
                    return;
                }
                if (utility.login_id == self.model.get("user_id")) {
                    m_alert.show("不要刷单啊，自己不能约自己", "error");
                    return;
                }
                if (utility.login_id && utility.user.get("role") == "model") {
                    m_alert.show("我们暂时不支持模特约拍模特功能。", "error");
                    return;
                }
                // 直接跳过去选择风格
                page_control.navigate_to_page("model_style/" + self.model.get("user_id"));
            });
        },
        setup_dialog_login: function() {
            var self = this;
            self.dialog_login = new dialog({
                content: '<p class="wx_card_notice">您还没有注册</p><button class="ui-button ui-button-primary ui-button-size-middle ui-button-block wx_card_login_btn"  data-role="button" data-name="wx_card_login_btn"><span class="ui-button-content">注册</span></button>'
            }).on("tap:button:wx_card_login_btn", function() {
                this.hide();
                // modify by hudw 2014.12.23
                page_control.navigate_to_page("account/register/reg");
            });
        },
        _drop_reset: function() {
            var self = this;
            self.view_scroll_obj && self.view_scroll_obj.resetload();
        },
        set_preview_data: function(data) {
            var self = this;
            self.preview_data = data || null;
            return self;
        },
        /**
         * 安装轮播滚动
         * @private
         */
        _setup_slide: function(data) {
            var self = this;
            var contents = [];
            if (data) {
                var group_render_queue = data;
            } else {
                var group_render_queue = self.model.toJSON().new_model_pic;
            }
            if (!group_render_queue) {
                return;
            }
            var len = group_render_queue.length;
            // 头部组图
            for (var i = 0; i < len; i++) {
                if (i == 1) {
                    for (var n = 0; n < group_render_queue[i].length; n++) {
                        if ((n + 2) % 3 == 0) {
                            group_render_queue[i][n].type = "middle";
                        } else {
                            group_render_queue[i][n].type = "one";
                        }
                    }
                }
                var img_render_queue = group_render_queue[i];
                console.log(img_render_queue);
                var grid_list_view = new grid({
                    templateModel: {
                        tpl_data: img_render_queue,
                        tpl_type: "1double_others_one"
                    }
                }).render();
                var new_grid_container = document.createElement("li");
                $(new_grid_container).html(grid_list_view.list());
                contents.push({
                    content: $(new_grid_container).html()
                });
            }
            //当只有一张图时不显示小圆点
            var no_single;
            contents.length > 1 ? no_single = true : no_single = false;
            self.$slide_out = self.$("[data-role=container-img-list]");
            //设置选中第一个
            // modify by hudw 先判断对象是否存在
            if (contents[0]) {
                contents[0].class = "current";
            }
            /**
             * modify by hudw
             * 2014.12.25
             * 使用iscroll 实现轮播
             */
            self.$slide_out.html(slide_tpl({
                contents: contents,
                no_single: no_single
            }));
            var l = self.$slide_out.find(".swiper-slide").length;
            var w = utility.get_view_port_width();
            var h = grid_list_view && grid_list_view._get_size_by_type("double").height;
            self.$slide_out.find(".swiper-slide").width(w).height(h);
            self.$slide_out.height(h);
            self.slide_view = new IScroll(self.$slide_out, {
                bounce: false,
                snap: true,
                snapThreshold: utility.get_view_port_width() / 2,
                momentum: false,
                hScroll: true,
                vScroll: false,
                hScrollbar: false,
                vScrollbar: false,
                checkDOMChanges: true
            });
            self.slide_view.current_page = 1;
            $(self.slide_view.scroller).width(utility.float(l * w)).height(h);
            if (contents.length > 1) {
                self.$slide_out.height(h + 20);
                self.$slide_out.find('[data-role="ad-pics-num"] span').eq(0).addClass("swiper-visible-switch swiper-active-switch");
            }
            self.slide_view.on("scrollEnd", function() {
                var _self = this;
                var idx = _self.currPageX;
                self.$slide_out.find('[data-role="ad-pics-num"] span').removeClass("swiper-visible-switch swiper-active-switch");
                self.$slide_out.find('[data-role="ad-pics-num"] span').eq(idx).addClass("swiper-visible-switch swiper-active-switch");
            });
            self.slide_view.refresh();
            /***END***/
            /*self.slide_view = new slide({
                templateModel :
                {
                    contents : contents,
                    no_single : no_single,
                    height:grid_list_view && grid_list_view._get_size_by_type('double').height - 20 //因为插件是拿到整个的高度设置，所以要减去下面小点的div高度
                },
                parentNode:self.$slide_out
            }).set_options({
                    disableScroll : true, // 停止滚动冒泡
                    continuous : true,// 无限循环的图片切换效果
                    //auto : 1000,
                    startSlide : 0 //起始图片切换的索引位置
                }).render();*/
            /*self.slide_view = new slide_v2({
                templateModel :
                {
                    contents : contents,
                    no_single : no_single,
                    height:grid_list_view && grid_list_view._get_size_by_type('double').height - 20 //因为插件是拿到整个的高度设置，所以要减去下面小点的div高度
                },
                parentNode:self.$slide_out
            }).set_options({
                    contents : contents
                }).render();*/
            setTimeout(function() {
                self.view_scroll_obj.refresh();
            }, 50);
        },
        get_model_info: function() {
            var self = this;
            //用于预览
            if (self.preview_data) {
                self._insert_data(self.preview_data);
                //安装轮播
                self._setup_slide(self.preview_data.new_model_pic);
                if (!self.view_scroll_obj) {
                    self._setup_scroll();
                    self.view_scroll_obj.reset_top();
                }
            } else {
                self.model.get_info();
            }
        },
        reset_viewport_height: function() {
            return utility.get_view_port_height() - 45;
        }
    });
    module.exports = model_card_view;
});

define("pai/vwx0.0.1-beta/model_date/model_card/tpl/main-debug.handlebars", [ "utility/handlebars/1.3.0/runtime-debug" ], function(require, exports, module) {
    var Handlebars = require("utility/handlebars/1.3.0/runtime-debug");
    var template = Handlebars.template;
    module.exports = template(function(Handlebars, depth0, helpers, partials, data) {
        this.compilerInfo = [ 4, ">= 1.0.0" ];
        helpers = helpers || {};
        for (var key in Handlebars.helpers) {
            helpers[key] = helpers[key] || Handlebars.helpers[key];
        }
        data = data || {};
        var buffer = "", stack1, self = this;
        function program1(depth0, data) {
            return '\r\n       <div class="right-button-wrap" data-role="menu">\r\n            <a><i class="circle-min"></i><i class="circle-min"></i><i class="circle-min"></i></a>\r\n        </div>\r\n    ';
        }
        function program3(depth0, data) {
            return "\r\n                                查看我的条件\r\n                        ";
        }
        function program5(depth0, data) {
            return '\r\n                        <span class="ui-button-content" data-role="yuepai"><i class="icon icon-yuepai-m"></i> 约拍</span>\r\n                        ';
        }
        function program7(depth0, data) {
            return "page-back";
        }
        function program9(depth0, data) {
            return "msg";
        }
        function program11(depth0, data) {
            return "\r\n                                返回修改\r\n                        ";
        }
        function program13(depth0, data) {
            return '\r\n                        <span class="ui-button-content"><i class="icon icon-siliao-m"></i> 私聊</span>\r\n                        ';
        }
        buffer += '<main role="main" class="model-card">\r\n    <header class="nav-header mine-model-car-header-opacity" data-role="slide-header">\r\n        <div class="left-button-wrap" data-role="page-back">\r\n            <a href="javascript:;"><i class="icon icon-back"></i></a>\r\n        </div>\r\n\r\n        <h3 class="title" data-role="moteka-title"></h3>\r\n\r\n       <div class="right-button-wrap" data-role="menu">\r\n           <a href="javascript:;"><i class="circle-min"></i><i class="circle-min"></i><i class="circle-min"></i></a>\r\n        </div> \r\n    </header>\r\n    <div class="fade-header fn-hide">\r\n        <div class="left-button-wrap" data-role="page-back">\r\n            <a><i class="icon icon-moder-ka-back"></i></a>\r\n        </div>\r\n\r\n';
        stack1 = helpers.unless.call(depth0, depth0 && depth0.is_preview, {
            hash: {},
            inverse: self.noop,
            fn: self.program(1, program1, data),
            data: data
        });
        if (stack1 || stack1 === 0) {
            buffer += stack1;
        }
        buffer += '\r\n    </div>\r\n    <div  data-role="container" class="content-body">\r\n        <div data-role="items-container"></div>\r\n        <footer  class="pop-model-car-confirm" >\r\n            <ul class="list clearfix">\r\n                <li data-role="yuepai">\r\n                    <button class="ui-button ui-button-size-middle ui-button-block ui-button-primary ui-button-size-radius-large auto_width" data-role="yuepai">\r\n                        ';
        stack1 = helpers["if"].call(depth0, depth0 && depth0.is_preview, {
            hash: {},
            inverse: self.program(5, program5, data),
            fn: self.program(3, program3, data),
            data: data
        });
        if (stack1 || stack1 === 0) {
            buffer += stack1;
        }
        buffer += '\r\n                    </button>\r\n                </li>\r\n                <li data-role="';
        stack1 = helpers["if"].call(depth0, depth0 && depth0.is_preview, {
            hash: {},
            inverse: self.program(9, program9, data),
            fn: self.program(7, program7, data),
            data: data
        });
        if (stack1 || stack1 === 0) {
            buffer += stack1;
        }
        buffer += '">\r\n                    <button class="ui-button ui-button-size-middle ui-button-block ui-button-primary ui-button-size-radius-large auto_width">\r\n                        ';
        stack1 = helpers["if"].call(depth0, depth0 && depth0.is_preview, {
            hash: {},
            inverse: self.program(13, program13, data),
            fn: self.program(11, program11, data),
            data: data
        });
        if (stack1 || stack1 === 0) {
            buffer += stack1;
        }
        buffer += '\r\n                    </button>\r\n                </li>\r\n            </ul>\r\n        </footer>\r\n\r\n        <div class="pop-max-dabenxiang" data-role="pop-max-dabenxiang" style="background-image:url(../mobile/images/pop-modelcar-tips.png);background-size:80%;background-repeat:no-repeat;background-position:50%">\r\n            \r\n        </div>\r\n\r\n\r\n    </div>\r\n\r\n\r\n\r\n</main>\r\n\r\n';
        return buffer;
    });
});

define("pai/vwx0.0.1-beta/model_date/model_card/tpl/items-debug.handlebars", [ "utility/handlebars/1.3.0/runtime-debug" ], function(require, exports, module) {
    var Handlebars = require("utility/handlebars/1.3.0/runtime-debug");
    var template = Handlebars.template;
    module.exports = template(function(Handlebars, depth0, helpers, partials, data) {
        this.compilerInfo = [ 4, ">= 1.0.0" ];
        helpers = helpers || {};
        for (var key in Handlebars.helpers) {
            helpers[key] = helpers[key] || Handlebars.helpers[key];
        }
        data = data || {};
        var buffer = "", stack1, helper, functionType = "function", escapeExpression = this.escapeExpression, self = this;
        function program1(depth0, data) {
            return '\r\n            <div class="focus-contain" data-role="focus-contain">\r\n                <div class="add-inside fn-hide" data-role="follow">\r\n                    <i class="icon icon-focus-yes"></i>\r\n                </div>\r\n                <div class="des-inside fn-hide" data-role="unfollow">\r\n                    <i class="icon icon-focus-yes-no"></i>\r\n                </div>\r\n            </div>\r\n            ';
        }
        buffer += '<div  class="model-car-v2">\r\n\r\n    <div data-role="scroll-view-area">\r\n        <div  data-role="container-img-list" class="grid-pic-content">\r\n\r\n        </div>\r\n    </div>\r\n\r\n    <div class="part-two">\r\n        <div class="item">\r\n            <ul class="model-size">\r\n                <li class="icon" data-role="model_data_height">';
        if (helper = helpers.height) {
            stack1 = helper.call(depth0, {
                hash: {},
                data: data
            });
        } else {
            helper = depth0 && depth0.height;
            stack1 = typeof helper === functionType ? helper.call(depth0, {
                hash: {},
                data: data
            }) : helper;
        }
        buffer += escapeExpression(stack1) + 'cm</li>\r\n                <li class="icon" data-role="model_data_weight">';
        if (helper = helpers.weight) {
            stack1 = helper.call(depth0, {
                hash: {},
                data: data
            });
        } else {
            helper = depth0 && depth0.weight;
            stack1 = typeof helper === functionType ? helper.call(depth0, {
                hash: {},
                data: data
            }) : helper;
        }
        buffer += escapeExpression(stack1) + 'kg</li>\r\n                <li class="icon" data-role="model_data_bust">';
        if (helper = helpers.bust) {
            stack1 = helper.call(depth0, {
                hash: {},
                data: data
            });
        } else {
            helper = depth0 && depth0.bust;
            stack1 = typeof helper === functionType ? helper.call(depth0, {
                hash: {},
                data: data
            }) : helper;
        }
        buffer += escapeExpression(stack1) + '</li>\r\n                <li class="icon" data-role="model_data_BWH">';
        if (helper = helpers.BWH) {
            stack1 = helper.call(depth0, {
                hash: {},
                data: data
            });
        } else {
            helper = depth0 && depth0.BWH;
            stack1 = typeof helper === functionType ? helper.call(depth0, {
                hash: {},
                data: data
            }) : helper;
        }
        buffer += escapeExpression(stack1) + '</li>\r\n            </ul>\r\n        </div>\r\n        <div class="item">\r\n            <ul class="info">\r\n                <li>\r\n                    <div class="lbox ">信用等级要求</div>\r\n                    <div class="rbox fldi"><span class="cor-y"><label data-role="cameraman-require">';
        if (helper = helpers.level_require_text) {
            stack1 = helper.call(depth0, {
                hash: {},
                data: data
            });
        } else {
            helper = depth0 && depth0.level_require_text;
            stack1 = typeof helper === functionType ? helper.call(depth0, {
                hash: {},
                data: data
            }) : helper;
        }
        buffer += escapeExpression(stack1) + '</label></span></div>\r\n                </li>\r\n                <li>\r\n                    <div class="lbox ">拍摄人数</div>\r\n                    <div class="rbox fldi">不得超过<span class="cor-y">';
        if (helper = helpers.limit_num) {
            stack1 = helper.call(depth0, {
                hash: {},
                data: data
            });
        } else {
            helper = depth0 && depth0.limit_num;
            stack1 = typeof helper === functionType ? helper.call(depth0, {
                hash: {},
                data: data
            }) : helper;
        }
        buffer += escapeExpression(stack1) + '</span>人</div>\r\n                </li>\r\n                <!--li>\r\n                    <div class="lbox ">拍摄类型</div>\r\n                    <div class="rbox fldi" data-role="model_data_style">';
        if (helper = helpers.model_type_list) {
            stack1 = helper.call(depth0, {
                hash: {},
                data: data
            });
        } else {
            helper = depth0 && depth0.model_type_list;
            stack1 = typeof helper === functionType ? helper.call(depth0, {
                hash: {},
                data: data
            }) : helper;
        }
        buffer += escapeExpression(stack1) + '</div>\r\n                </li-->\r\n            </ul>\r\n        </div>\r\n        <div class="item" data-role="nav-to-comment">\r\n            <ul class="info">\r\n                <i class="icon icon-r-16x26-cur"></i>\r\n                <li>\r\n                    <div class="lbox ">拍片次数</div>\r\n                    <div class="rbox fldi" data-role="model_data_take_photo_times">';
        if (helper = helpers.take_photo_times) {
            stack1 = helper.call(depth0, {
                hash: {},
                data: data
            });
        } else {
            helper = depth0 && depth0.take_photo_times;
            stack1 = typeof helper === functionType ? helper.call(depth0, {
                hash: {},
                data: data
            }) : helper;
        }
        buffer += escapeExpression(stack1) + '</div>\r\n                </li>\r\n                <li>\r\n                    <div class="lbox ">综合评价</div>\r\n                    <div class="rbox fldi">\r\n                        <span data-role="starts"></span>\r\n                        <span class="cor-5" data-role="model_data_score" style="color:#ff9c00">';
        if (helper = helpers.score) {
            stack1 = helper.call(depth0, {
                hash: {},
                data: data
            });
        } else {
            helper = depth0 && depth0.score;
            stack1 = typeof helper === functionType ? helper.call(depth0, {
                hash: {},
                data: data
            }) : helper;
        }
        buffer += escapeExpression(stack1) + '分</span>\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n        <header class="partc">\r\n            <div class="avatar">\r\n                <a data-role="profile">\r\n                    <i class="img avatar-img" data-role="user-img" style="background-image:url(\'';
        if (helper = helpers.user_icon) {
            stack1 = helper.call(depth0, {
                hash: {},
                data: data
            });
        } else {
            helper = depth0 && depth0.user_icon;
            stack1 = typeof helper === functionType ? helper.call(depth0, {
                hash: {},
                data: data
            }) : helper;
        }
        buffer += escapeExpression(stack1) + '\')"></i>\r\n                </a>\r\n            </div>\r\n            <div class="meta-info">\r\n                <h2 class="nickname" data-role="model-info-name">';
        if (helper = helpers.user_name) {
            stack1 = helper.call(depth0, {
                hash: {},
                data: data
            });
        } else {
            helper = depth0 && depth0.user_name;
            stack1 = typeof helper === functionType ? helper.call(depth0, {
                hash: {},
                data: data
            }) : helper;
        }
        buffer += escapeExpression(stack1) + '</h2>\r\n                <p class="user-data">\r\n                    <span class="area" data-role="model-info-city_name" style="color:#786a63">';
        if (helper = helpers.city_name) {
            stack1 = helper.call(depth0, {
                hash: {},
                data: data
            });
        } else {
            helper = depth0 && depth0.city_name;
            stack1 = typeof helper === functionType ? helper.call(depth0, {
                hash: {},
                data: data
            }) : helper;
        }
        buffer += escapeExpression(stack1) + '</span>\r\n                </p>\r\n                <p class="user-data">\r\n                    <span class="model-id" data-role="" >模特ID：';
        if (helper = helpers.user_id) {
            stack1 = helper.call(depth0, {
                hash: {},
                data: data
            });
        } else {
            helper = depth0 && depth0.user_id;
            stack1 = typeof helper === functionType ? helper.call(depth0, {
                hash: {},
                data: data
            }) : helper;
        }
        buffer += escapeExpression(stack1) + '</span>\r\n                </p>\r\n                <p class="action">\r\n\r\n                </p>\r\n            </div>\r\n            ';
        stack1 = helpers.unless.call(depth0, depth0 && depth0.is_preview, {
            hash: {},
            inverse: self.noop,
            fn: self.program(1, program1, data),
            data: data
        });
        if (stack1 || stack1 === 0) {
            buffer += stack1;
        }
        buffer += '\r\n        </header>\r\n\r\n        <section class="score-info">\r\n            <a data-role="go_fans"><em data-role="be_follow_count">';
        if (helper = helpers.be_follow_count) {
            stack1 = helper.call(depth0, {
                hash: {},
                data: data
            });
        } else {
            helper = depth0 && depth0.be_follow_count;
            stack1 = typeof helper === functionType ? helper.call(depth0, {
                hash: {},
                data: data
            }) : helper;
        }
        buffer += escapeExpression(stack1) + '</em>粉丝</a>\r\n            <a><em data-role="level">';
        if (helper = helpers.level) {
            stack1 = helper.call(depth0, {
                hash: {},
                data: data
            });
        } else {
            helper = depth0 && depth0.level;
            stack1 = typeof helper === functionType ? helper.call(depth0, {
                hash: {},
                data: data
            }) : helper;
        }
        buffer += escapeExpression(stack1) + '</em>级别</a>\r\n            <a><em data-role="jifen">';
        if (helper = helpers.jifen) {
            stack1 = helper.call(depth0, {
                hash: {},
                data: data
            });
        } else {
            helper = depth0 && depth0.jifen;
            stack1 = typeof helper === functionType ? helper.call(depth0, {
                hash: {},
                data: data
            }) : helper;
        }
        buffer += escapeExpression(stack1) + "</em>魅力指数</a>\r\n        </section>\r\n    </div>\r\n</div>\r\n";
        return buffer;
    });
});

define("pai/vwx0.0.1-beta/model_date/model_card/tpl/starts-debug.handlebars", [ "utility/handlebars/1.3.0/runtime-debug" ], function(require, exports, module) {
    var Handlebars = require("utility/handlebars/1.3.0/runtime-debug");
    var template = Handlebars.template;
    module.exports = template(function(Handlebars, depth0, helpers, partials, data) {
        this.compilerInfo = [ 4, ">= 1.0.0" ];
        helpers = helpers || {};
        for (var key in Handlebars.helpers) {
            helpers[key] = helpers[key] || Handlebars.helpers[key];
        }
        data = data || {};
        var stack1, self = this;
        function program1(depth0, data) {
            var buffer = "", stack1;
            buffer += "\r\n    ";
            stack1 = helpers["if"].call(depth0, depth0 && depth0.is_red, {
                hash: {},
                inverse: self.program(4, program4, data),
                fn: self.program(2, program2, data),
                data: data
            });
            if (stack1 || stack1 === 0) {
                buffer += stack1;
            }
            buffer += "\r\n";
            return buffer;
        }
        function program2(depth0, data) {
            return '\r\n        <i class="icon icon-stat-s-y"></i>\r\n    ';
        }
        function program4(depth0, data) {
            return '\r\n        <i class="icon icon-start-m-1"></i>\r\n    ';
        }
        stack1 = helpers.each.call(depth0, depth0 && depth0.data, {
            hash: {},
            inverse: self.noop,
            fn: self.program(1, program1, data),
            data: data
        });
        if (stack1 || stack1 === 0) {
            return stack1;
        } else {
            return "";
        }
    });
});

define("pai/vwx0.0.1-beta/widget/slide_v2/tpl/slide-debug.handlebars", [ "utility/handlebars/1.3.0/runtime-debug" ], function(require, exports, module) {
    var Handlebars = require("utility/handlebars/1.3.0/runtime-debug");
    var template = Handlebars.template;
    module.exports = template(function(Handlebars, depth0, helpers, partials, data) {
        this.compilerInfo = [ 4, ">= 1.0.0" ];
        helpers = helpers || {};
        for (var key in Handlebars.helpers) {
            helpers[key] = helpers[key] || Handlebars.helpers[key];
        }
        data = data || {};
        var buffer = "", stack1, helper, functionType = "function", escapeExpression = this.escapeExpression, self = this;
        function program1(depth0, data) {
            var buffer = "", stack1, helper;
            buffer += '\r\n            <div class="swiper-slide"> ';
            if (helper = helpers.content) {
                stack1 = helper.call(depth0, {
                    hash: {},
                    data: data
                });
            } else {
                helper = depth0 && depth0.content;
                stack1 = typeof helper === functionType ? helper.call(depth0, {
                    hash: {},
                    data: data
                }) : helper;
            }
            if (stack1 || stack1 === 0) {
                buffer += stack1;
            }
            buffer += "</div>\r\n        ";
            return buffer;
        }
        function program3(depth0, data) {
            return "fn-hide";
        }
        function program5(depth0, data) {
            return '\r\n        <span class="swiper-pagination-switch"></span>\r\n    ';
        }
        buffer += '<div class="scroll-area swiper-wrapper" data-role="ad-pic" data-prevent-scroll="slider" style="height: ';
        if (helper = helpers.height) {
            stack1 = helper.call(depth0, {
                hash: {},
                data: data
            });
        } else {
            helper = depth0 && depth0.height;
            stack1 = typeof helper === functionType ? helper.call(depth0, {
                hash: {},
                data: data
            }) : helper;
        }
        buffer += escapeExpression(stack1) + 'px">\r\n        ';
        stack1 = helpers.each.call(depth0, depth0 && depth0.contents, {
            hash: {},
            inverse: self.noop,
            fn: self.program(1, program1, data),
            data: data
        });
        if (stack1 || stack1 === 0) {
            buffer += stack1;
        }
        buffer += '\r\n</div>\r\n\r\n<div data-role="ad-pics-num" class="ad-pic-point-out ';
        stack1 = helpers.unless.call(depth0, depth0 && depth0.no_single, {
            hash: {},
            inverse: self.noop,
            fn: self.program(3, program3, data),
            data: data
        });
        if (stack1 || stack1 === 0) {
            buffer += stack1;
        }
        buffer += '" >\r\n    ';
        stack1 = helpers.each.call(depth0, depth0 && depth0.contents, {
            hash: {},
            inverse: self.noop,
            fn: self.program(5, program5, data),
            data: data
        });
        if (stack1 || stack1 === 0) {
            buffer += stack1;
        }
        buffer += "\r\n\r\n</div>\r\n";
        return buffer;
    });
});

/**
 * 模特卡列表
 */
define("pai/vwx0.0.1-beta/widget/model_pic/view-debug", [ "$-debug", "pai/vwx0.0.1-beta/frame/page_control-debug", "utility/backbone/1.1.2/backbone-debug", "pai/vwx0.0.1-beta/frame/ua-debug", "pai/vwx0.0.1-beta/frame/page-debug", "utility/zepto/modules/data/1.1.4/data-debug", "utility/hammer/plugins/jquery.hammer/1.1.3/jquery.hammer-debug", "utility/underscore/1.6.0/underscore-debug", "pai/vwx0.0.1-beta/common/view-debug", "utility/handlebars/1.3.0/runtime-debug", "pai/vwx0.0.1-beta/common/utility-debug", "pai/vwx0.0.1-beta/common/cross_domain_storage-debug", "matcha/cookie/1.0.0/cookie-debug", "pai/vwx0.0.1-beta/common/template-helpers-debug" ], function(require, exports, module) {
    var $ = require("$-debug");
    var page_control = require("pai/vwx0.0.1-beta/frame/page_control-debug");
    var View = require("pai/vwx0.0.1-beta/common/view-debug");
    var utility = require("pai/vwx0.0.1-beta/common/utility-debug");
    var templateHelpers = require("pai/vwx0.0.1-beta/common/template-helpers-debug");
    var item_tpl = require("pai/vwx0.0.1-beta/widget/model_pic/tpl/item-debug.handlebars");
    var view_width = utility.get_view_port_width();
    module.exports = View.extend({
        attrs: {
            template: item_tpl
        },
        events: {},
        _parseElement: function() {
            var self = this;
            var template_model = self.get("templateModel");
            var custom_model = [];
            var img_list = [];
            var tpl_type = template_model.tpl_type;
            switch (tpl_type) {
              /**
                 * 单独出图
                 */
                case "one":
                for (var i = 0, len = template_model.tpl_data.length; i < len; i++) {
                    var temp = template_model.tpl_data[i];
                    var size = self._get_size_by_type(temp.type);
                    temp.width = size.width;
                    temp.height = size.height;
                    temp.no_use_lazyload = self.get("no_use_lazyload") || 0;
                    if ((i - 1) % 3 == 0) {
                        temp.mid_class = "mid";
                    }
                    img_list.push(temp);
                }
                custom_model.push({
                    img_list: img_list
                });
                break;

              /**
                 *  分组出图 （标题+组图）
                 */
                case "group":
                for (var j = 0; j < template_model.tpl_data.length; j++) {
                    var temp_img_list = template_model.tpl_data[j].list;
                    var temp_title = template_model.tpl_data[j].title;
                    for (var i = 0, len = temp_img_list.length; i < len; i++) {
                        var temp = temp_img_list[i];
                        var size = self._get_size_by_type(temp.type);
                        temp.width = size.width;
                        temp.height = size.height;
                        temp.no_use_lazyload = self.get("no_use_lazyload") || 0;
                        if ((i - 1) % 3 == 0) {
                            temp.mid_class = "mid";
                        }
                        img_list.push(temp);
                    }
                    custom_model.push({
                        img_list: temp_img_list,
                        title: temp_title
                    });
                }
                break;

              case "1l2r":
                for (var i = 0, len = template_model.tpl_data.length; i < len; i++) {
                    var temp = template_model.tpl_data[i];
                    var size = self._get_size_by_type(temp.type);
                    temp.width = size.width;
                    temp.height = size.height;
                    temp.no_use_lazyload = self.get("no_use_lazyload") || 0;
                    if ((i + 3) % 3 == 0) {
                        temp.mid_class = "right";
                    }
                    if ((i - 1) % 3 == 0) {
                        temp.mid_class = "bottom";
                    }
                    img_list.push(temp);
                }
                custom_model.push({
                    img_list: img_list
                });
                break;

              case "1l1m1r":
                for (var i = 0, len = template_model.tpl_data.length; i < len; i++) {
                    var temp = template_model.tpl_data[i];
                    var size = self._get_size_by_type(temp.type);
                    temp.width = size.width;
                    temp.height = size.height;
                    temp.no_use_lazyload = self.get("no_use_lazyload") || 0;
                    if ((i - 1) % 3 == 0) {
                        temp.mid_class = "mid-l-r-b";
                    } else {
                        temp.mid_class = "bottom";
                    }
                    img_list.push(temp);
                }
                custom_model.push({
                    img_list: img_list
                });
                break;

              case "1double_others_one":
                for (var i = 0, len = template_model.tpl_data.length; i < len; i++) {
                    var temp = template_model.tpl_data[i];
                    var size = self._get_size_by_type(temp.type);
                    temp.width = size.width;
                    temp.height = size.height;
                    temp.no_use_lazyload = self.get("no_use_lazyload") || 0;
                    if (len == 3) {
                        if ((i + 3) % 3 == 0) {
                            temp.mid_class = "right";
                        }
                        if ((i - 1) % 3 == 0) {
                            temp.mid_class = "bottom";
                        }
                    } else {
                        if ((i - 1) % 3 == 0) {
                            temp.mid_class = "mid";
                        } else {
                            temp.mid_class = "bottom";
                        }
                    }
                    img_list.push(temp);
                }
                custom_model.push({
                    img_list: img_list
                });
                break;
            }
            self.set("templateModel", {
                custom_model: custom_model
            });
            View.prototype._parseElement.apply(self);
        },
        _setup_events: function() {},
        _get_size_by_type: function(type) {
            return utility.get_grid_size(type);
        },
        setup: function() {},
        list: function() {
            var self = this;
            return self.$el;
        }
    });
});

define("pai/vwx0.0.1-beta/widget/model_pic/tpl/item-debug.handlebars", [ "utility/handlebars/1.3.0/runtime-debug" ], function(require, exports, module) {
    var Handlebars = require("utility/handlebars/1.3.0/runtime-debug");
    var template = Handlebars.template;
    module.exports = template(function(Handlebars, depth0, helpers, partials, data) {
        this.compilerInfo = [ 4, ">= 1.0.0" ];
        helpers = helpers || {};
        for (var key in Handlebars.helpers) {
            helpers[key] = helpers[key] || Handlebars.helpers[key];
        }
        data = data || {};
        var buffer = "", stack1, functionType = "function", escapeExpression = this.escapeExpression, self = this;
        function program1(depth0, data) {
            var buffer = "", stack1;
            buffer += "\r\n";
            stack1 = helpers["if"].call(depth0, depth0 && depth0.title, {
                hash: {},
                inverse: self.noop,
                fn: self.program(2, program2, data),
                data: data
            });
            if (stack1 || stack1 === 0) {
                buffer += stack1;
            }
            buffer += "\r\n";
            stack1 = helpers.each.call(depth0, depth0 && depth0.img_list, {
                hash: {},
                inverse: self.noop,
                fn: self.program(4, program4, data),
                data: data
            });
            if (stack1 || stack1 === 0) {
                buffer += stack1;
            }
            buffer += "\r\n";
            return buffer;
        }
        function program2(depth0, data) {
            var buffer = "", stack1, helper;
            buffer += '<p class="grid-title" data-role="japan">#';
            if (helper = helpers.title) {
                stack1 = helper.call(depth0, {
                    hash: {},
                    data: data
                });
            } else {
                helper = depth0 && depth0.title;
                stack1 = typeof helper === functionType ? helper.call(depth0, {
                    hash: {},
                    data: data
                }) : helper;
            }
            buffer += escapeExpression(stack1) + "</p>";
            return buffer;
        }
        function program4(depth0, data) {
            var buffer = "", stack1, helper;
            buffer += '<div data-alumn-img="';
            if (helper = helpers.big_user_icon) {
                stack1 = helper.call(depth0, {
                    hash: {},
                    data: data
                });
            } else {
                helper = depth0 && depth0.big_user_icon;
                stack1 = typeof helper === functionType ? helper.call(depth0, {
                    hash: {},
                    data: data
                }) : helper;
            }
            buffer += escapeExpression(stack1) + '" data-user-role="';
            if (helper = helpers.role) {
                stack1 = helper.call(depth0, {
                    hash: {},
                    data: data
                });
            } else {
                helper = depth0 && depth0.role;
                stack1 = typeof helper === functionType ? helper.call(depth0, {
                    hash: {},
                    data: data
                }) : helper;
            }
            buffer += escapeExpression(stack1) + '" class="grid-pic ';
            if (helper = helpers.mid_class) {
                stack1 = helper.call(depth0, {
                    hash: {},
                    data: data
                });
            } else {
                helper = depth0 && depth0.mid_class;
                stack1 = typeof helper === functionType ? helper.call(depth0, {
                    hash: {},
                    data: data
                }) : helper;
            }
            buffer += escapeExpression(stack1) + '" data-user-id="';
            if (helper = helpers.user_id) {
                stack1 = helper.call(depth0, {
                    hash: {},
                    data: data
                });
            } else {
                helper = depth0 && depth0.user_id;
                stack1 = typeof helper === functionType ? helper.call(depth0, {
                    hash: {},
                    data: data
                }) : helper;
            }
            buffer += escapeExpression(stack1) + '" data-role="grid-pic-container" style="width:';
            if (helper = helpers.width) {
                stack1 = helper.call(depth0, {
                    hash: {},
                    data: data
                });
            } else {
                helper = depth0 && depth0.width;
                stack1 = typeof helper === functionType ? helper.call(depth0, {
                    hash: {},
                    data: data
                }) : helper;
            }
            buffer += escapeExpression(stack1) + "px;height:";
            if (helper = helpers.height) {
                stack1 = helper.call(depth0, {
                    hash: {},
                    data: data
                });
            } else {
                helper = depth0 && depth0.height;
                stack1 = typeof helper === functionType ? helper.call(depth0, {
                    hash: {},
                    data: data
                }) : helper;
            }
            buffer += escapeExpression(stack1) + 'px;"> <i class="img image-img ';
            stack1 = helpers["if"].call(depth0, depth0 && depth0.no_use_lazyload, {
                hash: {},
                inverse: self.noop,
                fn: self.program(5, program5, data),
                data: data
            });
            if (stack1 || stack1 === 0) {
                buffer += stack1;
            }
            buffer += '" ';
            stack1 = helpers["if"].call(depth0, depth0 && depth0.no_use_lazyload, {
                hash: {},
                inverse: self.program(9, program9, data),
                fn: self.program(7, program7, data),
                data: data
            });
            if (stack1 || stack1 === 0) {
                buffer += stack1;
            }
            buffer += "  ></i></div><!---->";
            return buffer;
        }
        function program5(depth0, data) {
            return "loaded";
        }
        function program7(depth0, data) {
            var buffer = "", stack1, helper;
            buffer += "style=\"background-image: url('";
            if (helper = helpers.user_icon) {
                stack1 = helper.call(depth0, {
                    hash: {},
                    data: data
                });
            } else {
                helper = depth0 && depth0.user_icon;
                stack1 = typeof helper === functionType ? helper.call(depth0, {
                    hash: {},
                    data: data
                }) : helper;
            }
            buffer += escapeExpression(stack1) + "');text-align: center;\"";
            return buffer;
        }
        function program9(depth0, data) {
            var buffer = "", stack1, helper;
            buffer += ' data-is-lazyload data-lazyload="';
            if (helper = helpers.user_icon) {
                stack1 = helper.call(depth0, {
                    hash: {},
                    data: data
                });
            } else {
                helper = depth0 && depth0.user_icon;
                stack1 = typeof helper === functionType ? helper.call(depth0, {
                    hash: {},
                    data: data
                }) : helper;
            }
            buffer += escapeExpression(stack1) + '"';
            return buffer;
        }
        stack1 = helpers.each.call(depth0, depth0 && depth0.custom_model, {
            hash: {},
            inverse: self.noop,
            fn: self.program(1, program1, data),
            data: data
        });
        if (stack1 || stack1 === 0) {
            buffer += stack1;
        }
        buffer += "\r\n\r\n";
        return buffer;
    });
});

/**
 *  个人空间Popup
 */
define("pai/vwx0.0.1-beta/ui/mine-popup/index-debug", [ "pai/vwx0.0.1-beta/ui/popup/index-debug", "$-debug", "pai/vwx0.0.1-beta/frame/ua-debug", "pai/vwx0.0.1-beta/common/view-debug", "utility/backbone/1.1.2/backbone-debug", "utility/handlebars/1.3.0/runtime-debug", "pai/vwx0.0.1-beta/common/template-helpers-debug", "pai/vwx0.0.1-beta/common/utility-debug", "pai/vwx0.0.1-beta/common/cross_domain_storage-debug", "matcha/cookie/1.0.0/cookie-debug", "utility/underscore/1.6.0/underscore-debug", "pai/vwx0.0.1-beta/frame/page_control-debug", "pai/vwx0.0.1-beta/frame/page-debug", "utility/zepto/modules/data/1.1.4/data-debug", "utility/hammer/plugins/jquery.hammer/1.1.3/jquery.hammer-debug" ], function(require, exports, module) {
    var Popup = require("pai/vwx0.0.1-beta/ui/popup/index-debug");
    var page_control = require("pai/vwx0.0.1-beta/frame/page_control-debug");
    var mainTpl = require("pai/vwx0.0.1-beta/ui/mine-popup/mine-popup-debug.handlebars");
    var mine_Popup = Popup.extend({
        setup: function() {
            var self = this;
            var items = self.get("items") || {
                edit: true,
                report: false
            };
            console.log();
            self.setContent(mainTpl({
                uid: self.get("uid"),
                items: items
            })).$el.addClass("mine-popup").on("tap", "[data-role=navigate]", function(event) {
                var $target = $(event.currentTarget);
                var appTarget = $target.attr("data-target");
                self.hide();
                switch (appTarget) {
                  case "edit":
                    console.log(self.model);
                    page_control.navigate_to_page("mine/profile");
                    //page_control.navigate_to_page('model_date/model_card/edit_condition', {model_info:self.model});
                    break;

                  case "setting":
                    //page_control.navigate_to_page('model_date/model_card/edit_condition');
                    break;

                  case "about":
                    //page_control.navigate_to_page('model_date/model_card/edit_condition');
                    break;

                  case "report":
                    page_control.navigate_to_page("report/" + self.get("report_model_id"));
                    break;
                }
            });
            Popup.prototype.setup.call(self);
        },
        set_config: function(options) {
            var self = this;
            return self;
        }
    });
    module.exports = mine_Popup;
});

define("pai/vwx0.0.1-beta/ui/popup/index-debug", [ "$-debug", "pai/vwx0.0.1-beta/frame/ua-debug", "pai/vwx0.0.1-beta/common/view-debug", "utility/backbone/1.1.2/backbone-debug", "utility/handlebars/1.3.0/runtime-debug", "pai/vwx0.0.1-beta/common/template-helpers-debug", "pai/vwx0.0.1-beta/common/utility-debug", "pai/vwx0.0.1-beta/common/cross_domain_storage-debug", "matcha/cookie/1.0.0/cookie-debug", "utility/underscore/1.6.0/underscore-debug" ], function(require, exports, module) {
    var $ = require("$-debug");
    var UA = require("pai/vwx0.0.1-beta/frame/ua-debug");
    var View = require("pai/vwx0.0.1-beta/common/view-debug");
    var templateHelpers = require("pai/vwx0.0.1-beta/common/template-helpers-debug");
    var popupTpl = require("pai/vwx0.0.1-beta/ui/popup/popup-debug.handlebars");
    var Popup = View.extend({
        attrs: {
            style: null,
            content: "",
            start: "bottom",
            closeButton: true,
            template: popupTpl
        },
        templateHelpers: {
            formatString: templateHelpers.formatString
        },
        events: {
            tap: function(event) {
                var self = this;
                if (!event.target.getAttribute("data-role") && event.currentTarget === event.target) {
                    setTimeout(function() {
                        self.hide();
                    }, 100);
                }
            },
            webkitAnimationEnd: "_animationEnd",
            animationend: "_animationEnd",
            "tap [data-role=close-button]": "hide"
        },
        /**
         * 构建element
         * @private
         */
        _parseElement: function() {
            var self = this;
            self.set("templateModel", {
                content: self.get("content"),
                closeButton: self.get("closeButton"),
                start: self.get("start")
            });
            View.prototype._parseElement.apply(self);
            self.$container = self.$("[data-role=container]");
            self.$content = self.$("[data-role=content]");
            var style = self.get("style");
            style && self.$container.css(style);
        },
        _animationEnd: function(event) {
            var self = this;
            var animationName = event.animationName;
            var start = self.get("start");
            if (animationName === "popup-" + start + "-slidedown" || animationName === "popup-" + start + "-slideup") {
                if (!self._visible) {
                    self.$el.addClass("fn-hide").removeClass(start + "-slideup-pin " + start + "-slidedown");
                } else if (self._visible) {
                    self.$el.addClass(start + "-slideup-pin").removeClass(start + "-slideup");
                }
                self._animationRunning = false;
                self.trigger("animationEnd", event);
            }
        },
        setup: function() {
            var self = this;
            self._animationRunning = false;
            View.prototype.setup.call(self);
        },
        setContent: function(str) {
            var self = this;
            self.$content.html(str);
            return self;
        },
        show: function() {
            var self = this;
            if (self._animationRunning) {
                return;
            }
            if (!self.rendered) {
                self.render();
            }
            self._visible = true;
            if (UA.isAndroid) {
                self.$el.addClass(self.get("start") + "-slideup-pin").removeClass("fn-hide");
                self.trigger("change", self._visible);
            } else {
                setTimeout(function() {
                    self._animationRunning = true;
                    self.$el.removeClass("fn-hide").addClass(self.get("start") + "-slideup");
                    self.trigger("change", self._visible);
                }, 0);
            }
            return self;
        },
        hide: function() {
            var self = this;
            if (self._animationRunning) {
                return;
            }
            self._visible = false;
            if (UA.isAndroid) {
                self.$el.addClass("fn-hide");
                self.trigger("change", self._visible);
            } else {
                setTimeout(function() {
                    self._animationRunning = true;
                    self.$el.addClass(self.get("start") + "-slidedown");
                    self.trigger("change", self._visible);
                }, 0);
            }
            return self;
        },
        toggle: function() {
            var self = this;
            self._visible ? self.hide() : self.show();
            return self;
        },
        destroy: function() {
            var self = this;
            self.remove();
            View.prototype.destroy.apply(self);
            return self;
        }
    });
    module.exports = Popup;
});

define("pai/vwx0.0.1-beta/ui/popup/popup-debug.handlebars", [ "utility/handlebars/1.3.0/runtime-debug" ], function(require, exports, module) {
    var Handlebars = require("utility/handlebars/1.3.0/runtime-debug");
    var template = Handlebars.template;
    module.exports = template(function(Handlebars, depth0, helpers, partials, data) {
        this.compilerInfo = [ 4, ">= 1.0.0" ];
        helpers = helpers || {};
        for (var key in Handlebars.helpers) {
            helpers[key] = helpers[key] || Handlebars.helpers[key];
        }
        data = data || {};
        var buffer = "", stack1, helper, options, functionType = "function", escapeExpression = this.escapeExpression, self = this, helperMissing = helpers.helperMissing;
        function program1(depth0, data) {
            var buffer = "", stack1, helper;
            buffer += " ui-popup-start-";
            if (helper = helpers.start) {
                stack1 = helper.call(depth0, {
                    hash: {},
                    data: data
                });
            } else {
                helper = depth0 && depth0.start;
                stack1 = typeof helper === functionType ? helper.call(depth0, {
                    hash: {},
                    data: data
                }) : helper;
            }
            buffer += escapeExpression(stack1);
            return buffer;
        }
        function program3(depth0, data) {
            return '\n        <footer class="ui-popup-footer" data-role="footer">\n            <button data-role="close-button">取消</button>\n        </footer>\n        ';
        }
        buffer += '<div class="ui-popup';
        stack1 = helpers["if"].call(depth0, depth0 && depth0.start, {
            hash: {},
            inverse: self.noop,
            fn: self.program(1, program1, data),
            data: data
        });
        if (stack1 || stack1 === 0) {
            buffer += stack1;
        }
        buffer += '">\n    <div class="ui-popup-container" data-role="container">\n        <div class="ui-popup-content" data-role="content">\n            ' + escapeExpression((helper = helpers.formatString || depth0 && depth0.formatString, 
        options = {
            hash: {},
            data: data
        }, helper ? helper.call(depth0, depth0 && depth0.content, options) : helperMissing.call(depth0, "formatString", depth0 && depth0.content, options))) + "\n        </div>\n\n        ";
        stack1 = helpers["if"].call(depth0, depth0 && depth0.closeButton, {
            hash: {},
            inverse: self.noop,
            fn: self.program(3, program3, data),
            data: data
        });
        if (stack1 || stack1 === 0) {
            buffer += stack1;
        }
        buffer += "\n    </div>\n</div>";
        return buffer;
    });
});

define("pai/vwx0.0.1-beta/ui/mine-popup/mine-popup-debug.handlebars", [ "utility/handlebars/1.3.0/runtime-debug" ], function(require, exports, module) {
    var Handlebars = require("utility/handlebars/1.3.0/runtime-debug");
    var template = Handlebars.template;
    module.exports = template(function(Handlebars, depth0, helpers, partials, data) {
        this.compilerInfo = [ 4, ">= 1.0.0" ];
        helpers = helpers || {};
        for (var key in Handlebars.helpers) {
            helpers[key] = helpers[key] || Handlebars.helpers[key];
        }
        data = data || {};
        var buffer = "", stack1, functionType = "function", escapeExpression = this.escapeExpression, self = this;
        function program1(depth0, data) {
            var buffer = "", stack1, helper;
            buffer += '<a data-role="navigate"  data-target="edit" data-uid=';
            if (helper = helpers.uid) {
                stack1 = helper.call(depth0, {
                    hash: {},
                    data: data
                });
            } else {
                helper = depth0 && depth0.uid;
                stack1 = typeof helper === functionType ? helper.call(depth0, {
                    hash: {},
                    data: data
                }) : helper;
            }
            buffer += escapeExpression(stack1) + ">编辑个人资料</a>";
            return buffer;
        }
        function program3(depth0, data) {
            return '<a data-role="navigate"  data-target="report">举报</a>';
        }
        stack1 = helpers["if"].call(depth0, (stack1 = depth0 && depth0.items, stack1 == null || stack1 === false ? stack1 : stack1.edit), {
            hash: {},
            inverse: self.noop,
            fn: self.program(1, program1, data),
            data: data
        });
        if (stack1 || stack1 === 0) {
            buffer += stack1;
        }
        buffer += "\n";
        stack1 = helpers["if"].call(depth0, (stack1 = depth0 && depth0.items, stack1 == null || stack1 === false ? stack1 : stack1.report), {
            hash: {},
            inverse: self.noop,
            fn: self.program(3, program3, data),
            data: data
        });
        if (stack1 || stack1 === 0) {
            buffer += stack1;
        }
        buffer += '\n<!--<a data-role="navigate" data-target="setting">设置</a>-->\n<!--<a data-role="navigate" data-target="about">关于</a>-->';
        return buffer;
    });
});

define("pai/vwx0.0.1-beta/ui/dialog/index-debug", [ "$-debug", "pai/vwx0.0.1-beta/common/view-debug", "utility/backbone/1.1.2/backbone-debug", "utility/handlebars/1.3.0/runtime-debug", "pai/vwx0.0.1-beta/common/template-helpers-debug", "pai/vwx0.0.1-beta/common/utility-debug", "pai/vwx0.0.1-beta/common/cross_domain_storage-debug", "matcha/cookie/1.0.0/cookie-debug", "utility/underscore/1.6.0/underscore-debug", "pai/vwx0.0.1-beta/frame/ua-debug" ], function(require, exports, module) {
    var $ = require("$-debug");
    var View = require("pai/vwx0.0.1-beta/common/view-debug");
    var templateHelpers = require("pai/vwx0.0.1-beta/common/template-helpers-debug");
    var dialogTpl = require("pai/vwx0.0.1-beta/ui/dialog/dialog-debug.handlebars");
    var Dialog = View.extend({
        attrs: {
            content: "",
            style: null,
            buttons: [],
            hasMask: true,
            template: dialogTpl
        },
        templateHelpers: {
            formatString: templateHelpers.formatString
        },
        events: {
            "tap [data-role=button]": "_buttons",
            "tap [data-role=close]": "_close_this_view"
        },
        _buttons: function(event) {
            var self = this;
            var $target = $(event.currentTarget);
            var buttonName = $target.attr("data-name");
            self.trigger("tap:button:" + buttonName, $target, event);
            self.trigger("tap:button", $target, event);
        },
        /**
         * 构建element
         * @private
         */
        _parseElement: function() {
            var self = this;
            var buttons = self.get("buttons");
            self.set("templateModel", {
                content: self.get("content"),
                hasMask: self.get("hasMask"),
                hasButtons: $.isArray(buttons) && buttons.length,
                buttons: buttons
            });
            View.prototype._parseElement.apply(self);
            self.$container = self.$("[data-role=container]");
            self.$content = self.$("[data-role=content]");
            self.$footer = self.$("[data-role=footer]");
            var style = self.get("style");
            style && self.$container.css(style);
        },
        /**
         * 隐藏按钮区域
         * @returns {Dialog}
         */
        hideButtons: function() {
            var self = this;
            if (self.$footer) {
                self.$footer.remove();
                self.$footer = null;
            }
            return self;
        },
        setContent: function(str) {
            var self = this;
            self.$content.html(str);
            self.trigger("change:content", str);
            return self;
        },
        /**
         * 显示
         * @returns {Dialog}
         */
        show: function() {
            var self = this;
            if (self.trigger("before:show") === false) {
                return self;
            }
            if (!self.rendered) {
                self.render();
            }
            self.$el.removeClass("fn-hide");
            self.trigger("after:show");
            return self;
        },
        /**
         * 隐藏
         * @returns {Dialog}
         */
        hide: function() {
            var self = this;
            if (self.trigger("before:hide") === false) {
                return self;
            }
            self._visible = false;
            self.$el.addClass("fn-hide");
            self.trigger("after:hide");
            return self;
        },
        /**
         * 销毁
         * @returns {Dialog}
         */
        destroy: function() {
            var self = this;
            View.prototype.remove.call(self);
            View.prototype.destroy.call(self);
            return self;
        },
        _close_this_view: function() {
            var self = this;
            //self.hide().destroy();
            self.hide();
        }
    });
    module.exports = Dialog;
});

define("pai/vwx0.0.1-beta/ui/dialog/dialog-debug.handlebars", [ "utility/handlebars/1.3.0/runtime-debug" ], function(require, exports, module) {
    var Handlebars = require("utility/handlebars/1.3.0/runtime-debug");
    var template = Handlebars.template;
    module.exports = template(function(Handlebars, depth0, helpers, partials, data) {
        this.compilerInfo = [ 4, ">= 1.0.0" ];
        helpers = helpers || {};
        for (var key in Handlebars.helpers) {
            helpers[key] = helpers[key] || Handlebars.helpers[key];
        }
        data = data || {};
        var buffer = "", stack1, helper, options, functionType = "function", escapeExpression = this.escapeExpression, self = this, helperMissing = helpers.helperMissing;
        function program1(depth0, data) {
            return '<div class="ui-mask" data-role="close"></div>';
        }
        function program3(depth0, data) {
            var buffer = "", stack1;
            buffer += '\n            <footer class="ui-dialog-footer" data-role="footer">\n                ';
            stack1 = helpers.each.call(depth0, depth0 && depth0.buttons, {
                hash: {},
                inverse: self.noop,
                fn: self.program(4, program4, data),
                data: data
            });
            if (stack1 || stack1 === 0) {
                buffer += stack1;
            }
            buffer += "\n            </footer>\n            ";
            return buffer;
        }
        function program4(depth0, data) {
            var buffer = "", stack1, helper;
            buffer += '\n                <button class="ui-dialog-button" data-role="button" data-name="';
            if (helper = helpers.name) {
                stack1 = helper.call(depth0, {
                    hash: {},
                    data: data
                });
            } else {
                helper = depth0 && depth0.name;
                stack1 = typeof helper === functionType ? helper.call(depth0, {
                    hash: {},
                    data: data
                }) : helper;
            }
            buffer += escapeExpression(stack1) + '">';
            if (helper = helpers.text) {
                stack1 = helper.call(depth0, {
                    hash: {},
                    data: data
                });
            } else {
                helper = depth0 && depth0.text;
                stack1 = typeof helper === functionType ? helper.call(depth0, {
                    hash: {},
                    data: data
                }) : helper;
            }
            buffer += escapeExpression(stack1) + "</button>\n                ";
            return buffer;
        }
        buffer += '<div class="ui-dialog">\n    ';
        stack1 = helpers["if"].call(depth0, depth0 && depth0.hasMask, {
            hash: {},
            inverse: self.noop,
            fn: self.program(1, program1, data),
            data: data
        });
        if (stack1 || stack1 === 0) {
            buffer += stack1;
        }
        buffer += '\n    <div class="ui-dialog-container-out">\n        <div class="ui-dialog-container" data-role="container">\n            <div class="ui-dialog-content" data-role="content">' + escapeExpression((helper = helpers.formatString || depth0 && depth0.formatString, 
        options = {
            hash: {},
            data: data
        }, helper ? helper.call(depth0, depth0 && depth0.content, options) : helperMissing.call(depth0, "formatString", depth0 && depth0.content, options))) + "</div>\n\n            ";
        stack1 = helpers["if"].call(depth0, depth0 && depth0.hasButtons, {
            hash: {},
            inverse: self.noop,
            fn: self.program(3, program3, data),
            data: data
        });
        if (stack1 || stack1 === 0) {
            buffer += stack1;
        }
        buffer += "\n        </div>\n    </div>\n</div>";
        return buffer;
    });
});

/**
 * 模特卡 模型
 * 汤圆 2014.8.21
 */
define("pai/vwx0.0.1-beta/model_date/model_card/model-debug", [ "pai/vwx0.0.1-beta/common/global_config-debug", "utility/backbone/1.1.2/backbone-debug" ], function(require, exports, module) {
    var global_config = require("pai/vwx0.0.1-beta/common/global_config-debug");
    var Backbone = require("utility/backbone/1.1.2/backbone-debug");
    module.exports = Backbone.Model.extend({
        idAttribute: "user_id",
        url: global_config.ajax_url.model_card,
        "default": {
            user_id: "",
            chest: "",
            cup: "",
            waist: "",
            hip: "",
            height: "",
            weight: "",
            intro: "",
            honor: "",
            cameraman_require: "",
            location_id: "",
            city_name: "",
            user_name: "",
            score: 0,
            stars: 0,
            take_photo_times: 0,
            user_icon: "",
            model_pic: [],
            model_type: [],
            model_style: []
        },
        /**
         * 安装事件
         * @private
         */
        _setup_events: function() {
            var self = this;
            self.on("before:fetch", function(xhr, xhrOptions) {
                self._get_info_xhr = xhr;
            }).on("success:fetch", function(xhr, xhrOptions) {}).on("complete:fetch", function(xhr, status) {
                delete self._get_info_xhr;
            });
        },
        /**
         * 转换数据格式
         * @param response
         * @returns {*}
         */
        parse: function(response) {
            if (response.result_data) {
                return response.result_data.data;
            }
            return response;
        },
        initialize: function() {
            var self = this;
            var user_id = self.get("user_id");
            self.user_id = user_id;
            self._setup_events();
        },
        get_info: function() {
            var self = this;
            if (self._get_info_xhr) {
                return;
            }
            self.fetch({
                url: self.url,
                data: "user_id=" + self.user_id,
                cache: false,
                beforeSend: function(xhr, options) {
                    self.trigger("before:fetch", xhr, options);
                },
                success: function(collection, response, options) {
                    self.trigger("success:fetch", response, options);
                },
                error: function(collection, response, options) {
                    self.trigger("error:fetch", response, options);
                },
                complete: function(xhr, status) {
                    self.trigger("complete:fetch", xhr, status);
                }
            });
        },
        /**
         * 获得模特卡基础数据
         */
        get_base_info: function() {
            var self = this;
            self.fetch({
                url: global_config.ajax_url.get_model_card_base_info,
                //data : 'user_id='+self.user_id,
                //cache : false,
                beforeSend: function(xhr, options) {
                    self.trigger("before:get_base_info:fetch", xhr, options);
                },
                success: function(collection, response, options) {
                    self.trigger("success:get_base_info:fetch", response, options);
                },
                error: function(collection, response, options) {
                    self.trigger("error:get_base_info:fetch", response, options);
                },
                complete: function(xhr, status) {
                    self.trigger("complete:get_base_info:fetch", xhr, status);
                }
            });
        },
        /**
         * /更新头像
         * @param key
         * @param val
         * @param options
         * @return {*}
         */
        update_avater: function(key, val, options) {
            var self = this;
            var attrs;
            if (key == null || typeof key === "object") {
                attrs = key;
                options = val;
            } else {
                (attrs = {})[key] = val;
            }
            options || (options = {});
            options.url = global_config.ajax_url.save_model_card;
            var paramData = [];
            for (var key in attrs) {
                paramData.push(key + "=" + attrs[key]);
            }
            options.data = paramData.join("&");
            options.beforeSend = function(xhr, options) {
                self.trigger("before:update_avater:save", xhr, options);
            };
            options.success = function(model, response, options) {
                self.trigger("success:update_avater:save", response, options);
            };
            options.error = function(model, xhr, options) {
                self.trigger("error:update_avater:save", model, xhr, options);
            };
            options.complete = function(xhr, status) {
                self.trigger("complete:update_avater:save", xhr, status);
            };
            self.save(attrs, options);
            return self;
        },
        /**
         * /保存模特信息
         * @param key
         * @param val
         * @param options
         * @return {*}
         */
        save_model_card_info: function(data) {
            var self = this;
            self.fetch({
                url: global_config.ajax_url.save_model_card,
                data: data,
                type: "POST",
                //cache : false,
                beforeSend: function(xhr, options) {
                    self.trigger("before:update_info:save", xhr, options);
                },
                success: function(collection, response, options) {
                    self.trigger("success:update_info:save", response, options);
                },
                error: function(collection, response, options) {
                    self.trigger("error:update_info:save", response, options);
                },
                complete: function(xhr, status) {
                    self.trigger("complete:update_info:save", xhr, status);
                }
            });
            return self;
        },
        /*save_model_card_info: function(key, val, options) {
            var self = this;

            var attrs;
            if (key == null || typeof key === 'object') {
                attrs = key;
                options = val;
            } else {
                (attrs = {})[key] = val;
            }

            options || (options = {});

            options.url = global_config.ajax_url.save_model_card;
            var paramData = [];
            for (var key in attrs) {
                paramData.push(key + '=' + attrs[key]);
            }
            options.data = paramData.join('&');
            options.beforeSend = function(xhr, options) {
                self.trigger('before:update_info:save', xhr, options);
            };
            options.success = function(model, response, options) {
                self.trigger('success:update_info:save', response, options);
            };
            options.error = function(model, xhr, options) {
                self.trigger('error:update_info:save', model, xhr, options);
            };
            options.complete = function(xhr, status) {
                self.trigger('complete:update_info:save', xhr, status);
            };


            self.save(attrs, options);

            return self;
        },*/
        follow_request: function(data) {
            var self = this;
            self.fetch({
                url: global_config.ajax_url.follow_user,
                data: data,
                cache: false,
                beforeSend: function(xhr, options) {
                    self.trigger("before:fetch_follow", xhr, options);
                },
                success: function(collection, response, options) {
                    self.trigger("success:fetch_follow", response, options);
                },
                error: function(collection, response, options) {
                    self.trigger("error:fetch_follow", response, options);
                },
                complete: function(xhr, status) {
                    self.trigger("complete:fetch_follow", xhr, status);
                }
            });
        },
        unfollow_request: function(data) {
            var self = this;
            self.fetch({
                url: global_config.ajax_url.follow_user,
                data: data,
                cache: false,
                beforeSend: function(xhr, options) {
                    self.trigger("before:fetch_unfollow", xhr, options);
                },
                success: function(collection, response, options) {
                    self.trigger("success:fetch_unfollow", response, options);
                },
                error: function(collection, response, options) {
                    self.trigger("error:fetch_unfollow", response, options);
                },
                complete: function(xhr, status) {
                    self.trigger("complete:fetch_unfollow", xhr, status);
                }
            });
        },
        judge_can_date: function(data) {
            var self = this;
            self.fetch({
                url: global_config.ajax_url.check_cameraman_require,
                data: data,
                cache: false,
                beforeSend: function(xhr, options) {
                    self.trigger("before:judge_can_date", xhr, options);
                },
                success: function(collection, response, options) {
                    self.trigger("success:judge_can_date", response, options);
                },
                error: function(collection, response, options) {
                    self.trigger("error:judge_can_date", response, options);
                },
                complete: function(xhr, status) {
                    self.trigger("complete:judge_can_date", xhr, status);
                }
            });
        }
    });
});

/**
 * 我要约拍
 * nolestLam 2014.8.21
 * @param  {[type]} require
 * @param  {[type]} exports
 * @param  {[type]} module
 * @return {[type]}
 */
define("pai/vwx0.0.1-beta/model_date/model_style/index-debug", [ "$-debug", "pai/vwx0.0.1-beta/frame/page_control-debug", "utility/backbone/1.1.2/backbone-debug", "pai/vwx0.0.1-beta/frame/ua-debug", "pai/vwx0.0.1-beta/frame/page-debug", "utility/zepto/modules/data/1.1.4/data-debug", "utility/hammer/plugins/jquery.hammer/1.1.3/jquery.hammer-debug", "utility/underscore/1.6.0/underscore-debug", "pai/vwx0.0.1-beta/common/utility-debug", "pai/vwx0.0.1-beta/common/cross_domain_storage-debug", "matcha/cookie/1.0.0/cookie-debug", "pai/vwx0.0.1-beta/model_date/model_style/view-debug", "pai/vwx0.0.1-beta/common/view-debug", "utility/handlebars/1.3.0/runtime-debug", "pai/vwx0.0.1-beta/common/scroll-debug", "utility/iscroll/4.2.5/iscroll-debug", "pai/vwx0.0.1-beta/common/img-ready-debug", "pai/vwx0.0.1-beta/model_date/model_style/choosen_view-debug", "pai/vwx0.0.1-beta/ui/m_alert/view-debug", "pai/vwx0.0.1-beta/model_date/model_card/model-debug", "pai/vwx0.0.1-beta/common/global_config-debug" ], function(require, exports, module) {
    var $ = require("$-debug");
    var page_control = require("pai/vwx0.0.1-beta/frame/page_control-debug");
    var utility = require("pai/vwx0.0.1-beta/common/utility-debug");
    var model_style_view = require("pai/vwx0.0.1-beta/model_date/model_style/view-debug");
    var model_card_model = require("pai/vwx0.0.1-beta/model_date/model_card/model-debug");
    page_control.add_page([ function() {
        return {
            title: "我要约拍",
            route: {
                "model_style/:query(/:payment_no)": "model_style"
            },
            dom_not_cache: true,
            ignore_exist: true,
            transition_type: "slide",
            initialize: function() {},
            page_init: function(page_view, route_params_arr, route_params_obj) {
                var self = this;
                //从路由取id
                self.user_id = route_params_arr[0];
                var model_obj = null;
                var model = route_params_obj;
                //用于预览跳过来
                var preview_data = null;
                var is_preview = !utility.is_empty(route_params_obj);
                if (is_preview) {
                    route_params_obj.data.is_preview = true;
                    preview_data = route_params_obj.data;
                }
                var options = {};
                if (is_preview) {
                    options.templateModel = {
                        is_preview: is_preview
                    };
                }
                options.user_id = self.user_id;
                //判断是否从模特卡到达此页面
                if (model && model.cid) {
                    model_obj = route_params_obj;
                    options.model = model_obj;
                    options.is_new_fetch = false;
                } else {
                    //建立model
                    model_obj = new model_card_model({
                        user_id: self.user_id
                    });
                    options.model = model_obj;
                    options.is_new_fetch = true;
                }
                options.parentNode = self.$el;
                //生成大view，传入model对象 modify by hdw 2014.8.25 19:13
                var model_style_view_obj = new model_style_view(options).set_preview_data(preview_data).render();
            },
            page_before_show: function() {}
        };
    } ]);
});

/**
 * 我要约拍
 * nolestLam 2014.8.
 */
define("pai/vwx0.0.1-beta/model_date/model_style/view-debug", [ "$-debug", "pai/vwx0.0.1-beta/frame/page_control-debug", "utility/backbone/1.1.2/backbone-debug", "pai/vwx0.0.1-beta/frame/ua-debug", "pai/vwx0.0.1-beta/frame/page-debug", "utility/zepto/modules/data/1.1.4/data-debug", "utility/hammer/plugins/jquery.hammer/1.1.3/jquery.hammer-debug", "utility/underscore/1.6.0/underscore-debug", "pai/vwx0.0.1-beta/common/view-debug", "utility/handlebars/1.3.0/runtime-debug", "pai/vwx0.0.1-beta/common/scroll-debug", "utility/iscroll/4.2.5/iscroll-debug", "pai/vwx0.0.1-beta/common/utility-debug", "pai/vwx0.0.1-beta/common/cross_domain_storage-debug", "matcha/cookie/1.0.0/cookie-debug", "pai/vwx0.0.1-beta/common/img-ready-debug", "pai/vwx0.0.1-beta/model_date/model_style/choosen_view-debug", "pai/vwx0.0.1-beta/ui/m_alert/view-debug", "pai/vwx0.0.1-beta/model_date/model_card/model-debug", "pai/vwx0.0.1-beta/common/global_config-debug" ], function(require, exports, module) {
    var $ = require("$-debug");
    var page_control = require("pai/vwx0.0.1-beta/frame/page_control-debug");
    var View = require("pai/vwx0.0.1-beta/common/view-debug");
    var model_style = require("pai/vwx0.0.1-beta/model_date/model_style/tpl/main-debug.handlebars");
    var Scroll = require("pai/vwx0.0.1-beta/common/scroll-debug");
    var choosen_view = require("pai/vwx0.0.1-beta/model_date/model_style/choosen_view-debug");
    var utility = require("pai/vwx0.0.1-beta/common/utility-debug");
    var m_alert = require("pai/vwx0.0.1-beta/ui/m_alert/view-debug");
    var model_card_model = require("pai/vwx0.0.1-beta/model_date/model_card/model-debug");
    var model_style_view = View.extend({
        attrs: {
            template: model_style
        },
        events: {
            'tap [data-role="page-back"]': function() {
                var self = this;
                page_control.back();
            },
            swiperight: function() {
                page_control.back();
            },
            "tap [data-role=choosen-style-tap]": function(ev) {
                var self = this;
                if (utility.login_id == self.get("user_id")) {
                    return;
                }
                var $choosen_btn = $(ev.currentTarget);
                var id = $choosen_btn.attr("data-id");
                var style = $choosen_btn.attr("data-style");
                var price = $choosen_btn.attr("data-price");
                var params = $choosen_btn.attr("data-params");
                var data = self._search_data(style);
                // 用于打折价格，特殊处理
                var is_discount = params == "discount" ? 1 : 0;
                console.log(data);
                self.model.set("model_selected_info", data);
                //{style : style,price : price ,is_discount : is_discount},
                self.model_card_model_obj.judge_can_date({
                    model_user_id: self.model.get("user_id")
                });
            }
        },
        _search_data: function(style) {
            var self = this;
            var data;
            $.each(self.cache_data.model_style_v2, function(i, obj) {
                if (obj.text == style) {
                    data = obj;
                    return false;
                }
            });
            return data;
        },
        _setup_events: function() {
            var self = this;
            self.model.on("before:fetch", function() {
                m_alert.show("加载中...", "loading", {
                    delay: -1
                });
            }).on("success:fetch", function(response) {
                m_alert.hide();
                self._fetch_render(self.preview_data);
            }).on("error:fetch", function() {
                m_alert.show("网络异常", "error");
            });
            // 判断是否约拍
            self.model_card_model_obj.on("before:judge_can_date", function() {
                m_alert.show("加载中...", "loading", {
                    delay: -1
                });
            }).on("success:judge_can_date", function(response, options) {
                var response = response.result_data;
                var cache = self.model.toJSON();
                //设置缓存 用于其他页面跳转表单页获取数据 2014-12-4
                utility.storage.set("submit_cache_" + utility.user.get("user_id"), cache);
                var location = window.location;
                // 修改成直接去到表单页面
                // modify by hudw 2014.12.9
                var url = encodeURIComponent(location.origin + "/mobile/" + window._page_mode + "#model_date/submit_application");
                if (response.code != 1) {
                    m_alert.show(response.msg, "error", {
                        delay: 3e3
                    });
                    switch (utility.int(response.model_level_require)) {
                      case 2:
                        page_control.navigate_to_page("mine/authentication/v2/from_date_" + url);
                        break;

                      case 3:
                        page_control.navigate_to_page("mine/authentication/v3/from_date_" + url);
                        break;
                    }
                    return;
                }
                m_alert.hide();
                page_control.navigate_to_page("model_date/submit_application", self.model);
            }).on("error:judge_can_date", function() {
                m_alert.show("网络异常", "error");
            });
            self.on("update_list", function() {
                if (!self.view_scroll_obj) {
                    self._setup_scroll();
                    self.view_scroll_obj.refresh();
                    return;
                }
                self.view_scroll_obj.refresh();
            });
        },
        _fetch_render: function(data) {
            var self = this;
            var render_data = self.model.toJSON();
            //预览的情况
            data && (render_data = data);
            self.cache_data = render_data;
            self.$choosen_contenter.html("");
            //循环生成按钮
            $.each(render_data.model_style_v2, function(i, item) {
                data && (render_data.model_style_v2[i].is_preview = true);
                //用于预览
                var choosen_btn = new choosen_view({
                    templateModel: render_data.model_style_v2[i],
                    parentNode: self.$choosen_contenter
                }).render();
            });
            self.trigger("update_list");
            self._drop_reset();
        },
        _setup_scroll: function() {
            var self = this;
            var view_scroll_obj = Scroll(self.$container, {
                lazyLoad: true,
                is_hide_dropdown: false
            });
            self.view_scroll_obj = view_scroll_obj;
            // 下拉完成
            self.view_scroll_obj.on("dropload", function(e) {
                self.model.get_info();
            });
        },
        _drop_reset: function() {
            var self = this;
            self.view_scroll_obj && self.view_scroll_obj.resetload();
        },
        setup: function() {
            var self = this;
            self.model_card_model_obj = new model_card_model();
            self.$container = self.$("[data-role=container]");
            self.$container_img_list = self.$("[data-role=container-img-list]");
            self.$choosen_contenter = self.$('[data-role="choosen-contenter"]');
            //self.$commit_fee = self.$('[data-role="commit_fee"]');
            self._setup_events();
            // 如果model是传递过来的，执行_fetch_render，否则请求获取新的model
            if (!self.get("is_new_fetch")) {
                // 大视图渲染后执行渲染列表内容
                self.once("render", function() {
                    self._fetch_render();
                });
            } else {
                self.model.get_info();
            }
        },
        set_preview_data: function(data) {
            var self = this;
            self.preview_data = data || null;
            return self;
        },
        render: function() {
            var self = this;
            View.prototype.render.apply(self);
            self.trigger("render");
            return self;
        }
    });
    module.exports = model_style_view;
});

define("pai/vwx0.0.1-beta/model_date/model_style/tpl/main-debug.handlebars", [ "utility/handlebars/1.3.0/runtime-debug" ], function(require, exports, module) {
    var Handlebars = require("utility/handlebars/1.3.0/runtime-debug");
    var template = Handlebars.template;
    module.exports = template(function(Handlebars, depth0, helpers, partials, data) {
        this.compilerInfo = [ 4, ">= 1.0.0" ];
        helpers = helpers || {};
        for (var key in Handlebars.helpers) {
            helpers[key] = helpers[key] || Handlebars.helpers[key];
        }
        data = data || {};
        var buffer = "", stack1, self = this;
        function program1(depth0, data) {
            return "我的约拍条件";
        }
        function program3(depth0, data) {
            return "我要约拍";
        }
        function program5(depth0, data) {
            return "请选择拍摄风格：";
        }
        buffer += '<main role="main" class="location">\r\n    \r\n<!--     <header class="page-header wryh">\r\n                <div class="page-back" data-role="page-back"><i class="icon icon-back-40x40"></i></div>\r\n                \r\n    </header> -->\r\n\r\n    <header class="nav-header mine-nav-header">\r\n        <div class="left-button-wrap" data-role="page-back">\r\n            <a><i class="icon icon-back"></i></a>\r\n        </div>\r\n\r\n        <h3 class="title">';
        stack1 = helpers["if"].call(depth0, depth0 && depth0.is_preview, {
            hash: {},
            inverse: self.program(3, program3, data),
            fn: self.program(1, program1, data),
            data: data
        });
        if (stack1 || stack1 === 0) {
            buffer += stack1;
        }
        buffer += '</h3>\r\n        \r\n        <div class="right-button-wrap">\r\n            <a><i class="icon icon-cog"></i></a>\r\n        </div>\r\n    </header>\r\n\r\n\r\n    <div data-role="container" class="content-body commit">\r\n        <div>\r\n            <div class="content-body ">\r\n                <!--use for choise or my-->\r\n                <div class="commit-block">\r\n                    <!--div class="notice">\r\n                        <p class="commit-notice">摄影师信用金要求：</p>\r\n                        <p class="commit-fee" data-role="commit_fee"></p>\r\n                    </div-->\r\n                    <div class="style-content">\r\n                    <div class="notice-style">';
        stack1 = helpers.unless.call(depth0, depth0 && depth0.is_preview, {
            hash: {},
            inverse: self.noop,
            fn: self.program(5, program5, data),
            data: data
        });
        if (stack1 || stack1 === 0) {
            buffer += stack1;
        }
        buffer += '</div>\r\n                        <div class="choosen-style" data-role="choosen-contenter">\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <!--use for choise or my end-->\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</main>';
        return buffer;
    });
});

/**
 * Created by nolestLam on 2014/8/22.
 */
define("pai/vwx0.0.1-beta/model_date/model_style/choosen_view-debug", [ "$-debug", "pai/vwx0.0.1-beta/frame/page_control-debug", "utility/backbone/1.1.2/backbone-debug", "pai/vwx0.0.1-beta/frame/ua-debug", "pai/vwx0.0.1-beta/frame/page-debug", "utility/zepto/modules/data/1.1.4/data-debug", "utility/hammer/plugins/jquery.hammer/1.1.3/jquery.hammer-debug", "utility/underscore/1.6.0/underscore-debug", "pai/vwx0.0.1-beta/common/view-debug", "utility/handlebars/1.3.0/runtime-debug" ], function(require, exports, module) {
    var $ = require("$-debug");
    var page_control = require("pai/vwx0.0.1-beta/frame/page_control-debug");
    var View = require("pai/vwx0.0.1-beta/common/view-debug");
    var choosen_btn = require("pai/vwx0.0.1-beta/model_date/model_style/tpl/choosen-debug.handlebars");
    var choosen_view = View.extend({
        attrs: {
            template: choosen_btn
        },
        events: {},
        _parseElement: function() {
            var self = this;
            var template_model = self.get("templateModel");
            console.log(template_model);
            self.set("templateModel", template_model);
            View.prototype._parseElement.apply(self);
        },
        _setup_events: function() {},
        setup: function() {
            var self = this;
            self._setup_events();
        },
        render: function() {
            var self = this;
            View.prototype.render.apply(self);
            self.trigger("render");
            return self;
        }
    });
    module.exports = choosen_view;
});

define("pai/vwx0.0.1-beta/model_date/model_style/tpl/choosen-debug.handlebars", [ "utility/handlebars/1.3.0/runtime-debug" ], function(require, exports, module) {
    var Handlebars = require("utility/handlebars/1.3.0/runtime-debug");
    var template = Handlebars.template;
    module.exports = template(function(Handlebars, depth0, helpers, partials, data) {
        this.compilerInfo = [ 4, ">= 1.0.0" ];
        helpers = helpers || {};
        for (var key in Handlebars.helpers) {
            helpers[key] = helpers[key] || Handlebars.helpers[key];
        }
        data = data || {};
        var buffer = "", stack1, helper, functionType = "function", escapeExpression = this.escapeExpression, self = this;
        function program1(depth0, data) {
            var buffer = "", stack1, helper;
            buffer += '\r\n            <p class="choosen-style-child-price" data-role="choosen-price" >';
            if (helper = helpers.discount) {
                stack1 = helper.call(depth0, {
                    hash: {},
                    data: data
                });
            } else {
                helper = depth0 && depth0.discount;
                stack1 = typeof helper === functionType ? helper.call(depth0, {
                    hash: {},
                    data: data
                }) : helper;
            }
            buffer += escapeExpression(stack1) + "</p>\r\n            ";
            return buffer;
        }
        function program3(depth0, data) {
            var buffer = "", stack1, helper;
            buffer += '\r\n            <p class="choosen-style-child-price" data-role="choosen-price" >';
            if (helper = helpers.combo_text) {
                stack1 = helper.call(depth0, {
                    hash: {},
                    data: data
                });
            } else {
                helper = depth0 && depth0.combo_text;
                stack1 = typeof helper === functionType ? helper.call(depth0, {
                    hash: {},
                    data: data
                }) : helper;
            }
            buffer += escapeExpression(stack1) + "</p>\r\n        ";
            return buffer;
        }
        function program5(depth0, data) {
            return '<i class="icon icon-r-16x26"></i>';
        }
        buffer += '<div class="choosen-style-child" data-role="choosen-style-tap" data-style="';
        if (helper = helpers.text) {
            stack1 = helper.call(depth0, {
                hash: {},
                data: data
            });
        } else {
            helper = depth0 && depth0.text;
            stack1 = typeof helper === functionType ? helper.call(depth0, {
                hash: {},
                data: data
            }) : helper;
        }
        buffer += escapeExpression(stack1) + '" data-price="';
        if (helper = helpers.price) {
            stack1 = helper.call(depth0, {
                hash: {},
                data: data
            });
        } else {
            helper = depth0 && depth0.price;
            stack1 = typeof helper === functionType ? helper.call(depth0, {
                hash: {},
                data: data
            }) : helper;
        }
        buffer += escapeExpression(stack1) + '" data-params="';
        if (helper = helpers.params) {
            stack1 = helper.call(depth0, {
                hash: {},
                data: data
            });
        } else {
            helper = depth0 && depth0.params;
            stack1 = typeof helper === functionType ? helper.call(depth0, {
                hash: {},
                data: data
            }) : helper;
        }
        buffer += escapeExpression(stack1) + '" data-id="';
        if (helper = helpers.id) {
            stack1 = helper.call(depth0, {
                hash: {},
                data: data
            });
        } else {
            helper = depth0 && depth0.id;
            stack1 = typeof helper === functionType ? helper.call(depth0, {
                hash: {},
                data: data
            }) : helper;
        }
        buffer += escapeExpression(stack1) + '">\r\n    <p class="choosen-style-child-title" data-role="choosen-style">';
        if (helper = helpers.text) {
            stack1 = helper.call(depth0, {
                hash: {},
                data: data
            });
        } else {
            helper = depth0 && depth0.text;
            stack1 = typeof helper === functionType ? helper.call(depth0, {
                hash: {},
                data: data
            }) : helper;
        }
        buffer += escapeExpression(stack1) + '</p>\r\n    <div class="choosen-style-child-price-container">\r\n        ';
        stack1 = helpers["if"].call(depth0, depth0 && depth0.is_discount, {
            hash: {},
            inverse: self.program(3, program3, data),
            fn: self.program(1, program1, data),
            data: data
        });
        if (stack1 || stack1 === 0) {
            buffer += stack1;
        }
        buffer += "\r\n";
        stack1 = helpers.unless.call(depth0, depth0 && depth0.is_preview, {
            hash: {},
            inverse: self.noop,
            fn: self.program(5, program5, data),
            data: data
        });
        if (stack1 || stack1 === 0) {
            buffer += stack1;
        }
        buffer += "\r\n    </div>\r\n</div>\r\n\r\n";
        return buffer;
    });
});

/**
 * 提交约拍申请 - index
 * nolestLam 2014.8.25
 * @param  {[type]} require
 * @param  {[type]} exports
 * @param  {[type]} module
 * @return {[type]}
 */
define("pai/vwx0.0.1-beta/model_date/submit_application/index-debug", [ "$-debug", "pai/vwx0.0.1-beta/frame/page_control-debug", "utility/backbone/1.1.2/backbone-debug", "pai/vwx0.0.1-beta/frame/ua-debug", "pai/vwx0.0.1-beta/frame/page-debug", "utility/zepto/modules/data/1.1.4/data-debug", "utility/hammer/plugins/jquery.hammer/1.1.3/jquery.hammer-debug", "utility/underscore/1.6.0/underscore-debug", "pai/vwx0.0.1-beta/model_date/submit_application/view-debug", "pai/vwx0.0.1-beta/common/view-debug", "utility/handlebars/1.3.0/runtime-debug", "pai/vwx0.0.1-beta/common/utility-debug", "pai/vwx0.0.1-beta/common/cross_domain_storage-debug", "matcha/cookie/1.0.0/cookie-debug", "pai/vwx0.0.1-beta/common/template-helpers-debug", "pai/vwx0.0.1-beta/common/scroll-debug", "utility/iscroll/4.2.5/iscroll-debug", "pai/vwx0.0.1-beta/common/img-ready-debug", "pai/vwx0.0.1-beta/widget/choosen_group/view-debug", "pai/vwx0.0.1-beta/widget/number_btn/view-debug", "pai/vwx0.0.1-beta/ui/m_alert/view-debug", "pai/vwx0.0.1-beta/widget/select/view-debug", "pai/vwx0.0.1-beta/ui/m_select/view-debug", "pai/vwx0.0.1-beta/common/new_iscroll-debug", "pai/vwx0.0.1-beta/base/ua-debug", "pai/vwx0.0.1-beta/model_date/submit_application/model-debug", "pai/vwx0.0.1-beta/common/global_config-debug", "pai/vwx0.0.1-beta/model_date/agreement/view-debug", "pai/vwx0.0.1-beta/model_date/model_card/model-debug" ], function(require, exports, module) {
    var $ = require("$-debug");
    var page_control = require("pai/vwx0.0.1-beta/frame/page_control-debug");
    var submit_application_view = require("pai/vwx0.0.1-beta/model_date/submit_application/view-debug");
    var model = require("pai/vwx0.0.1-beta/model_date/submit_application/model-debug");
    var agreement_view = require("pai/vwx0.0.1-beta/model_date/agreement/view-debug");
    var utility = require("pai/vwx0.0.1-beta/common/utility-debug");
    var model_card = require("pai/vwx0.0.1-beta/model_date/model_card/model-debug");
    var m_alert = require("pai/vwx0.0.1-beta/ui/m_alert/view-debug");
    page_control.add_page([ function() {
        return {
            title: "提交约拍申请",
            route: {
                "model_date/submit_application(/:custom_params)": "model_date/submit_application"
            },
            dom_not_cache: true,
            ignore_exist: true,
            transition_type: "slide",
            initialize: function() {},
            page_init: function(page_view, route_params_arr, route_params_obj) {
                var self = this;
                var model_obj = null;
                var model_card_obj = {};
                var custom_params = decodeURIComponent(route_params_arr[0]);
                // 人体私拍协议
                var agreement_view_obj = new agreement_view({
                    parentNode: self.$el
                }).render();
                agreement_view_obj.hide();
                if (route_params_arr[0]) {
                    // 从其他页面直接跳转到表单页，通过路径传参数这样形成一个数据
                    // hudw 2014.12.8
                    var obj = eval("(" + custom_params + ")");
                    /*var cache  =
                    {
                        combo_text: "1元(200小时)",
                        continue_price: "2000",
                        continue_text: "加钟续拍每小时200元",
                        hour: "2",
                        price: "1.5",
                        style: "性感 清新1111",
                        address : "广东省-广州",
                        detail_address : '肥龙广场9413号',
                        user_id : 100001,
                        time : "2014-12-25 12:30",
                        limit_num : 10,
                        user_name : '汤唯'
                    };

                    obj = cache;*/
                    console.log(obj);
                    model_obj = new model({});
                    if (!utility.is_empty(obj)) {
                        model_card_obj = new model_card({
                            user_id: obj.user_id
                        });
                        model_card_obj.get_info();
                    }
                    // 加载模特数据
                    model_card_obj.on("before:fetch", function() {
                        m_alert.show("加载中...", "loading", {
                            delay: -1
                        });
                    }).on("success:fetch", function(response) {
                        m_alert.hide();
                        model_obj = model_card_obj;
                        model_obj.set("model_selected_info", obj);
                        utility.storage.set("submit_cache_" + utility.user.get("user_id"), model_obj);
                        console.log(model_obj.toJSON());
                        self.submit_application_view_obj = new submit_application_view({
                            model: model_obj,
                            parentNode: self.$el,
                            templateModel: model_obj.toJSON(),
                            is_from_custom_params: 1,
                            model_card_obj: model_card_obj,
                            agreement_view_obj: agreement_view_obj
                        }).render();
                    }).on("error:fetch", function() {
                        m_alert.show("网络异常", "error");
                    });
                } else {
                    if (route_params_obj && route_params_obj.cid) {
                        //从约拍风格到达此页面
                        model_obj = route_params_obj;
                        console.log(model_obj);
                    } else {
                        //在约拍风格跳转其他流程，再到达此页面，建立新的model,从缓存中读取model属性 2014-12-4 nolset
                        // 做容错机制交互
                        model_obj = new model({});
                        model_obj.attributes = utility.storage.get("submit_cache_" + utility.user.get("user_id"));
                    }
                    self.submit_application_view_obj = new submit_application_view({
                        model: model_obj,
                        parentNode: self.$el,
                        templateModel: model_obj.toJSON(),
                        is_from_custom_params: 0,
                        model_card_obj: model_card_obj,
                        agreement_view_obj: agreement_view_obj
                    }).render();
                }
            },
            page_before_show: function() {},
            page_show: function() {},
            page_before_hide: function() {},
            window_change: function(page_view) {}
        };
    } ]);
});

/**
 * 提交约拍申请
 * nolestLam 2014.8.25
 * @param  {[type]} require
 * @param  {[type]} exports
 * @param  {[type]} module
 * @return {[type]}
 */
define("pai/vwx0.0.1-beta/model_date/submit_application/view-debug", [ "$-debug", "pai/vwx0.0.1-beta/frame/page_control-debug", "utility/backbone/1.1.2/backbone-debug", "pai/vwx0.0.1-beta/frame/ua-debug", "pai/vwx0.0.1-beta/frame/page-debug", "utility/zepto/modules/data/1.1.4/data-debug", "utility/hammer/plugins/jquery.hammer/1.1.3/jquery.hammer-debug", "utility/underscore/1.6.0/underscore-debug", "pai/vwx0.0.1-beta/common/view-debug", "utility/handlebars/1.3.0/runtime-debug", "pai/vwx0.0.1-beta/common/utility-debug", "pai/vwx0.0.1-beta/common/cross_domain_storage-debug", "matcha/cookie/1.0.0/cookie-debug", "pai/vwx0.0.1-beta/common/template-helpers-debug", "pai/vwx0.0.1-beta/common/scroll-debug", "utility/iscroll/4.2.5/iscroll-debug", "pai/vwx0.0.1-beta/common/img-ready-debug", "pai/vwx0.0.1-beta/widget/choosen_group/view-debug", "pai/vwx0.0.1-beta/widget/number_btn/view-debug", "pai/vwx0.0.1-beta/ui/m_alert/view-debug", "pai/vwx0.0.1-beta/widget/select/view-debug", "pai/vwx0.0.1-beta/ui/m_select/view-debug", "pai/vwx0.0.1-beta/common/new_iscroll-debug", "pai/vwx0.0.1-beta/base/ua-debug" ], function(require, exports, module) {
    var $ = require("$-debug");
    var page_control = require("pai/vwx0.0.1-beta/frame/page_control-debug");
    var View = require("pai/vwx0.0.1-beta/common/view-debug");
    var submit_application = require("pai/vwx0.0.1-beta/model_date/submit_application/tpl/main-debug.handlebars");
    var utility = require("pai/vwx0.0.1-beta/common/utility-debug");
    var templateHelpers = require("pai/vwx0.0.1-beta/common/template-helpers-debug");
    var Scroll = require("pai/vwx0.0.1-beta/common/scroll-debug");
    var choosen_group_view = require("pai/vwx0.0.1-beta/widget/choosen_group/view-debug");
    var number_btn_view = require("pai/vwx0.0.1-beta/widget/number_btn/view-debug");
    var select_view = require("pai/vwx0.0.1-beta/widget/select/view-debug");
    //var location_data = require('../../common/location_data');
    var m_alert = require("pai/vwx0.0.1-beta/ui/m_alert/view-debug");
    var m_select = require("pai/vwx0.0.1-beta/ui/m_select/view-debug");
    var submit_application_view = View.extend({
        attrs: {
            template: submit_application
        },
        forms: {
            // 表单类
            number: {},
            select: {},
            choosen_btn: {}
        },
        events: {
            swiperight: function() {
                page_control.back();
            },
            "tap [data-role=btn-more-sec]": function(ev) {
                var self = this;
                //self.$('[data-role=btn-more-sec]').find('.icon').toggleClass("icon-deg");
                self.$content_empty.toggleClass("fn-hide");
                self.$content_box.toggleClass("fn-hide");
                if (self.$content_box.hasClass("fn-hide")) {
                    self._is_show_detail = false;
                } else {
                    self._is_show_detail = true;
                }
                self.view_scroll_obj.refresh();
            },
            "tap [data-role=page-back]": function(ev) {
                page_control.back();
            },
            "tap [data-role=submit-application-btn]": function(ev) {
                var self = this;
                self._init_selected_value_to_model();
                if (self.cansend) {
                    console.log(self.model);
                    page_control.navigate_to_page("model_date/payment", self.model);
                    debugger;
                }
            },
            'tap [data-role="time"]': function() {
                var self = this;
                if (self.get("is_from_custom_params")) {
                    return;
                }
                self.forms["select"]["time"].show();
            },
            'tap [data-role="address"]': function() {
                var self = this;
                if (self.get("is_from_custom_params")) {
                    return;
                }
                if (self.has_no_location_data) {
                    self._init_location_data();
                    return;
                }
                self.forms["select"]["province"].show();
            },
            'tap [data-role="ui-choosen-btn"]': function(ev) {
                var self = this;
                var $cur_btn = $(ev.currentTarget);
                var price = $cur_btn.attr("data-selected-price");
                self.forms["number"]["price"].set_vaule(price);
            },
            'tap [data-role="add"]': function() {
                var self = this;
            },
            'tap [data-role="minus"]': function() {
                var self = this;
            }
        },
        /**
         * 安装事件
         * @private
         */
        _setup_events: function() {
            var self = this;
            self.on("render", function() {
                self.$('[data-role="total-price-v2"]').html(self.model.get("model_selected_info").combo_text);
            });
            // 订单请求
            self.model.on("before:fetch", function() {}).on("success:fetch", function() {}).on("complete:fetch", function(xhr, status) {});
            self.on("update_info", function(response, xhr) {
                // 区分当前对象
                var _self = this;
            });
            self._setup_scroll();
            self.view_scroll_obj.refresh();
            self.get("agreement_view_obj").on("receive", function() {
                self.cansend = true;
                self.is_receive = true;
                self._init_selected_value_to_model();
                page_control.navigate_to_page("model_date/payment", self.model);
            });
        },
        /**
         * 安装滚动条
         * @private
         */
        /*
        _set_price : function(hour)
        {
            var self = this;

            var style_price = self.model.get("model_selected_info").price;

            if(hour.trim() == '')
            {
                return
            }
            else
            {
                self.$('[data-role="total-price"]').html(utility.int(style_price*hour))

            }

        },
        */
        _setup_scroll: function() {
            var self = this;
            var view_scroll_obj = Scroll(self.$container, {
                is_hide_dropdown: true
            });
            self.view_scroll_obj = view_scroll_obj;
        },
        /**
         * 安装选择组模块
         * @private
         */
        _setup_choosen_group: function() {
            var self = this;
            var key = self.model.get("model_selected_info").style;
            var model_style = self.model.get("model_style");
            //var model_type = self.model.get('model_type');
            var model_type = self.model.get("new_model_type_list");
            var style_list = [];
            $(model_style).each(function(i, obj) {
                if (obj.text == key) {
                    obj.selected = true;
                } else {
                    obj.selected = false;
                }
                style_list.push(obj);
            });
            console.log(style_list);
            self.forms["choosen_btn"]["choosen_style_group"] = new choosen_group_view({
                templateModel: {
                    list: style_list
                },
                parentNode: self.$choosen_style_group,
                is_multiply: false,
                css: "btn_width"
            }).render();
            self.forms["choosen_btn"]["choosen_type_group"] = new choosen_group_view({
                templateModel: {
                    list: model_type
                },
                parentNode: self.$choosen_type_group,
                is_multiply: false,
                css: "btn_wided_sec"
            }).render();
            self.forms["choosen_btn"]["choosen_style_group"].on("success:selected", function(obj) {
                console.log(obj);
            });
        },
        /**
         * 安装数字按钮
         * @private
         */
        _setup_number_btn: function() {
            var self = this;
            /*
            self.forms['number']['price'] = new number_btn_view
            ({
                templateModel :
                {
                    type : 'tel'
                },
                min_value : 1,
                step : 50,
                parentNode: self.$number_for_price,
                value : self.model.get('model_selected_info').price,
                is_floor : true
            }).render();

            self.forms['number']['time'] = new number_btn_view
            ({
                templateModel :
                {
                    type : 'tel'
                },
                min_value : 1,
                step : 1,
                parentNode: self.$number_for_time,
                value : 1,
                is_floor : true
            }).render();
            */
            self.forms["number"]["limit_num"] = new number_btn_view({
                templateModel: {
                    type: "tel",
                    disable: true
                },
                min_value: 1,
                max_value: self.get("templateModel").limit_num,
                step: 1,
                parentNode: self.$number_for_limit_num,
                value: self.model.get("model_selected_info").limit_num || 1,
                disable: self.get("is_from_custom_params") ? true : false,
                is_floor: true
            }).render();
        },
        /**
         * 安装下拉选择框
         * @private
         */
        _setup_select: function(location_data) {
            var self = this;
            self.has_no_location_data = false;
            var province = location_data.two_lv_data.province;
            var city = location_data.two_lv_data.city;
            var date_arr = utility.select_time.mix_date().date_arr;
            var hour_arr = utility.select_time.mix_date().hour_arr;
            var min_arr = utility.select_time.mix_date().min_arr;
            self.forms["select"]["time"] = new m_select({
                templateModel: {
                    options: [ date_arr, hour_arr, min_arr ]
                },
                parentNode: self.$el
            }).render();
            var date_str = self.forms["select"]["time"].get_value()[0].value;
            var hour_str = self.forms["select"]["time"].get_value()[1].value;
            var min_str = self.forms["select"]["time"].get_value()[2].value;
            //modify hudw 2014.12.9
            //self.$('[data-role="time_str"]').html(date_str+" "+hour_str+":"+min_str);
            if (self.get("is_from_custom_params")) {
                self.$('[data-role="time_str"]').html(self.model.get("model_selected_info").time);
            }
            // 开始时间确认
            self.forms["select"]["time"].on("confirm:success", function(arr) {
                var cur_year = utility.select_time.today_is().year;
                self.$('[data-role="time_str"]').html(arr[0].value + " " + arr[1].value + ":" + arr[2].value);
            });
            // 设置默认市
            var city_arr = city[province[0].id];
            // 设置省第一项默认选中
            province[0].selected = true;
            city_arr[0].selected = true;
            // 这里用于整合初始化 从地址跳转过来的约拍编辑
            if (self.get("is_from_custom_params")) {
                self.$('[data-role="address_str"]').attr("data-city-id", city_arr[0].id).html(self.model.get("model_selected_info").address);
                self.$('[data-role="detail-location"]').attr("readonly", true).val(self.model.get("model_selected_info").detail_address);
            } else {
                self.$('[data-role="address_str"]').attr("data-city-id", city_arr[0].id).html(province[0].text + "-" + city_arr[0].value);
            }
            // 级联查询必须有“不限”的数据组
            self.forms["select"]["province"] = new m_select({
                templateModel: {
                    options: [ province, city_arr ]
                },
                parentNode: self.$el
            }).render();
            self.forms["select"]["province"].on("change:options", function(arr, cur_scroll_obj) {
                if (cur_scroll_obj.index == 0) {
                    var key = arr[0].id;
                    var options = city[key];
                    console.log(options);
                    if (options) {
                        options[0].selected = true;
                        self.forms["select"]["province"].set_options([ options ], 1);
                    }
                }
            });
            // 地址确认
            self.forms["select"]["province"].on("confirm:success", function(arr) {
                if (utility.is_empty(arr[0].value)) {
                    m_alert.show("请选择省份", "right");
                    return;
                }
                self.$('[data-role="address_str"]').attr("data-city-id", arr[1].id).html(arr[0].value + "-" + arr[1].value);
            });
        },
        /**
         * 视图初始化入口
         */
        setup: function() {
            var self = this;
            // 配置交互对象
            self.$container = self.$("[data-role=container]");
            // 滚动容器
            self.$container_img_list = self.$("[data-role=container-img-list]");
            // 头部图片容器
            // 数字按钮
            //self.$number_for_price = self.$('[data-role="number-btn-container-for-price"]');
            //self.$number_for_time = self.$('[data-role="number-btn-container-for-time"]');
            self.$number_for_limit_num = self.$('[data-role="number-btn-container-for-limit_num"]');
            // 风格选择选项
            self.$choosen_style_group = self.$('[data-role="choosen_style_group"]');
            // 类型选择选项
            self.$choosen_type_group = self.$('[data-role="choosen_type_group"]');
            // 下拉选择容器
            self.$select_container_for_year = self.$('[data-role="select-container-for-year"]');
            self.$select_container_for_month = self.$('[data-role="select-container-for-month"]');
            self.$select_container_for_day = self.$('[data-role="select-container-for-day"]');
            self.$select_container_for_hour = self.$('[data-role="select-container-for-hour"]');
            self.$select_container_for_province = self.$('[data-role="select-container-for-province"]');
            self.$select_container_for_city = self.$('[data-role="select-container-for-city"]');
            //信息是否合法
            self.cansend = false;
            // 详细地址
            self.$detail_location = self.$('[data-role="detail-location"]');
            //空块
            self.$content_empty = self.$('[data-role="content-empty"]');
            // 填选项
            self.$content_box = self.$('[data-role="content-box"]');
            // 安装事件
            self._setup_events();
            // 安装按钮模块
            self._setup_number_btn();
            self._init_location_data();
            self.has_no_location_data = true;
        },
        // 安装下拉模块
        _init_location_data: function() {
            var self = this;
            if (utility.storage.get("location_data_v2")) {
                self._setup_select(utility.storage.get("location_data_v2"));
                return;
            }
            utility.ajax_request({
                url: "http://yp.yueus.com/m/action/location_data_v2.php?_1419496363398",
                beforeSend: function() {
                    m_alert.show("地区加载中...", "loading", {
                        delay: -1
                    });
                },
                success: function(ret) {
                    m_alert.hide();
                    var data = ret.result_data;
                    var location_data_v2 = {
                        two_lv_data: {
                            province: JSON.parse(data.two_lv_data.province),
                            city: eval("(" + data.two_lv_data.city + ")")
                        }
                    };
                    utility.storage.set("location_data_v2", location_data_v2);
                    self._setup_select(location_data_v2);
                },
                error: function() {
                    self.has_no_location_data = true;
                    self.$('[data-role="address_str"]').html("点击此处 加载地区数据");
                    m_alert.show("网络异常", "error");
                }
            });
        },
        /**
         * 初始化获取选中的值
         * @private
         */
        _init_selected_value_to_model: function() {
            var self = this;
            console.log(self.model);
            //var price = self.forms['number']['price'].get_value();
            //var dur_time  = self.forms['number']['time'].get_value();
            var limit_num = self.forms["number"]["limit_num"].get_value();
            //var style = self.forms['choosen_btn']['choosen_style_group'].get_value();
            //var type  = self.forms['choosen_btn']['choosen_type_group'].get_value();
            var province_city = self.forms["select"]["province"].get_value();
            /*var date = self.forms['select']['year'].get_value().value + "-" +
                       self.forms['select']['month'].get_value().value + "-" +
                       self.forms['select']['day'].get_value().value + "-" +
                       self.forms['select']['hour'].get_value().value;*/
            var date = self.$('[data-role="time_str"]').html();
            var detail_location = self.$detail_location.val();
            var address = self.$('[data-role="address_str"]').html() + detail_location;
            var cameraman_require = utility.float(self.model.get("cameraman_require"));
            var available_balance = utility.user.get("available_balance");
            self.cansend = true;
            /*
            if(price == 0)
            {
                m_alert.show('出价不能为0','error');

                self.cansend = false;

                return
            }

            if(price < 10)
            {
                m_alert.show('至少10块','error');

                self.cansend = false;

                return
            }

            if(dur_time == 0)
            {
                m_alert.show('时长不能为0','error');

                self.cansend = false;

                return
            }

            var reg_num = new RegExp(/^[0-9]*$/);

            if(!reg_num.test(dur_time))
            {
                m_alert.show('请正确输入时长','error');

                //self._set_price(self.forms['number']['time'].get_value());

                //self.$('[data-role="total-price"]').html(self.model.get("model_selected_info").price);

                self.cansend = false;

                return
            }
            */
            /*
            if(price < 0 || isNaN(price))
            {
                m_alert.show('请正确输入价格','error');

                self.cansend = false;

                return
            }

            if(price > 10000)
            {
                m_alert.show('金额过高','error');

                self.cansend = false;

                return
            }

            if(dur_time < 0 || isNaN(dur_time))
            {
                m_alert.show('请正确输入时间','error');

                self.cansend = false;

                return
            }

            if(dur_time > 24)
            {
                m_alert.show('约拍时长不能超过24小时','error');

                self.cansend = false;

                return
            }
             */
            if (limit_num <= 0 || isNaN(limit_num)) {
                m_alert.show("请正确输入人数", "error");
                self.cansend = false;
                return;
            }
            if (utility.int(limit_num) > utility.int(self.get("templateModel").limit_num)) {
                m_alert.show("人数过多", "error");
                self.cansend = false;
                return;
            }
            if (date.trim() == "" || date.indexOf('data-role="notice-span"') > 0) {
                m_alert.show("请选择拍摄时间", "error");
                self.cansend = false;
                return;
            }
            if (self.$detail_location.val().trim() == "") {
                m_alert.show("详细地址不能为空", "error");
                self.cansend = false;
                return;
            }
            console.log(self.model.get("model_selected_info"));
            if (self.model.get("model_selected_info") && self.model.get("model_selected_info").text == "人体" && !self.is_receive) {
                self.cansend = false;
                self.get("agreement_view_obj").show();
                return;
            }
            console.log(self.model.get("model_selected_info"));
            var style = self.model.get("model_selected_info").text;
            if (self.get("is_from_custom_params")) {
                style = self.model.get("model_selected_info").style;
                self.model.set("user_name", self.model.get("model_selected_info").user_name);
            }
            self.model.set("model_selected_info", $.extend(self.model.get("model_selected_info"), {
                style: style,
                // 风格
                //price  : price, // 单价
                //hour : dur_time,// 时长
                limit_num: limit_num,
                //人数上限
                total_price: self.model.get("model_selected_info").price,
                // 总价
                can_use_balance: available_balance > 0 ? 1 : 0,
                //type  : type.length && type[0].text || '',// 类型
                date: date,
                // 日期
                available_balance: available_balance,
                //自己的钱包
                address: address
            }));
            console.log(self.model.get("model_selected_info"));
        },
        render: function() {
            var self = this;
            var view_port_height = self.reset_viewport_height();
            self.$container.height(view_port_height);
            // 调用渲染函数
            View.prototype.render.apply(self);
            self.trigger("render");
            if (self.get("is_from_custom_params")) {
                self.$(".inside_arrow").addClass("fn-hide");
                self.$('[data-role="limit_num_str"]').addClass("fn-hide");
                var price = utility.int(self.model.get("model_selected_info").price);
                var hour = utility.int(self.model.get("model_selected_info").hour);
                self.model.get("model_selected_info").price = utility.float(price * hour);
                self.$('[data-role="detail_price"]').html(utility.float(price * hour));
            }
            return self;
        },
        reset_viewport_height: function() {
            return utility.get_view_port_height() - 95;
        },
        reset_scroll_height: function() {
            console.log("22");
            var self = this;
            var view_port_height = self.reset_viewport_height();
            self.$container.height(view_port_height);
            self.view_scroll_obj.refresh();
        }
    });
    module.exports = submit_application_view;
});

define("pai/vwx0.0.1-beta/model_date/submit_application/tpl/main-debug.handlebars", [ "utility/handlebars/1.3.0/runtime-debug" ], function(require, exports, module) {
    var Handlebars = require("utility/handlebars/1.3.0/runtime-debug");
    var template = Handlebars.template;
    module.exports = template(function(Handlebars, depth0, helpers, partials, data) {
        this.compilerInfo = [ 4, ">= 1.0.0" ];
        helpers = helpers || {};
        for (var key in Handlebars.helpers) {
            helpers[key] = helpers[key] || Handlebars.helpers[key];
        }
        data = data || {};
        var buffer = "", stack1, helper, functionType = "function", escapeExpression = this.escapeExpression, self = this;
        function program1(depth0, data) {
            return "fn-hide";
        }
        function program3(depth0, data) {
            var stack1;
            return escapeExpression((stack1 = (stack1 = depth0 && depth0.model_selected_info, 
            stack1 == null || stack1 === false ? stack1 : stack1.address), typeof stack1 === functionType ? stack1.apply(depth0) : stack1));
        }
        buffer += '<main role="main" class="submit_application wryh">\r\n    <!-- <header class="page-header wryh">\r\n                <div class="page-back" data-role="page-back" ><i class="icon icon-back-40x40"></i></div>\r\n                <div class="page-back" data-role="page-back"><i class="icon icon-add-06"></i></div>\r\n                提交约拍申请\r\n    </header> -->\r\n\r\n    <header class="nav-header mine-nav-header">\r\n        <div class="left-button-wrap" data-role="page-back">\r\n            <a><i class="icon icon-back"></i></a>\r\n        </div>\r\n\r\n        <h3 class="title">提交约拍申请</h3>\r\n        \r\n        <div class="right-button-wrap">\r\n            <a><i class="icon icon-cog"></i></a>\r\n        </div>\r\n    </header>\r\n    \r\n    <div class="content-body">\r\n            <div class="procedure-1" data-role="container">\r\n                <div>\r\n                <!-- 头部模块 start  -->\r\n                <div class="procedure-header-mod">\r\n                    <ul class="step">\r\n                        <li class="current">提交约拍申请</li>\r\n                        <li>支付</li>\r\n                        <li>提交成功</li>\r\n                    </ul>\r\n                    <ul class="num">\r\n                        <li class="common current">\r\n                            <i class="num-icon">1</i>\r\n                            <div class="line-grey"></div>\r\n                            <div class="line-red"></div>\r\n                        </li>\r\n                        <li class="common ">\r\n                            <i class="num-icon">2</i>\r\n                            <div class="line-grey"></div>\r\n                            <div class="line-red"></div>\r\n                        </li>\r\n                        <li class="common ">\r\n                            <i class="num-icon">3</i>\r\n                            <div class="line-grey"></div>\r\n                            <div class="line-red"></div>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                <!-- 头部模块 end  -->\r\n                <div class="line exp ';
        stack1 = helpers["if"].call(depth0, (stack1 = depth0 && depth0.model_selected_info, 
        stack1 == null || stack1 === false ? stack1 : stack1.is_discount), {
            hash: {},
            inverse: self.noop,
            fn: self.program(1, program1, data),
            data: data
        });
        if (stack1 || stack1 === 0) {
            buffer += stack1;
        }
        buffer += ' fn-hide">\r\n                    <div class="notice">单价</div>\r\n                    <div class="data_input">\r\n                        <div class="side_border"></div>\r\n                        <div class="inside">\r\n                            <div class="inside_input">\r\n                                <div class="pre-price" data-role="pre-price">12</div>\r\n                                <div class="details fn-hide" data-role="pre-price" data-input-name="pre-price"></div>\r\n                                <div class="inside_arrow exp" style="width: 100px;">元/小时</div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div class="line exp ';
        stack1 = helpers["if"].call(depth0, (stack1 = depth0 && depth0.model_selected_info, 
        stack1 == null || stack1 === false ? stack1 : stack1.is_discount), {
            hash: {},
            inverse: self.noop,
            fn: self.program(1, program1, data),
            data: data
        });
        if (stack1 || stack1 === 0) {
            buffer += stack1;
        }
        buffer += ' fn-hide">\r\n                    <div class="notice">时长</div>\r\n                    <div class="data_input">\r\n                        <div class="side_border"></div>\r\n                        <div class="inside exp">\r\n                            <div class="inside_input" data-role="begin-time">\r\n                                <div class="details" data-role="number-btn-container-for-time" data-input-name="time"></div>\r\n                                <div class="inside_arrow">\r\n                                    小时\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n                <div class="line exp mt fn-hide">\r\n                    <div class="notice">总价</div>\r\n                    <div class="data_input">\r\n                        <div class="side_border"></div>\r\n                        <div class="inside">\r\n                            <div class="inside_input">\r\n                                <div class="total-price" data-role="total-price"></div>\r\n                                <div class="details fn-hide"  data-input-name="total-price"></div>\r\n                                <div class="inside_arrow exp">元</div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="line exp mt">\r\n                    <div class="notice">价格</div>\r\n                    <div class="data_input">\r\n                        <div class="side_border"></div>\r\n                        <div class="inside">\r\n                            <div class="inside_input">\r\n                                <div class="show_detail">\r\n                                    <div class="show" data-role="detail_price">' + escapeExpression((stack1 = (stack1 = depth0 && depth0.model_selected_info, 
        stack1 == null || stack1 === false ? stack1 : stack1.combo_text), typeof stack1 === functionType ? stack1.apply(depth0) : stack1)) + '</div>\r\n                                    <!--div class="show exp">' + escapeExpression((stack1 = (stack1 = depth0 && depth0.model_selected_info, 
        stack1 == null || stack1 === false ? stack1 : stack1.continue_text), typeof stack1 === functionType ? stack1.apply(depth0) : stack1)) + '</div-->\r\n                                </div>\r\n                            <!--div class="total-price" data-role="total-price-v2"></div>\r\n                            <div class="details"  data-input-name="total-price">' + escapeExpression((stack1 = (stack1 = depth0 && depth0.model_selected_info, 
        stack1 == null || stack1 === false ? stack1 : stack1.continue_text), typeof stack1 === functionType ? stack1.apply(depth0) : stack1)) + '</div-->\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="data-area fn-hide">\r\n\r\n                    <div class="choosen">\r\n                        <div class="notice">风格</div>\r\n                        <div class="style" data-role="choosen_style_group">\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n                <div class="line mt b fn-hide" data-role="btn-more-sec">\r\n                    <div class="notice">选填项</div>\r\n                    <div class="data_input">\r\n                        <div class="inside" >\r\n                            <div class="inside_input" >\r\n                                <div class="details"></div>\r\n\r\n                            </div>\r\n                            <div class="inside_arrow" >\r\n                                <i class="icon icon-allow exp"></i>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n                <div class="op">\r\n                    <div class="content-empty fn-hide" data-role="content-empty"></div>\r\n                    <div class="content-box" data-role="content-box">\r\n                        <div class="item item-two select-row-container fn-hide">\r\n                            <div class="item item-two select-row-container">\r\n                                <div class="lbox lbox-two ltime">时间：</div>\r\n                                <div class="select-container">\r\n                                    <div class="cvox" data-role="select-container-for-year" data-input-name="year">\r\n                                    </div>\r\n                                    <label>年</label>\r\n                                </div>\r\n                                <div class="select-container">\r\n                                    <div class="cvox" data-role="select-container-for-month" data-input-name="month">\r\n                                    </div>\r\n                                    <label>月</label>\r\n                                </div>\r\n                                <div class="select-container">\r\n                                    <div class="cvox" data-role="select-container-for-day" data-input-name="day">\r\n                                    </div>\r\n                                    <label>日</label>\r\n                                </div>\r\n                                <div class="select-container">\r\n                                    <div class="cvox" data-role="select-container-for-hour" data-input-name="hour">\r\n                                    </div>\r\n                                    <label>时</label>\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div class="line mt">\r\n                            <div class="notice">时间</div>\r\n                            <div class="data_input">\r\n                                <div class="side_border exp"></div>\r\n                                <div class="inside b" data-role="time">\r\n                                    <div class="inside_input">\r\n                                        <div class="details" data-role="time_str"><span class="notice-span" data-role="notice-span">请选择到场拍摄时间</span></div>\r\n\r\n                                    </div>\r\n                                    <div class="inside_arrow">\r\n                                        <i class="icon icon-allow mt"></i>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div class="line">\r\n                            <div class="notice">地址</div>\r\n                            <div class="data_input">\r\n                                <div class="side_border exp"></div>\r\n                                <div class="inside b" data-role="address">\r\n                                    <div class="inside_input" >\r\n                                        <div class="details" data-role="address_str">\r\n\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div class="inside_arrow">\r\n                                        <i class="icon icon-allow mt"></i>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class="line b">\r\n                            <div class="notice"></div>\r\n                            <div class="data_input">\r\n                                <div class="side_border exp"></div>\r\n                                <div class="inside">\r\n                                    <div class="inside_input">\r\n                                        <div class="details">\r\n                                            <input value="';
        stack1 = helpers["if"].call(depth0, (stack1 = depth0 && depth0.model_selected_info, 
        stack1 == null || stack1 === false ? stack1 : stack1.address), {
            hash: {},
            inverse: self.noop,
            fn: self.program(3, program3, data),
            data: data
        });
        if (stack1 || stack1 === 0) {
            buffer += stack1;
        }
        buffer += '" class="inh" type="text" data-role="detail-location" data-input-name="detail-location" placeholder="请输入详细地址"/>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class="line exp b k mt">\r\n                            <div class="notice">几人去拍</div>\r\n                            <div class="data_input">\r\n                                <div class="side_border"></div>\r\n                                <div class="inside exp k">\r\n                                    <div class="inside_input exp" data-role="limit_num">\r\n                                        <div class="details" data-role="number-btn-container-for-limit_num" data-input-name="limit_num"></div>\r\n                                        <div class="inside_arrow"></div>\r\n\r\n                                    </div>\r\n                                    <p class="exp_notice">模特限定了每次拍摄人数不得超过';
        if (helper = helpers.limit_num) {
            stack1 = helper.call(depth0, {
                hash: {},
                data: data
            });
        } else {
            helper = depth0 && depth0.limit_num;
            stack1 = typeof helper === functionType ? helper.call(depth0, {
                hash: {},
                data: data
            }) : helper;
        }
        buffer += escapeExpression(stack1) + '人</p>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div class="line inh fn-hide">\r\n                            <div class="notice">类型</div>\r\n                            <div class="data_input">\r\n                                <div class="side_border axp"></div>\r\n                                <div class="inside">\r\n                                    <div class="inside_input">\r\n                                        <div class="details" data-role="choosen_type_group">\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class="item item-two select-row-container fn-hide">\r\n                            <div class="lbox lbox-two ltime">地点</div>\r\n                            <div class="select-container">\r\n                                <div class="cvox" data-role="select-container-for-province" data-input-name="province">\r\n                                </div>\r\n                                <div class="cvox" data-role="select-container-for-city" data-input-name="city">\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class="item item-three fn-hide">\r\n                            <div class="lbox lbox-two">&nbsp;</div>\r\n                            <div class="cvox">\r\n                                <input type="text"  placeholder="请填写拍摄地点 ">\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="empty"></div>\r\n                <!--  -->\r\n                </div>\r\n            </div>\r\n            <div class="submit-application-page-footer">\r\n                <div class="btn_container">\r\n                    <button class="ui-button ui-button-size-middle ui-button-block ui-button-primary ui-button-size-radius-large" data-role="submit-application-btn">\r\n                        <span class="ui-button-content">提交</span>\r\n                    </button>\r\n                    <!--button  class="ui-button ui-button-primary ui-button-size-middle ui-button-block ">\r\n                        <span class="ui-button-content"></span>\r\n                    </button-->\r\n                </div>\r\n                <!-- <div class="btn" data-role="submit-application-btn" >提交</div> -->\r\n            </div>\r\n\r\n\r\n    </div>\r\n\r\n\r\n</main>';
        return buffer;
    });
});

/**
 * Created by nolestLam on 2014/8/26.
 */
/**
 * 按钮组
 * templateModel :
 * {
 *    list : list //对象arr [{...},{...},{...}]
 * }
 * [int]btn_per_line : 2, //每行按钮个数
 * [string]line_margin : '0px 0px 15px 0px', //每行margin
 * [string]btn_width : '143px', //按钮宽度
 * [obj]parentNode: self.$btn_container,
 * [Boolean]is_multiply : false
 */
define("pai/vwx0.0.1-beta/widget/choosen_group/view-debug", [ "$-debug", "pai/vwx0.0.1-beta/frame/page_control-debug", "utility/backbone/1.1.2/backbone-debug", "pai/vwx0.0.1-beta/frame/ua-debug", "pai/vwx0.0.1-beta/frame/page-debug", "utility/zepto/modules/data/1.1.4/data-debug", "utility/hammer/plugins/jquery.hammer/1.1.3/jquery.hammer-debug", "utility/underscore/1.6.0/underscore-debug", "pai/vwx0.0.1-beta/common/view-debug", "utility/handlebars/1.3.0/runtime-debug", "pai/vwx0.0.1-beta/common/utility-debug", "pai/vwx0.0.1-beta/common/cross_domain_storage-debug", "matcha/cookie/1.0.0/cookie-debug" ], function(require, exports, module) {
    var $ = require("$-debug");
    var page_control = require("pai/vwx0.0.1-beta/frame/page_control-debug");
    var View = require("pai/vwx0.0.1-beta/common/view-debug");
    var utility = require("pai/vwx0.0.1-beta/common/utility-debug");
    var item_tpl = require("pai/vwx0.0.1-beta/widget/choosen_group/tpl/choosen_group-debug.handlebars");
    module.exports = View.extend({
        attrs: {
            template: item_tpl,
            css: "",
            is_multiply: false
        },
        events: {
            "tap [data-role=ui-choosen-btn]": function(ev) {
                var self = this;
                var $cur_btn = $(ev.currentTarget);
                var selected_value = $cur_btn.attr("data-selected-value");
                var id = $cur_btn.attr("data-selected-id");
                var params = $cur_btn.attr("data-selected-params");
                var remark = $cur_btn.attr("data-selected-remark");
                var disabled = $cur_btn.attr("data-disabled");
                var is_multiply = self.is_multiply;
                if (disabled) {
                    return;
                }
                if (!is_multiply) {
                    self._clear_btn_selected();
                }
                self._set_btn_selected($cur_btn);
                self.trigger("success:selected", {
                    value: selected_value,
                    id: id,
                    selected: $cur_btn.hasClass("current"),
                    params: params,
                    remark: remark
                });
            }
        },
        _parseElement: function() {
            var self = this;
            var template_model = self.get("templateModel");
            var divide_obj = {
                list: [],
                btn_width: self.get("btn_width"),
                //按钮宽度
                line_margin: self.get("line_margin")
            };
            var list_length = template_model.list.length;
            var btn_per_line = self.get("btn_per_line") ? self.get("btn_per_line") : 3;
            var line_num = Math.ceil(list_length / btn_per_line);
            for (var i = 0; i < line_num; i++) {
                divide_obj.list.push(template_model.list.slice(btn_per_line * i, btn_per_line * (i + 1)));
            }
            self.set("templateModel", divide_obj);
            View.prototype._parseElement.apply(self);
        },
        _setup_events: function() {
            var self = this;
        },
        setup: function() {
            var self = this;
            // 是否多选
            self.is_multiply = self.get("is_multiply") || false;
            // 所有的选择模块
            self.$choosen_btn = self.$("[data-role=ui-choosen-btn]");
            self._setup_events();
            // 设置样式
            self._set_item_size();
        },
        get_obj_by_idx: function(idx) {
            var self = this;
            return self.$choosen_btn.eq(idx);
        },
        show: function() {
            var self = this;
            self.$el.removeClass("fn-hide");
        },
        hide: function() {
            var self = this;
            self.$el.addClass("fn-hide");
        },
        _set_item_size: function() {
            var self = this;
            var css = self.get("css");
            if (css) {
                self.$choosen_btn.addClass(css);
            }
        },
        /**
         * 设置按钮选中
         * @param btn
         * @private
         */
        _set_btn_selected: function(btn) {
            var $btn = btn;
            $btn.toggleClass("current");
        },
        /**
         * 清除选中按钮样式
         * @private
         */
        _clear_btn_selected: function() {
            var self = this;
            self.$choosen_btn.removeClass("current");
        },
        render: function() {
            var self = this;
            // 调用渲染函数
            View.prototype.render.apply(self);
            self.trigger("render");
            return self;
        },
        /**
         * 获取选中的值
         * @returns {Array}
         */
        get_value: function(key) {
            var self = this;
            var value_arr = [];
            var $selected_btn_group = self.$el.find(".current[data-role=ui-choosen-btn]");
            $selected_btn_group.each(function(i, obj) {
                value_arr.push({
                    text: $(obj).attr("data-selected-value"),
                    id: $(obj).attr("data-selected-id"),
                    params: $(obj).attr("data-selected-params")
                });
            });
            return value_arr;
        },
        /**
         * 获取选中个数
         * @returns {Number}
         */
        get_selected_count: function() {
            var self = this;
            var value_arr = self.get_selected_value();
            return value_arr.length;
        }
    });
});

define("pai/vwx0.0.1-beta/widget/choosen_group/tpl/choosen_group-debug.handlebars", [ "utility/handlebars/1.3.0/runtime-debug" ], function(require, exports, module) {
    var Handlebars = require("utility/handlebars/1.3.0/runtime-debug");
    var template = Handlebars.template;
    module.exports = template(function(Handlebars, depth0, helpers, partials, data) {
        this.compilerInfo = [ 4, ">= 1.0.0" ];
        helpers = helpers || {};
        for (var key in Handlebars.helpers) {
            helpers[key] = helpers[key] || Handlebars.helpers[key];
        }
        data = data || {};
        var buffer = "", stack1, helper, functionType = "function", escapeExpression = this.escapeExpression, self = this;
        function program1(depth0, data, depth1) {
            var buffer = "", stack1;
            buffer += '\r\n        <div class="ui-choosen-line" style="';
            stack1 = helpers["with"].call(depth0, depth1, {
                hash: {},
                inverse: self.noop,
                fn: self.program(2, program2, data),
                data: data
            });
            if (stack1 || stack1 === 0) {
                buffer += stack1;
            }
            buffer += '">\r\n            ';
            stack1 = helpers.each.call(depth0, depth0, {
                hash: {},
                inverse: self.noop,
                fn: self.programWithDepth(4, program4, data, depth1),
                data: data
            });
            if (stack1 || stack1 === 0) {
                buffer += stack1;
            }
            buffer += "\r\n        </div>\r\n    ";
            return buffer;
        }
        function program2(depth0, data) {
            var buffer = "", stack1, helper;
            buffer += "margin:";
            if (helper = helpers.line_margin) {
                stack1 = helper.call(depth0, {
                    hash: {},
                    data: data
                });
            } else {
                helper = depth0 && depth0.line_margin;
                stack1 = typeof helper === functionType ? helper.call(depth0, {
                    hash: {},
                    data: data
                }) : helper;
            }
            buffer += escapeExpression(stack1) + ";";
            return buffer;
        }
        function program4(depth0, data, depth2) {
            var buffer = "", stack1, helper;
            buffer += '\r\n                    <div style="';
            stack1 = helpers["with"].call(depth0, depth2, {
                hash: {},
                inverse: self.noop,
                fn: self.program(5, program5, data),
                data: data
            });
            if (stack1 || stack1 === 0) {
                buffer += stack1;
            }
            buffer += '" class="ui-choosen-btn ';
            stack1 = helpers["if"].call(depth0, depth0 && depth0.selected, {
                hash: {},
                inverse: self.noop,
                fn: self.program(7, program7, data),
                data: data
            });
            if (stack1 || stack1 === 0) {
                buffer += stack1;
            }
            buffer += " ";
            stack1 = helpers["if"].call(depth0, depth0 && depth0.disabled, {
                hash: {},
                inverse: self.noop,
                fn: self.program(9, program9, data),
                data: data
            });
            if (stack1 || stack1 === 0) {
                buffer += stack1;
            }
            buffer += '" data-disabled="';
            stack1 = helpers["if"].call(depth0, depth0 && depth0.disabled, {
                hash: {},
                inverse: self.noop,
                fn: self.program(11, program11, data),
                data: data
            });
            if (stack1 || stack1 === 0) {
                buffer += stack1;
            }
            buffer += '" data-selected-value="';
            if (helper = helpers.text) {
                stack1 = helper.call(depth0, {
                    hash: {},
                    data: data
                });
            } else {
                helper = depth0 && depth0.text;
                stack1 = typeof helper === functionType ? helper.call(depth0, {
                    hash: {},
                    data: data
                }) : helper;
            }
            buffer += escapeExpression(stack1) + '" data-selected-id="';
            if (helper = helpers.id) {
                stack1 = helper.call(depth0, {
                    hash: {},
                    data: data
                });
            } else {
                helper = depth0 && depth0.id;
                stack1 = typeof helper === functionType ? helper.call(depth0, {
                    hash: {},
                    data: data
                }) : helper;
            }
            buffer += escapeExpression(stack1) + '" data-selected-params="';
            if (helper = helpers.params) {
                stack1 = helper.call(depth0, {
                    hash: {},
                    data: data
                });
            } else {
                helper = depth0 && depth0.params;
                stack1 = typeof helper === functionType ? helper.call(depth0, {
                    hash: {},
                    data: data
                }) : helper;
            }
            buffer += escapeExpression(stack1) + '" data-selected-remark="';
            if (helper = helpers.remark) {
                stack1 = helper.call(depth0, {
                    hash: {},
                    data: data
                });
            } else {
                helper = depth0 && depth0.remark;
                stack1 = typeof helper === functionType ? helper.call(depth0, {
                    hash: {},
                    data: data
                }) : helper;
            }
            buffer += escapeExpression(stack1) + '" data-selected-price="';
            if (helper = helpers.price) {
                stack1 = helper.call(depth0, {
                    hash: {},
                    data: data
                });
            } else {
                helper = depth0 && depth0.price;
                stack1 = typeof helper === functionType ? helper.call(depth0, {
                    hash: {},
                    data: data
                }) : helper;
            }
            buffer += escapeExpression(stack1) + '" data-role="ui-choosen-btn">';
            if (helper = helpers.text) {
                stack1 = helper.call(depth0, {
                    hash: {},
                    data: data
                });
            } else {
                helper = depth0 && depth0.text;
                stack1 = typeof helper === functionType ? helper.call(depth0, {
                    hash: {},
                    data: data
                }) : helper;
            }
            buffer += escapeExpression(stack1) + "</div>\r\n            ";
            return buffer;
        }
        function program5(depth0, data) {
            var buffer = "", stack1, helper;
            buffer += "width:";
            if (helper = helpers.btn_width) {
                stack1 = helper.call(depth0, {
                    hash: {},
                    data: data
                });
            } else {
                helper = depth0 && depth0.btn_width;
                stack1 = typeof helper === functionType ? helper.call(depth0, {
                    hash: {},
                    data: data
                }) : helper;
            }
            buffer += escapeExpression(stack1) + ";";
            return buffer;
        }
        function program7(depth0, data) {
            return "current";
        }
        function program9(depth0, data) {
            return "disabled";
        }
        function program11(depth0, data) {
            return "1";
        }
        buffer += '<div class="ui-choosen-group" data-role="ui-choosen-group" data-group-name="';
        if (helper = helpers.group_name) {
            stack1 = helper.call(depth0, {
                hash: {},
                data: data
            });
        } else {
            helper = depth0 && depth0.group_name;
            stack1 = typeof helper === functionType ? helper.call(depth0, {
                hash: {},
                data: data
            }) : helper;
        }
        buffer += escapeExpression(stack1) + '" style="';
        if (helper = helpers.style) {
            stack1 = helper.call(depth0, {
                hash: {},
                data: data
            });
        } else {
            helper = depth0 && depth0.style;
            stack1 = typeof helper === functionType ? helper.call(depth0, {
                hash: {},
                data: data
            }) : helper;
        }
        buffer += escapeExpression(stack1) + '" >\r\n    ';
        stack1 = helpers.each.call(depth0, depth0 && depth0.list, {
            hash: {},
            inverse: self.noop,
            fn: self.programWithDepth(1, program1, data, depth0),
            data: data
        });
        if (stack1 || stack1 === 0) {
            buffer += stack1;
        }
        buffer += "\r\n</div>\r\n";
        return buffer;
    });
});

/**
 * 数字表单按钮
 * hdw 2014.8.26
 */
define("pai/vwx0.0.1-beta/widget/number_btn/view-debug", [ "$-debug", "pai/vwx0.0.1-beta/frame/page_control-debug", "utility/backbone/1.1.2/backbone-debug", "pai/vwx0.0.1-beta/frame/ua-debug", "pai/vwx0.0.1-beta/frame/page-debug", "utility/zepto/modules/data/1.1.4/data-debug", "utility/hammer/plugins/jquery.hammer/1.1.3/jquery.hammer-debug", "utility/underscore/1.6.0/underscore-debug", "pai/vwx0.0.1-beta/common/view-debug", "utility/handlebars/1.3.0/runtime-debug", "pai/vwx0.0.1-beta/common/utility-debug", "pai/vwx0.0.1-beta/common/cross_domain_storage-debug", "matcha/cookie/1.0.0/cookie-debug", "pai/vwx0.0.1-beta/ui/m_alert/view-debug" ], function(require, exports, module) {
    var $ = require("$-debug");
    var page_control = require("pai/vwx0.0.1-beta/frame/page_control-debug");
    var View = require("pai/vwx0.0.1-beta/common/view-debug");
    var utility = require("pai/vwx0.0.1-beta/common/utility-debug");
    var m_alert = require("pai/vwx0.0.1-beta/ui/m_alert/view-debug");
    var item_tpl = require("pai/vwx0.0.1-beta/widget/number_btn/tpl/number_btn-debug.handlebars");
    module.exports = View.extend({
        attrs: {
            template: item_tpl,
            min_value: 0,
            max_value: 999999999999,
            step: 100,
            disable: false
        },
        events: {
            "tap [data-role=add]": function() {
                var self = this;
                self.add_num();
            },
            "tap [data-role=minus]": function() {
                var self = this;
                self.minus_num();
            }
        },
        _parseElement: function() {
            var self = this;
            var template_model = self.get("templateModel");
            self.set("templateModel", template_model);
            View.prototype._parseElement.apply(self);
        },
        _setup_events: function() {
            var self = this;
            //获取焦点取整
            self.$('[data-role="input-num-btn"]').on("focus", function() {
                self._value = self.$number_input.val();
            });
            //失焦取整
            self.$('[data-role="input-num-btn"]').on("change blur", function() {
                var value = self.to_number(self.$number_input.val());
                if (value < self.min_value) {
                    m_alert.show("所填数字不得小于" + self.min_value, "error");
                    self.$number_input.val(self._value);
                    return;
                } else if (value > self.max_value) {
                    m_alert.show("所填数字不得大于" + self.max_value, "error");
                    self.$number_input.val(self._value);
                }
                if (self.is_floor) {
                    self.$number_input.val(Math.floor(value));
                }
            });
        },
        add_num: function() {
            var self = this;
            if (self.get("disable")) {
                return;
            }
            var step = self.step;
            var cur_value = utility.int(self.$number_input.val());
            cur_value = cur_value + step;
            if (cur_value > self.max_value) {
                m_alert.show("所填数字不得大于" + self.max_value, "error");
                return;
            }
            self.set_vaule(cur_value);
            self.trigger("add_value:success", cur_value);
        },
        minus_num: function() {
            var self = this;
            if (self.get("disable")) {
                return;
            }
            var step = self.step;
            var cur_value = utility.int(self.$number_input.val());
            cur_value = cur_value - step;
            if (cur_value < self.min_value) {
                m_alert.show("所填数字不得小于" + self.min_value, "error");
                return;
            }
            self.set_vaule(cur_value);
            self.trigger("minus:success", cur_value);
        },
        set_vaule: function(num) {
            var self = this;
            self.$number_input && self.$number_input.val(utility.int(num));
        },
        get_value: function() {
            var self = this;
            return self.$number_input.val();
        },
        setup: function() {
            var self = this;
            self.min_value = utility.int(self.get("min_value"));
            self.max_value = utility.int(self.get("max_value"));
            self.step = utility.int(self.get("step"));
            self.disable = self.get("disable");
            self.value = utility.int(self.get("value"));
            self.is_floor = self.get("is_floor");
            // 设置加减按钮
            self.$add_btn = self.$("[data-role=add]");
            self.$minus = self.$("[data-role=minus]");
            self.$number_input = self.$("[data-role=input-num-btn]");
            // 安装事件
            self._setup_events();
            // 初始化参数
            self.set_vaule(self.value);
        },
        show: function() {
            var self = this;
            self.$el.removeClass("fn-hide");
        },
        hide: function() {
            var self = this;
            self.$el.addClass("fn-hide");
        },
        /**
         * 格式化数字
         * @returns Float
         */
        to_number: function(s) {
            return parseFloat(s, 10) || 0;
        }
    });
});

define("pai/vwx0.0.1-beta/widget/number_btn/tpl/number_btn-debug.handlebars", [ "utility/handlebars/1.3.0/runtime-debug" ], function(require, exports, module) {
    var Handlebars = require("utility/handlebars/1.3.0/runtime-debug");
    var template = Handlebars.template;
    module.exports = template(function(Handlebars, depth0, helpers, partials, data) {
        this.compilerInfo = [ 4, ">= 1.0.0" ];
        helpers = helpers || {};
        for (var key in Handlebars.helpers) {
            helpers[key] = helpers[key] || Handlebars.helpers[key];
        }
        data = data || {};
        var buffer = "", stack1, helper, functionType = "function", escapeExpression = this.escapeExpression, self = this;
        function program1(depth0, data) {
            return 'readonly="true"';
        }
        buffer += '<!--div class="ui-number-btn cbox">\r\n    <div class="b" data-role="minus"><i class="icon icon-reduce"></i></div>\r\n    <input type="';
        if (helper = helpers.type) {
            stack1 = helper.call(depth0, {
                hash: {},
                data: data
            });
        } else {
            helper = depth0 && depth0.type;
            stack1 = typeof helper === functionType ? helper.call(depth0, {
                hash: {},
                data: data
            }) : helper;
        }
        buffer += escapeExpression(stack1) + '" ';
        stack1 = helpers["if"].call(depth0, depth0 && depth0.disable, {
            hash: {},
            inverse: self.noop,
            fn: self.program(1, program1, data),
            data: data
        });
        if (stack1 || stack1 === 0) {
            buffer += stack1;
        }
        buffer += '  data-role="input-num-btn"  class="input-text">\r\n    <div class="b" data-role="add"><i class="icon icon-add"></i></div>\r\n</div-->\r\n<div class="ui-add-reduce">\r\n    <div class="add" data-role="minus"><i class="icon icon-reduce-32x32-m"></i></div>\r\n    <div class="input-area"><input type="';
        if (helper = helpers.type) {
            stack1 = helper.call(depth0, {
                hash: {},
                data: data
            });
        } else {
            helper = depth0 && depth0.type;
            stack1 = typeof helper === functionType ? helper.call(depth0, {
                hash: {},
                data: data
            }) : helper;
        }
        buffer += escapeExpression(stack1) + '" ';
        stack1 = helpers["if"].call(depth0, depth0 && depth0.disable, {
            hash: {},
            inverse: self.noop,
            fn: self.program(1, program1, data),
            data: data
        });
        if (stack1 || stack1 === 0) {
            buffer += stack1;
        }
        buffer += '  data-role="input-num-btn"  class="input"></div>\r\n    <div class="reduce " data-role="add"><i class="icon icon-add-32x32-m"></i></div>\r\n</div>';
        return buffer;
    });
});

/**
 * 下拉表单
 * hdw 2014.8.27
 */
define("pai/vwx0.0.1-beta/widget/select/view-debug", [ "$-debug", "pai/vwx0.0.1-beta/frame/page_control-debug", "utility/backbone/1.1.2/backbone-debug", "pai/vwx0.0.1-beta/frame/ua-debug", "pai/vwx0.0.1-beta/frame/page-debug", "utility/zepto/modules/data/1.1.4/data-debug", "utility/hammer/plugins/jquery.hammer/1.1.3/jquery.hammer-debug", "utility/underscore/1.6.0/underscore-debug", "pai/vwx0.0.1-beta/common/view-debug", "utility/handlebars/1.3.0/runtime-debug", "pai/vwx0.0.1-beta/common/utility-debug", "pai/vwx0.0.1-beta/common/cross_domain_storage-debug", "matcha/cookie/1.0.0/cookie-debug" ], function(require, exports, module) {
    var $ = require("$-debug");
    var page_control = require("pai/vwx0.0.1-beta/frame/page_control-debug");
    var View = require("pai/vwx0.0.1-beta/common/view-debug");
    var utility = require("pai/vwx0.0.1-beta/common/utility-debug");
    var item_tpl = require("pai/vwx0.0.1-beta/widget/select/tpl/select-debug.handlebars");
    var options_tpl = require("pai/vwx0.0.1-beta/widget/select/tpl/options-debug.handlebars");
    module.exports = View.extend({
        attrs: {
            template: item_tpl
        },
        events: {
            'change [data-role="select"]': function() {
                var self = this;
            }
        },
        _parseElement: function() {
            var self = this;
            var template_model = self.get("templateModel");
            var defaulut_key = template_model.defaulut_key || false;
            console.log(defaulut_key);
            // 设置默认选中选
            if (template_model.options && template_model.options.length > 0) {
                for (var i = 0; i < template_model.options.length; i++) {
                    if (!defaulut_key) {
                        template_model.options[0].selected = true;
                        console.log(template_model.options[i].value);
                        break;
                    }
                    if (defaulut_key == template_model.options[i].value) {
                        template_model.options[i].selected = true;
                        break;
                    }
                }
            }
            self.set("templateModel", template_model);
            View.prototype._parseElement.apply(self);
        },
        _setup_events: function() {
            var self = this;
            self.$select_control.on("change", function(ev) {
                var $selected_options = self.$select_control.find('[data-role="options"]');
                var value = self.$select_control.val();
                var index = self.$select_control.get(0).selectedIndex;
                var text = self.$select_control.find('[data-role="options"]').eq(index).text();
                var id = self.$select_control.find('[data-role="options"]').eq(index).attr("data-id");
                $selected_options.removeAttr("selected");
                $selected_options.eq(index).attr("selected", true);
                var data = {
                    value: value,
                    text: text,
                    index: index,
                    id: id
                };
                self.set_value(data);
                console.log(data);
                self.trigger("change:options", data);
            });
        },
        set_value: function(data) {
            var self = this;
            self.selected_data = data;
        },
        get_value: function() {
            var self = this;
            return self.selected_data;
        },
        get_default_value: function() {
            var self = this;
            var $selected_options = self.$select_control.find("[selected]");
            var id = $selected_options.attr("data-id");
            var value = $selected_options.val();
            var text = $selected_options.text();
            var index = self.$select_control.get(0).selectedIndex;
            var data = {
                value: value,
                text: text,
                index: index,
                id: id
            };
            self.set_value(data);
            return data;
        },
        set_options: function(data) {
            var self = this;
            var html_str = options_tpl(data);
            self.$select_control.html(html_str);
        },
        setup: function() {
            var self = this;
            var template_model = self.get("templateModel");
            self.$select_control = self.$el;
            // 安装事件
            self._setup_events();
            self.set_options(template_model);
            self.get_default_value();
        },
        show: function() {
            var self = this;
            self.$el.removeClass("fn-hide");
        },
        hide: function() {
            var self = this;
            self.$el.addClass("fn-hide");
        }
    });
});

define("pai/vwx0.0.1-beta/widget/select/tpl/select-debug.handlebars", [ "utility/handlebars/1.3.0/runtime-debug" ], function(require, exports, module) {
    var Handlebars = require("utility/handlebars/1.3.0/runtime-debug");
    var template = Handlebars.template;
    module.exports = template(function(Handlebars, depth0, helpers, partials, data) {
        this.compilerInfo = [ 4, ">= 1.0.0" ];
        helpers = helpers || {};
        for (var key in Handlebars.helpers) {
            helpers[key] = helpers[key] || Handlebars.helpers[key];
        }
        data = data || {};
        return '<select data-role="select" >\r\n\r\n</select>';
    });
});

define("pai/vwx0.0.1-beta/widget/select/tpl/options-debug.handlebars", [ "utility/handlebars/1.3.0/runtime-debug" ], function(require, exports, module) {
    var Handlebars = require("utility/handlebars/1.3.0/runtime-debug");
    var template = Handlebars.template;
    module.exports = template(function(Handlebars, depth0, helpers, partials, data) {
        this.compilerInfo = [ 4, ">= 1.0.0" ];
        helpers = helpers || {};
        for (var key in Handlebars.helpers) {
            helpers[key] = helpers[key] || Handlebars.helpers[key];
        }
        data = data || {};
        var buffer = "", stack1, functionType = "function", escapeExpression = this.escapeExpression, self = this;
        function program1(depth0, data) {
            var buffer = "", stack1, helper;
            buffer += '\r\n    <option data-id="';
            if (helper = helpers.id) {
                stack1 = helper.call(depth0, {
                    hash: {},
                    data: data
                });
            } else {
                helper = depth0 && depth0.id;
                stack1 = typeof helper === functionType ? helper.call(depth0, {
                    hash: {},
                    data: data
                }) : helper;
            }
            buffer += escapeExpression(stack1) + '" data-role="options" value="';
            if (helper = helpers.value) {
                stack1 = helper.call(depth0, {
                    hash: {},
                    data: data
                });
            } else {
                helper = depth0 && depth0.value;
                stack1 = typeof helper === functionType ? helper.call(depth0, {
                    hash: {},
                    data: data
                }) : helper;
            }
            buffer += escapeExpression(stack1) + '" ';
            stack1 = helpers["if"].call(depth0, depth0 && depth0.selected, {
                hash: {},
                inverse: self.noop,
                fn: self.program(2, program2, data),
                data: data
            });
            if (stack1 || stack1 === 0) {
                buffer += stack1;
            }
            buffer += ">";
            if (helper = helpers.text) {
                stack1 = helper.call(depth0, {
                    hash: {},
                    data: data
                });
            } else {
                helper = depth0 && depth0.text;
                stack1 = typeof helper === functionType ? helper.call(depth0, {
                    hash: {},
                    data: data
                }) : helper;
            }
            buffer += escapeExpression(stack1) + "</option>\r\n";
            return buffer;
        }
        function program2(depth0, data) {
            return "selected";
        }
        stack1 = helpers.each.call(depth0, depth0 && depth0.options, {
            hash: {},
            inverse: self.noop,
            fn: self.program(1, program1, data),
            data: data
        });
        if (stack1 || stack1 === 0) {
            buffer += stack1;
        }
        buffer += "\r\n";
        return buffer;
    });
});

/**
 * 提交约拍申请 - 模型
 * nolestLam 2014.8.25
 */
define("pai/vwx0.0.1-beta/model_date/submit_application/model-debug", [ "pai/vwx0.0.1-beta/common/global_config-debug", "utility/backbone/1.1.2/backbone-debug" ], function(require, exports, module) {
    var global_config = require("pai/vwx0.0.1-beta/common/global_config-debug");
    var Backbone = require("utility/backbone/1.1.2/backbone-debug");
    module.exports = Backbone.Model.extend({
        idAttribute: "user_id",
        url: global_config.ajax_url.model_card,
        "default": {
            user_id: ""
        },
        /**
         * 安装事件
         * @private
         */
        _setup_events: function() {
            var self = this;
            self.on("before:fetch", function(xhr, xhrOptions) {
                self._get_info_xhr = xhr;
            }).on("success:fetch", function(xhr, xhrOptions) {}).on("complete:fetch", function(xhr, status) {
                delete self._get_info_xhr;
            });
        },
        /**
         * 转换数据格式
         * @param response
         * @returns {*}
         */
        parse: function(response) {
            if (response.result_data) {
                return response.result_data;
            }
            return response;
        },
        initialize: function(options) {},
        get_info: function() {
            var self = this;
            if (self._get_info_xhr) {
                return;
            }
            self.fetch({
                url: self.url,
                data: {},
                cache: false,
                beforeSend: function(xhr, options) {
                    self.trigger("before:fetch", xhr, options);
                },
                success: function(collection, response, options) {
                    self.trigger("success:fetch", response, options);
                },
                error: function(collection, response, options) {
                    self.trigger("error:fetch", response, options);
                },
                complete: function(xhr, status) {
                    self.trigger("complete:fetch", xhr, status);
                }
            });
        }
    });
});

/**
 * 首页 - 城市选择
 * 汤圆 2014.18.
 */
define("pai/vwx0.0.1-beta/model_date/agreement/view-debug", [ "$-debug", "pai/vwx0.0.1-beta/frame/page_control-debug", "utility/backbone/1.1.2/backbone-debug", "pai/vwx0.0.1-beta/frame/ua-debug", "pai/vwx0.0.1-beta/frame/page-debug", "utility/zepto/modules/data/1.1.4/data-debug", "utility/hammer/plugins/jquery.hammer/1.1.3/jquery.hammer-debug", "utility/underscore/1.6.0/underscore-debug", "pai/vwx0.0.1-beta/common/view-debug", "utility/handlebars/1.3.0/runtime-debug", "pai/vwx0.0.1-beta/common/utility-debug", "pai/vwx0.0.1-beta/common/cross_domain_storage-debug", "matcha/cookie/1.0.0/cookie-debug", "pai/vwx0.0.1-beta/common/template-helpers-debug", "pai/vwx0.0.1-beta/common/scroll-debug", "utility/iscroll/4.2.5/iscroll-debug", "pai/vwx0.0.1-beta/common/img-ready-debug", "pai/vwx0.0.1-beta/ui/m_alert/view-debug" ], function(require, exports, module) {
    var $ = require("$-debug");
    var page_control = require("pai/vwx0.0.1-beta/frame/page_control-debug");
    var View = require("pai/vwx0.0.1-beta/common/view-debug");
    var agreement = require("pai/vwx0.0.1-beta/model_date/agreement/tpl/main-debug.handlebars");
    var utility = require("pai/vwx0.0.1-beta/common/utility-debug");
    var templateHelpers = require("pai/vwx0.0.1-beta/common/template-helpers-debug");
    var Scroll = require("pai/vwx0.0.1-beta/common/scroll-debug");
    var m_alert = require("pai/vwx0.0.1-beta/ui/m_alert/view-debug");
    var agreement_view = View.extend({
        attrs: {
            template: agreement
        },
        events: {
            swiperight: function() {},
            "tap [data-role=page-back]": function(ev) {
                var self = this;
                self.hide();
            },
            "tap [data-role=btn-go-to]": function(ev) {
                var self = this;
                self.trigger("receive");
                self.hide();
            }
        },
        /**
         * 安装事件
         * @private
         */
        _setup_events: function() {
            var self = this;
            self._setup_scroll();
            //.once('render',self._render_after,self);
            self.view_scroll_obj.refresh();
        },
        /**
         * 安装滚动条
         * @private
         */
        _setup_scroll: function() {
            var self = this;
            var view_scroll_obj = Scroll(self.$container, {
                is_hide_dropdown: true
            });
            self.view_scroll_obj = view_scroll_obj;
        },
        /**
         * 安装底部导航
         * @private
         */
        _reset: function() {
            var self = this;
        },
        _add_one: function(model) {
            var self = this;
        },
        /**
         * 视图初始化入口
         */
        setup: function() {
            var self = this;
            // 配置交互对象
            self.$container = self.$("[data-role=container]");
            // 滚动容器
            // 安装事件
            self._setup_events();
        },
        render: function() {
            var self = this;
            // 调用渲染函数
            View.prototype.render.apply(self);
            self.trigger("render");
            return self;
        },
        show: function() {
            var self = this;
            self.$el.removeClass("fn-hide");
            self.refresh();
        },
        hide: function() {
            var self = this;
            self.$el.addClass("fn-hide");
            self.refresh();
        },
        refresh: function() {
            var self = this;
            self.view_scroll_obj && self.view_scroll_obj.refresh();
        }
    });
    module.exports = agreement_view;
});

define("pai/vwx0.0.1-beta/model_date/agreement/tpl/main-debug.handlebars", [ "utility/handlebars/1.3.0/runtime-debug" ], function(require, exports, module) {
    var Handlebars = require("utility/handlebars/1.3.0/runtime-debug");
    var template = Handlebars.template;
    module.exports = template(function(Handlebars, depth0, helpers, partials, data) {
        this.compilerInfo = [ 4, ">= 1.0.0" ];
        helpers = helpers || {};
        for (var key in Handlebars.helpers) {
            helpers[key] = helpers[key] || Handlebars.helpers[key];
        }
        data = data || {};
        return '<main role="main" class="location">\r\n    \r\n\r\n    <header class="nav-header agreement-header">\r\n        <div class="left-button-wrap" >\r\n            <a><i class="icon icon-back"></i></a>\r\n        </div>\r\n\r\n        <h3 class="title">拍摄协议</h3>\r\n        \r\n        <div class="right-button-wrap">\r\n            <a><i class="icon icon-cog"></i></a>\r\n        </div>\r\n    </header>  \r\n\r\n    <div data-role="container" class="content-body"  style="background:#eeeeee" >\r\n        <div style="height:100%">\r\n\r\n            <div class="agreement-page">\r\n                <h3>请仔细阅读【拍摄人体模特协议书】</h3>\r\n                <p class="p1">以下内容为虚构，请产品尽快给到文案”</p>\r\n                <ul class="list clearfix">\r\n                    <li>1.资金保障。您付款后，款项由【约拍】平台保管，直至您在拍摄现场签到后，款项才会付给模特。</li>\r\n                    <li>2.质量无忧。若您在现场发现模特货不对版，可拒绝签到并申请退款。</li>\r\n                    <li>3.资金保障。您付款后，款项由【约拍】平台保管，直至您在拍摄现场签到后，款项才会付给模特.质量无忧。若您在现场发现模特货对版，可拒绝签到并申请退款。</li>\r\n                </ul>        \r\n            </div>\r\n\r\n\r\n\r\n        </div>\r\n    </div>\r\n\r\n    <footer  class="pop-event-info" >\r\n         <div class="btn">\r\n             <button data-role="btn-go-to" class="ui-button ui-button-primary ui-button-size-middle ui-button-block ui-button-size-radius-large ">\r\n                <span class="ui-button-content">接受</span>\r\n            </button>\r\n         </div>\r\n    </footer>\r\n\r\n</main>';
    });
});

/**
 * 支付页面
 * hdw 20148.28
 * @param  {[type]} require 
 * @param  {[type]} exports 
 * @param  {[type]} module  
 * @return {[type]}         
 */
define("pai/vwx0.0.1-beta/model_date/payment/index-debug", [ "$-debug", "pai/vwx0.0.1-beta/frame/page_control-debug", "utility/backbone/1.1.2/backbone-debug", "pai/vwx0.0.1-beta/frame/ua-debug", "pai/vwx0.0.1-beta/frame/page-debug", "utility/zepto/modules/data/1.1.4/data-debug", "utility/hammer/plugins/jquery.hammer/1.1.3/jquery.hammer-debug", "utility/underscore/1.6.0/underscore-debug", "pai/vwx0.0.1-beta/model_date/payment/view-debug", "pai/vwx0.0.1-beta/common/view-debug", "utility/handlebars/1.3.0/runtime-debug", "pai/vwx0.0.1-beta/common/utility-debug", "pai/vwx0.0.1-beta/common/cross_domain_storage-debug", "matcha/cookie/1.0.0/cookie-debug", "pai/vwx0.0.1-beta/common/template-helpers-debug", "pai/vwx0.0.1-beta/common/scroll-debug", "utility/iscroll/4.2.5/iscroll-debug", "pai/vwx0.0.1-beta/common/img-ready-debug", "pai/vwx0.0.1-beta/common/I_APP-debug", "pai/vwx0.0.1-beta/common/global_config-debug", "pai/vwx0.0.1-beta/ui/m_alert/view-debug", "pai/vwx0.0.1-beta/widget/pay_item/view-debug", "pai/vwx0.0.1-beta/widget/pay_item/model-debug", "pai/vwx0.0.1-beta/common/I_WX-debug", "pai/vwx0.0.1-beta/model_date/payment/model-debug", "pai/vwx0.0.1-beta/model_date/model_card/model-debug", "pai/vwx0.0.1-beta/widget/abnormal/view-debug" ], function(require, exports, module) {
    var $ = require("$-debug");
    var page_control = require("pai/vwx0.0.1-beta/frame/page_control-debug");
    var payment_view = require("pai/vwx0.0.1-beta/model_date/payment/view-debug");
    var payment_model = require("pai/vwx0.0.1-beta/model_date/payment/model-debug");
    var utility = require("pai/vwx0.0.1-beta/common/utility-debug");
    var m_alert = require("pai/vwx0.0.1-beta/ui/m_alert/view-debug");
    var model_card = require("pai/vwx0.0.1-beta/model_date/model_card/model-debug");
    var abnormal = require("pai/vwx0.0.1-beta/widget/abnormal/view-debug");
    page_control.add_page([ function() {
        return {
            title: "支付",
            route: {
                "model_date/payment": "model_date/payment"
            },
            dom_not_cache: true,
            ignore_exist: true,
            transition_type: "slide",
            initialize: function() {},
            page_init: function(page_view, route_params_arr, route_params_obj) {
                var self = this;
                var model_obj = null;
                var pay_ment_model_obj = null;
                var model = route_params_obj;
                //判断是否从约拍风格到达此页面
                if (model && model.cid) {
                    model_obj = route_params_obj;
                    // 实例化支付模型
                    pay_ment_model_obj = new payment_model();
                } else {
                    // 做容错机制交互
                    m_alert.show("订单不存在", "error", {
                        delay: 1e3
                    });
                    self.abnormal_view = new abnormal({
                        templateModel: {
                            content_height: utility.get_view_port_height("all"),
                            error_status: 1
                        },
                        parentNode: self.$el
                    }).render();
                    return;
                }
                var payment_view_obj = new payment_view({
                    templateModel: model_obj,
                    model: model_obj,
                    pay_model: pay_ment_model_obj,
                    parentNode: self.$el
                }).render();
            },
            page_before_show: function() {},
            page_show: function() {},
            page_before_hide: function() {}
        };
    } ]);
});

/**
 * 支付页面
 * hudw 2014.8.28
 */
define("pai/vwx0.0.1-beta/model_date/payment/view-debug", [ "$-debug", "pai/vwx0.0.1-beta/frame/page_control-debug", "utility/backbone/1.1.2/backbone-debug", "pai/vwx0.0.1-beta/frame/ua-debug", "pai/vwx0.0.1-beta/frame/page-debug", "utility/zepto/modules/data/1.1.4/data-debug", "utility/hammer/plugins/jquery.hammer/1.1.3/jquery.hammer-debug", "utility/underscore/1.6.0/underscore-debug", "pai/vwx0.0.1-beta/common/view-debug", "utility/handlebars/1.3.0/runtime-debug", "pai/vwx0.0.1-beta/common/utility-debug", "pai/vwx0.0.1-beta/common/cross_domain_storage-debug", "matcha/cookie/1.0.0/cookie-debug", "pai/vwx0.0.1-beta/common/template-helpers-debug", "pai/vwx0.0.1-beta/common/scroll-debug", "utility/iscroll/4.2.5/iscroll-debug", "pai/vwx0.0.1-beta/common/img-ready-debug", "pai/vwx0.0.1-beta/common/I_APP-debug", "pai/vwx0.0.1-beta/common/global_config-debug", "pai/vwx0.0.1-beta/ui/m_alert/view-debug", "pai/vwx0.0.1-beta/widget/pay_item/view-debug", "pai/vwx0.0.1-beta/widget/pay_item/model-debug", "pai/vwx0.0.1-beta/common/I_WX-debug" ], function(require, exports, module) {
    var $ = require("$-debug");
    var page_control = require("pai/vwx0.0.1-beta/frame/page_control-debug");
    var View = require("pai/vwx0.0.1-beta/common/view-debug");
    var payment = require("pai/vwx0.0.1-beta/model_date/payment/tpl/main-debug.handlebars");
    var utility = require("pai/vwx0.0.1-beta/common/utility-debug");
    var templateHelpers = require("pai/vwx0.0.1-beta/common/template-helpers-debug");
    var Scroll = require("pai/vwx0.0.1-beta/common/scroll-debug");
    var App = require("pai/vwx0.0.1-beta/common/I_APP-debug");
    var m_alert = require("pai/vwx0.0.1-beta/ui/m_alert/view-debug");
    var pay_items = require("pai/vwx0.0.1-beta/widget/pay_item/view-debug");
    var WX = require("pai/vwx0.0.1-beta/common/I_WX-debug");
    var payment_view = View.extend({
        attrs: {
            template: payment
        },
        events: {
            swiperight: function() {
                page_control.back();
            },
            "tap [data-role=page-back]": function() {
                page_control.back();
            },
            'tap [data-role="pay-btn"]': function() {
                var self = this;
                if (self._submit_disable) {
                    return;
                }
                self._submit_disable = true;
                self.pay_action();
            }
        },
        /**
         * 安装事件
         * @private
         */
        _setup_events: function() {
            var self = this;
            self.pay_model.on("before:fetch", function() {
                m_alert.show("提交中...", "loading", {
                    delay: -1
                });
            }).on("success:fetch", function(response, options) {
                self._submit_disable = false;
                var response = response && response.result_data;
                var code = response && response.code;
                var channel_return = response && response.channel_return;
                var payment_no = response && response.payment_no;
                var options = options;
                switch (code) {
                  // 余额支付成功
                    case 1:
                    m_alert.show(response.message, "right");
                    page_control.navigate_to_page("model_date/submit_success");
                    break;

                  // 生成请求参数成功，待跳转到第三方
                    case 2:
                    m_alert.show("第三方支付跳转", "right");
                    var data_url = response.data;
                    var third_code = response.third_code;
                    if (third_code == "alipay_purse") {
                        // 支付宝
                        App.alipay({
                            alipayparams: data_url,
                            payment_no: payment_no
                        }, function(data) {
                            var result = utility.int(data.result);
                            self.after_pay_text(result);
                            if (result == 1 || result == -1 || result == -2) {
                                window.location.href = channel_return;
                            }
                        });
                    } else if (third_code == "tenpay_wxapp") {
                        // 微信支付
                        App.wxpay(JSON.parse(data_url), function(data) {
                            var result = utility.int(data.result);
                            self.after_pay_text(result);
                            if (result == 1 || result == -1 || result == -2) {
                                window.location.href = channel_return;
                            }
                        });
                    } else if (third_code == "tenpay_wxpub") {
                        // 微信支付
                        WX.isWexXin() && WX.wxPay(JSON.parse(data_url), function(data) {
                            var result = utility.int(data.code);
                            if (result == 1) {
                                window.location.href = channel_return;
                            }
                        });
                    }
                    break;

                  // 参数错误
                    case -1:
                  // 用户余额有变动
                    case -2:
                  // 添加到约拍表时产生错误
                    case -3:
                  // 生成第三方请求参数产生错误
                    case -4:
                    m_alert.show(response.message, "error");
                    break;

                  default:
                    m_alert.hide();
                }
            }).on("error:fetch", function(xhr, status) {
                m_alert.show("网络出错", "error", {
                    delay: 2e3
                });
                self._submit_disable = false;
            }).on("complete:fetch", function(xhr, status) {
                //m_alert.hide();
                self._submit_disable = false;
            });
            utility.user.on("before:get_info:fetch", function() {
                m_alert.show("正在加载支付模块...", "loading", {
                    delay: -1
                });
            }).on("success:get_info:fetch", function(response) {
                m_alert.hide();
                // 请求成功后再次设置
                self.pay_item_obj.model.set("available_balance", utility.user.get("available_balance"));
                // 初始化表单
                self.count_payment({
                    select_balance: self.model.get("model_selected_info").can_use_balance
                });
            }).on("error:get_info:fetch", function() {
                m_alert.show("网络异常，需要重试", "error", {
                    delay: 1e3
                });
                // 初始化表单
                self.count_payment({
                    select_balance: self.model.get("model_selected_info").can_use_balance
                });
            });
            self.pay_item_obj.on("selected:available_balance", function() {
                var select_balance = self.pay_item_obj.model.get("can_use_balance");
                self.count_payment({
                    select_balance: select_balance
                });
                self.view_scroll_obj.refresh();
            });
            self._setup_scroll();
            self.view_scroll_obj.refresh();
        },
        /**
         * 安装滚动条
         * @private
         */
        _setup_scroll: function() {
            var self = this;
            var view_scroll_obj = Scroll(self.$container, {
                is_hide_dropdown: true
            });
            self.view_scroll_obj = view_scroll_obj;
        },
        pay_action: function() {
            var self = this;
            var model_id = self.model.get("user_id");
            var hour = self.model.get("model_selected_info").hour;
            var date = self.model.get("model_selected_info").date;
            var type = self.model.get("model_selected_info").type;
            var style = self.model.get("model_selected_info").style;
            var price = self.model.get("model_selected_info").price;
            var address = self.model.get("model_selected_info").address;
            var available_balance = utility.user.get("available_balance");
            var is_available_balance = self.pay_item_obj.model.get("can_use_balance");
            var limit_num = self.model.get("model_selected_info").limit_num;
            // 设置打折优惠
            if (self.model.get("model_selected_info").is_discount) {
                hour = 2;
                price = utility.int(price / 2);
            }
            var data = {
                model_id: model_id,
                hour: hour,
                date: date,
                type: type || "",
                style: style,
                price: price,
                address: address,
                available_balance: available_balance,
                is_available_balance: is_available_balance,
                limit_num: limit_num,
                third_code: self.pay_item_obj.model.get("pay_type")
            };
            self.pay_model.set("pay_info", data);
            utility.date_info.set({
                model: self.model,
                pay_ment_model: self.pay_model
            });
            self.pay_model.pay(data);
        },
        /**
         * 计算支付金额
         * @private
         */
        count_payment: function(params) {
            var self = this;
            var total_price = utility.float(self.model.get("model_selected_info").total_price);
            var balance = utility.float(utility.user.get("available_balance"));
            if (params.select_balance) {
                var must_pay_money = balance - total_price;
                // 信用金够钱支付的时候
                if (must_pay_money > 0) {
                    self.must_pay_money = 0;
                } else {
                    self.must_pay_money = -(balance - total_price);
                }
            } else {
                // 没有用信用金支付
                self.must_pay_money = total_price;
            }
            self.must_pay_money = utility.format_float(self.must_pay_money, 2);
            self.$need_pay_str.html(self.must_pay_money);
            //self.pay_item_obj.update_price(self.must_pay_money);
            self.pay_item_obj.model.set("need_price", self.must_pay_money);
            if (self.must_pay_money > 0) {
                // 余额不够支付,出现第三方支付选择
                if (!self.pay_item_obj) {
                    m_alert.show("第三方支付模块尚未加载!", "error");
                    return;
                }
                // 隐藏支付宝、财付通、微信支付
                self.pay_item_obj.hide_pay_items_by_type("alipay_purse");
                self.pay_item_obj.hide_pay_items_by_type("caifutong");
                self.pay_item_obj.hide_pay_items_by_type("tenpay_wxapp");
                self.pay_item_obj.show_other_pay_items();
                self.pay_item_obj._select_pay_type("tenpay_wxpub");
            } else {
                self.pay_item_obj.hide_other_pay_items();
            }
        },
        /**
         * 视图初始化入口
         */
        setup: function() {
            var self = this;
            // 每次进入确保拿最新数据
            utility.user.get_info();
            // 配置交互对象
            self.$container = self.$("[data-role=container]");
            // 滚动容器
            self.$submit_btn = self.$('[data-role="pay-btn"]');
            self.$pay_items_container = self.$('[data-role="pay-items-container"]');
            self.$need_pay_str = self.$('[data-role="data-pay-rest"]');
            // 设置支付模型
            self.pay_model = self.get("pay_model");
            // 支付选项参数模型
            var pay_items_model = {
                can_use_balance: self.model.get("model_selected_info").can_use_balance,
                available_balance: utility.user.get("available_balance"),
                total_price: self.model.get("model_selected_info").total_price,
                show_price_info: true,
                is_support_outtime: true,
                is_support_now_out: true
            };
            self.pay_item_obj = new pay_items({
                templateModel: pay_items_model,
                parentNode: self.$pay_items_container
            }).render();
            self.pay_item_obj.hide_other_pay_items();
            // 安装事件
            self._setup_events();
        },
        render: function() {
            var self = this;
            var view_port_height = self.reset_viewport_height();
            self.$container.height(view_port_height);
            // 调用渲染函数
            View.prototype.render.apply(self);
            self.trigger("render");
            return self;
        },
        reset_viewport_height: function() {
            return utility.get_view_port_height() - 95;
        },
        /**
         * 显示支付结束后的文案
         * @param code
         */
        after_pay_text: function(code) {
            switch (utility.int(code)) {
              case 1:
              case -2:
              case -1:
                m_alert.show("支付成功", "right");
                break;

              case 0:
                m_alert.show("其它错误", "error");
                break;

              case -3:
                m_alert.show("支付失败", "error");
                break;

              case -4:
                m_alert.show("支付取消", "error");
                break;
            }
        }
    });
    module.exports = payment_view;
});

define("pai/vwx0.0.1-beta/model_date/payment/tpl/main-debug.handlebars", [ "utility/handlebars/1.3.0/runtime-debug" ], function(require, exports, module) {
    var Handlebars = require("utility/handlebars/1.3.0/runtime-debug");
    var template = Handlebars.template;
    module.exports = template(function(Handlebars, depth0, helpers, partials, data) {
        this.compilerInfo = [ 4, ">= 1.0.0" ];
        helpers = helpers || {};
        for (var key in Handlebars.helpers) {
            helpers[key] = helpers[key] || Handlebars.helpers[key];
        }
        data = data || {};
        var buffer = "", stack1, helper, functionType = "function", escapeExpression = this.escapeExpression;
        buffer += '<main role="main" class="procedure-pay">\r\n    \r\n    <!-- <header class="page-header wryh">\r\n                <div class="page-back" data-role="page-back"><i class="icon icon-back-40x40"></i></div>\r\n                支付\r\n    </header> -->\r\n\r\n    <header class="nav-header mine-nav-header">\r\n        <div class="left-button-wrap" data-role="page-back">\r\n            <a><i class="icon icon-back"></i></a>\r\n        </div>\r\n\r\n        <h3 class="title">支付</h3>\r\n        \r\n        <div class="right-button-wrap">\r\n            <a><i class="icon icon-cog"></i></a>\r\n        </div>\r\n    </header>\r\n\r\n\r\n    <div class="content-body secondary">\r\n        <div data-role="container">\r\n            <div>\r\n            <div class="procedure-header-mod">\r\n                <ul class="step">\r\n                    <li>提交约拍申请</li>\r\n                    <li class="current">支付</li>\r\n                    <li>提交成功</li>\r\n                </ul>\r\n                <ul class="num">\r\n                    <li class="common">\r\n                        <i class="num-icon">1</i>\r\n                        <div class="line-grey"></div>\r\n                        <div class="line-red"></div>\r\n                    </li>\r\n                    <li class="common current">\r\n                        <i class="num-icon">2</i>\r\n                        <div class="line-grey"></div>\r\n                        <div class="line-red"></div>\r\n                    </li>\r\n                    <li class="common ">\r\n                        <i class="num-icon">3</i>\r\n                        <div class="line-grey"></div>\r\n                        <div class="line-red"></div>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n            <div class="pay-details-info">\r\n                <div class="pay-details-info-line">\r\n                    <div>模特：</div>\r\n                    <div data-role="pay-details-info-line-name">';
        if (helper = helpers.user_name) {
            stack1 = helper.call(depth0, {
                hash: {},
                data: data
            });
        } else {
            helper = depth0 && depth0.user_name;
            stack1 = typeof helper === functionType ? helper.call(depth0, {
                hash: {},
                data: data
            }) : helper;
        }
        buffer += escapeExpression(stack1) + '</div>\r\n\r\n                </div>\r\n                <div class="pay-details-info-line">\r\n                    <div>风格：</div>\r\n                    <div data-role="pay-details-info-line-style">' + escapeExpression((stack1 = (stack1 = depth0 && depth0.model_selected_info, 
        stack1 == null || stack1 === false ? stack1 : stack1.style), typeof stack1 === functionType ? stack1.apply(depth0) : stack1)) + '</div>\r\n                </div>\r\n                <!--div class="pay-details-module-info-content">\r\n                    <p class="pay-details-module-info-notice">风格：</p>\r\n                    <p class="pay-details-module-info-style">内衣</p>\r\n                </div-->\r\n            </div>\r\n            <div data-role="pay-items-container"></div>\r\n            <div class="pay-details-notice">\r\n                <p>提示：</p>\r\n                <p>支付的款项会在现场签到后才支付给模特。</p>\r\n                <p>现场发现模特货不对板可拒绝签到，并申请退款。</p>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    </div>\r\n    <div class="pay-details-btn">\r\n        <div class="left">\r\n            <p class="data-pay-rest_notice">还需支付：</p>\r\n            <p class="data-pay-rest">￥<label  data-role="data-pay-rest">0</label></p>\r\n        </div>\r\n        <div class="right">\r\n            <button class="ui-button ui-button-size-middle ui-button-block ui-button-primary ui-button-size-radius-large" data-role="pay-btn">\r\n                <span class="ui-button-content"><i class="icon icon-btn-icon-fk"></i>去支付</span>\r\n            </button>\r\n        </div>\r\n        <!-- <div class="pay-details-btn-tap">支付</div> -->\r\n    </div>\r\n</main>';
        return buffer;
    });
});

/**
 * 支付选项表单
 * hdw 2014.8.26
 */
define("pai/vwx0.0.1-beta/widget/pay_item/view-debug", [ "$-debug", "pai/vwx0.0.1-beta/frame/page_control-debug", "utility/backbone/1.1.2/backbone-debug", "pai/vwx0.0.1-beta/frame/ua-debug", "pai/vwx0.0.1-beta/frame/page-debug", "utility/zepto/modules/data/1.1.4/data-debug", "utility/hammer/plugins/jquery.hammer/1.1.3/jquery.hammer-debug", "utility/underscore/1.6.0/underscore-debug", "pai/vwx0.0.1-beta/common/view-debug", "utility/handlebars/1.3.0/runtime-debug", "pai/vwx0.0.1-beta/common/utility-debug", "pai/vwx0.0.1-beta/common/cross_domain_storage-debug", "matcha/cookie/1.0.0/cookie-debug", "pai/vwx0.0.1-beta/widget/pay_item/model-debug", "pai/vwx0.0.1-beta/common/global_config-debug" ], function(require, exports, module) {
    var $ = require("$-debug");
    var page_control = require("pai/vwx0.0.1-beta/frame/page_control-debug");
    var View = require("pai/vwx0.0.1-beta/common/view-debug");
    var utility = require("pai/vwx0.0.1-beta/common/utility-debug");
    var item_tpl = require("pai/vwx0.0.1-beta/widget/pay_item/tpl/items-debug.handlebars");
    var pay_item_model = require("pai/vwx0.0.1-beta/widget/pay_item/model-debug");
    module.exports = View.extend({
        attrs: {
            template: item_tpl
        },
        events: {
            // 选择信用金
            'tap [data-role="select-cameraman-require-row"]': function(ev) {
                var self = this;
                var $cur_btn = $(ev.currentTarget);
                var $yes_tag = $cur_btn.find('[data-role="yes-tag"]');
                if ($yes_tag.hasClass("current")) {
                    $yes_tag.removeClass("current");
                    self._is_select_balance_require = 0;
                } else {
                    $yes_tag.addClass("current");
                    self._is_select_balance_require = 1;
                }
                self.model.set("can_use_balance", self._is_select_balance_require);
                self.trigger("selected:available_balance");
            },
            // 选择支付类型
            'tap [data-role="choosen-pay-type"]': function(ev) {
                var self = this;
                var $cur_btn = $(ev.currentTarget);
                var $yes_tag = $cur_btn.find('[data-role="yes-tag"]');
                var pay_type = $cur_btn.attr("data-type");
                self.model.set("pay_type", pay_type);
                self._select_pay_type(pay_type);
            }
        },
        _parseElement: function() {
            var self = this;
            var template_model = self.get("templateModel");
            self.set("templateModel", template_model);
            View.prototype._parseElement.apply(self);
        },
        _setup_events: function() {
            var self = this;
            self.on("selected:available_balance", function() {}).on("selected:pay_type", function() {});
            self.listenTo(self.model, "change", self._render_pay_items);
        },
        set_value: function(data) {
            var self = this;
            self.model.set(data);
        },
        get_value: function() {
            var self = this;
            return self.model;
        },
        _select_pay_time: function(type) {
            var self = this;
        },
        _select_pay_type: function(type) {
            var self = this;
            self.$pay_type_group.find('[data-role="yes-tag"]').removeClass("current");
            self.$('[data-type="' + type + '"]').find('[data-role="yes-tag"]').addClass("current");
            self._pay_type = type;
            self.model.set("pay_type", self._pay_type);
            self.trigger("selected:pay_type");
        },
        _render_pay_items: function() {
            var self = this;
            self.$total_price_container.html(self.model.get("total_price"));
            self.$pay_price_container.html(self.model.get("need_price"));
            self.$available_balance_container.html(self.model.get("available_balance"));
            self.$use_balance_tag.removeClass("current");
            if (self.model.get("can_use_balance")) {
                self.$use_balance_tag.addClass("current");
            }
        },
        setup: function() {
            var self = this;
            self.$pay_price_container = self.$("[data-role=pay-price]");
            self.$pay_type_group = self.$('[data-role="choosen-pay-type"]');
            self.$other_pay_items = self.$('[data-role="other-pay-items"]');
            self.$total_price_container = self.$("[data-role=pay-details-price-info-line-price]");
            self.$use_balance_tag = self.$('[data-role="select-cameraman-require-row"]').find("[data-role=yes-tag]");
            self.$available_balance_container = self.$('[data-role="available-balance-str"]');
            self.model = new pay_item_model({
                can_use_balance: self.get("templateModel").can_use_balance,
                total_price: self.get("templateModel").total_price,
                available_balance: self.get("templateModel").available_balance,
                is_support_outtime: self.get("templateModel").is_support_outtime,
                is_support_outtime: self.get("templateModel").is_support_now_out
            });
            // 安装事件
            self._setup_events();
        },
        show: function() {
            var self = this;
            self.$el.removeClass("fn-hide");
        },
        hide: function() {
            var self = this;
            self.$el.addClass("fn-hide");
        },
        show_other_pay_items: function() {
            var self = this;
            self.$other_pay_items.removeClass("fn-hide");
        },
        hide_other_pay_items: function() {
            var self = this;
            self.$other_pay_items.addClass("fn-hide");
        },
        /**
         * 根据指定类型隐藏支付选项
         * @param type
         */
        hide_pay_items_by_type: function(type) {
            var self = this;
            self.$el.find('[data-type="' + type + '"]').addClass("fn-hide");
        },
        render: function() {
            var self = this;
            // 调用渲染函数
            View.prototype.render.apply(self);
            self.trigger("render");
            return self;
        }
    });
});

define("pai/vwx0.0.1-beta/widget/pay_item/tpl/items-debug.handlebars", [ "utility/handlebars/1.3.0/runtime-debug" ], function(require, exports, module) {
    var Handlebars = require("utility/handlebars/1.3.0/runtime-debug");
    var template = Handlebars.template;
    module.exports = template(function(Handlebars, depth0, helpers, partials, data) {
        this.compilerInfo = [ 4, ">= 1.0.0" ];
        helpers = helpers || {};
        for (var key in Handlebars.helpers) {
            helpers[key] = helpers[key] || Handlebars.helpers[key];
        }
        data = data || {};
        var buffer = "", stack1, helper, self = this, functionType = "function", escapeExpression = this.escapeExpression;
        function program1(depth0, data) {
            return "fn-hide";
        }
        function program3(depth0, data) {
            return '\r\n                <div class="pay-details-price-info-line-notice">随时退</div>\r\n                <i class="icon icon-tui-30x30"></i>\r\n            ';
        }
        function program5(depth0, data) {
            return '\r\n                <div class="pay-details-price-info-line-notice">过期退</div>\r\n                <i class="icon icon-tui-30x30"></i>\r\n            ';
        }
        function program7(depth0, data) {
            return "current";
        }
        buffer += '<div>\r\n    <div class="pay-details-price-info ';
        stack1 = helpers.unless.call(depth0, depth0 && depth0.show_price_info, {
            hash: {},
            inverse: self.noop,
            fn: self.program(1, program1, data),
            data: data
        });
        if (stack1 || stack1 === 0) {
            buffer += stack1;
        }
        buffer += '">\r\n        <div class="pay-details-price-info-line">\r\n            <div>总价：</div>\r\n            <div class="pay-details-price-info-line-price" >￥<label data-role="pay-details-price-info-line-price">';
        if (helper = helpers.total_price) {
            stack1 = helper.call(depth0, {
                hash: {},
                data: data
            });
        } else {
            helper = depth0 && depth0.total_price;
            stack1 = typeof helper === functionType ? helper.call(depth0, {
                hash: {},
                data: data
            }) : helper;
        }
        buffer += escapeExpression(stack1) + "</label></div>\r\n\r\n            ";
        stack1 = helpers["if"].call(depth0, depth0 && depth0.is_support_now_out, {
            hash: {},
            inverse: self.noop,
            fn: self.program(3, program3, data),
            data: data
        });
        if (stack1 || stack1 === 0) {
            buffer += stack1;
        }
        buffer += "\r\n            ";
        stack1 = helpers["if"].call(depth0, depth0 && depth0.is_support_outtime, {
            hash: {},
            inverse: self.noop,
            fn: self.program(5, program5, data),
            data: data
        });
        if (stack1 || stack1 === 0) {
            buffer += stack1;
        }
        buffer += '\r\n\r\n        </div>\r\n        <div class="pay-details-price-info-line" data-role="select-cameraman-require-row">\r\n            <div>钱包余额：</div>\r\n\r\n            <i class="icon icon-normal-32x32 ';
        stack1 = helpers["if"].call(depth0, depth0 && depth0.can_use_balance, {
            hash: {},
            inverse: self.noop,
            fn: self.program(7, program7, data),
            data: data
        });
        if (stack1 || stack1 === 0) {
            buffer += stack1;
        }
        buffer += '" data-role="yes-tag"></i>\r\n            <div class="id-price" data-role="yes-tag" >￥<label data-role="available-balance-str">';
        if (helper = helpers.available_balance) {
            stack1 = helper.call(depth0, {
                hash: {},
                data: data
            });
        } else {
            helper = depth0 && depth0.available_balance;
            stack1 = typeof helper === functionType ? helper.call(depth0, {
                hash: {},
                data: data
            }) : helper;
        }
        buffer += escapeExpression(stack1) + '</label></div>\r\n        </div>\r\n        <div class="pay-details-price-info-line">\r\n            <div>还需支付：</div>\r\n            <div class="pay-price" >￥<label data-role="pay-price">0</label></div>\r\n        </div>\r\n    </div>\r\n    <!--div class="new-pay-items" data-role="other-pay-items">\r\n        <div class="new-pay-items-title">选择支付方式：</div>\r\n        <div class="new-pay-items-contain">\r\n            <div class="new-items-details" data-role="choosen-pay-type" data-type="alipay_purse">\r\n                <div class="notice">\r\n                    <i class="icon icon-pay-100x60" ></i>\r\n                    <div class="notice_details">\r\n                        <p>支付宝支付</p>\r\n                        <p>推荐有支付宝账号的用户使用</p>\r\n                    </div>\r\n                </div>\r\n                <div class="tag">\r\n                    <i class="icon icon-normal-32x32" data-role="yes-tag" ></i>\r\n                </div>\r\n            </div>\r\n            <div class="new-items-details"></div>\r\n            <div class="new-items-details"></div>\r\n        </div>\r\n\r\n    </div-->\r\n    <div data-role="other-pay-items">\r\n        <p class="pay-details-payment-title">选择支付方式：</p>\r\n        <div  class="pay-details-payment">\r\n            <div class="pay-details-payment-line" data-role="choosen-pay-type" data-type="tenpay_wxpub">\r\n                <i class="icon icon-wx-100x60 payment-way" ></i>\r\n                <div>\r\n                    <p>微信公众号支付</p>\r\n                    <p>安装微信5.0及以上版本的使用</p>\r\n                </div>\r\n                <i class="icon icon-normal-32x32 payment-choosen" data-role="yes-tag"></i>\r\n            </div>\r\n            <div class="pay-details-payment-line" data-role="choosen-pay-type" data-type="alipay_purse">\r\n                <i class="icon icon-pay-100x60 payment-way" ></i>\r\n                <div>\r\n                    <p>支付宝支付</p>\r\n                    <p>推荐有支付宝账号的用户使用</p>\r\n                </div>\r\n                <i class="icon icon-normal-32x32 payment-choosen" data-role="yes-tag" ></i>\r\n            </div>\r\n            <div class="pay-details-payment-line fn-hide" data-role="choosen-pay-type" data-type="caifutong">\r\n                <i class="icon icon-qq-100x60 payment-way" ></i>\r\n                <div>\r\n                    <p>财付通支付</p>\r\n                    <p>支持银行卡和财付通账户支付</p>\r\n                </div>\r\n                <i class="icon icon-normal-32x32 payment-choosen" data-role="yes-tag"></i>\r\n            </div>\r\n            <div class="pay-details-payment-line" data-role="choosen-pay-type" data-type="tenpay_wxapp">\r\n                <i class="icon icon-wx-100x60 payment-way" ></i>\r\n                <div>\r\n                    <p>微信支付</p>\r\n                    <p>安装微信5.0及以上版本的使用</p>\r\n                </div>\r\n                <i class="icon icon-normal-32x32 payment-choosen" data-role="yes-tag"></i>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n</div>';
        return buffer;
    });
});

/**
 * 支付选项 模型
 * hudw 2014.9.5
 */
define("pai/vwx0.0.1-beta/widget/pay_item/model-debug", [ "pai/vwx0.0.1-beta/common/global_config-debug", "utility/backbone/1.1.2/backbone-debug" ], function(require, exports, module) {
    var global_config = require("pai/vwx0.0.1-beta/common/global_config-debug");
    var Backbone = require("utility/backbone/1.1.2/backbone-debug");
    module.exports = Backbone.Model.extend({
        "default": {
            total_price: 0,
            available_balance: 0,
            need_price: 0,
            pay_type: "",
            can_use_balance: "",
            is_support_outtime: "",
            is_support_now_out: ""
        },
        /**
         * 安装事件
         * @private
         */
        _setup_events: function() {
            var self = this;
        },
        initialize: function(options) {
            var self = this;
            self._setup_events();
        }
    });
});

/**
 * 支付 模型
 * hudw 2014.8.28
 */
define("pai/vwx0.0.1-beta/model_date/payment/model-debug", [ "pai/vwx0.0.1-beta/common/global_config-debug", "pai/vwx0.0.1-beta/common/utility-debug", "$-debug", "pai/vwx0.0.1-beta/common/cross_domain_storage-debug", "matcha/cookie/1.0.0/cookie-debug", "utility/underscore/1.6.0/underscore-debug", "pai/vwx0.0.1-beta/frame/ua-debug", "utility/backbone/1.1.2/backbone-debug" ], function(require, exports, module) {
    var global_config = require("pai/vwx0.0.1-beta/common/global_config-debug");
    var utility = require("pai/vwx0.0.1-beta/common/utility-debug");
    var Backbone = require("utility/backbone/1.1.2/backbone-debug");
    module.exports = Backbone.Model.extend({
        idAttribute: "user_id",
        url: global_config.ajax_url.pay,
        "default": {
            user_id: ""
        },
        /**
         * 安装事件
         * @private
         */
        _setup_events: function() {
            var self = this;
            self.on("before:fetch", function(xhr, xhrOptions) {
                self._get_info_xhr = xhr;
            }).on("success:fetch", function(xhr, xhrOptions) {}).on("error:fetch", function(xhr, xhrOptions) {}).on("complete:fetch", function(xhr, status) {
                delete self._get_info_xhr;
            });
        },
        /**
         * 转换数据格式
         * @param response
         * @returns {*}
         */
        parse: function(response) {
            if (response.result_data) {
                return response.result_data;
            }
            return response;
        },
        initialize: function(options) {
            var self = this;
            self._setup_events();
        },
        pay: function(data) {
            var self = this;
            if (self._get_info_xhr) {
                return;
            }
            var location = window.location;
            var from_app = utility.get_url_params(window.location.search, "from_app");
            // 版本号
            var vwx = window.location.search.replace("?", "");
            if (from_app) {
                var redirect_url = location.origin + "/m/" + window._page_mode + "?from_app=1#model_date/submit_success";
            } else {
                var redirect_url = location.origin + "/m/" + window._page_mode + "?" + vwx + "#model_date/submit_success";
            }
            redirect_url = encodeURIComponent(redirect_url);
            data = $.extend(data, {
                redirect_url: redirect_url
            });
            self.fetch({
                url: self.url,
                data: data,
                cache: false,
                beforeSend: function(xhr, options) {
                    self.trigger("before:fetch", xhr, options);
                },
                success: function(collection, response, options) {
                    self.trigger("success:fetch", response, options);
                },
                error: function(collection, response, options) {
                    self.trigger("error:fetch", response, options);
                },
                complete: function(xhr, status) {
                    self.trigger("complete:fetch", xhr, status);
                }
            });
        }
    });
});

/**
 * 首页 - 模特卡
 * 汤圆 2014.8.21
 * @param  {[type]} require 
 * @param  {[type]} exports 
 * @param  {[type]} module  
 * @return {[type]}         
 */
define("pai/vwx0.0.1-beta/model_date/submit_success/index-debug", [ "$-debug", "pai/vwx0.0.1-beta/frame/page_control-debug", "utility/backbone/1.1.2/backbone-debug", "pai/vwx0.0.1-beta/frame/ua-debug", "pai/vwx0.0.1-beta/frame/page-debug", "utility/zepto/modules/data/1.1.4/data-debug", "utility/hammer/plugins/jquery.hammer/1.1.3/jquery.hammer-debug", "utility/underscore/1.6.0/underscore-debug", "pai/vwx0.0.1-beta/model_date/submit_success/view-debug", "pai/vwx0.0.1-beta/common/view-debug", "utility/handlebars/1.3.0/runtime-debug", "pai/vwx0.0.1-beta/common/utility-debug", "pai/vwx0.0.1-beta/common/cross_domain_storage-debug", "matcha/cookie/1.0.0/cookie-debug", "pai/vwx0.0.1-beta/common/template-helpers-debug", "pai/vwx0.0.1-beta/common/scroll-debug", "utility/iscroll/4.2.5/iscroll-debug", "pai/vwx0.0.1-beta/common/img-ready-debug", "pai/vwx0.0.1-beta/common/I_APP-debug", "pai/vwx0.0.1-beta/common/global_config-debug", "pai/vwx0.0.1-beta/ui/m_alert/view-debug", "pai/vwx0.0.1-beta/widget/model_pic/view-debug", "pai/vwx0.0.1-beta/model_date/submit_success/model-debug" ], function(require, exports, module) {
    var $ = require("$-debug");
    var page_control = require("pai/vwx0.0.1-beta/frame/page_control-debug");
    var submit_success_view = require("pai/vwx0.0.1-beta/model_date/submit_success/view-debug");
    var model = require("pai/vwx0.0.1-beta/model_date/submit_success/model-debug");
    var utility = require("pai/vwx0.0.1-beta/common/utility-debug");
    page_control.add_page([ function() {
        return {
            title: "模特卡",
            route: {
                "model_date/submit_success(/:pay_ment_id)": "model_date/submit_success"
            },
            dom_not_cache: true,
            ignore_exist: true,
            transition_type: "slide",
            initialize: function() {},
            page_init: function(page_view, route_params_arr, route_params_obj) {
                var self = this;
                var from_app = utility.get_url_params(window.location.search, "from_app");
                // 设置该状态下Android页面返回禁止
                utility.set_no_page_back(utility.getHash());
                var model_obj = new model({});
                var submit_success_view_obj = new submit_success_view({
                    from_app: utility.int(from_app),
                    model: model_obj,
                    parentNode: self.$el
                }).render();
            },
            page_before_show: function() {},
            page_show: function() {},
            page_before_hide: function() {}
        };
    } ]);
});

/**
 * 首页 - 模特卡
 * 汤圆 2014.8.21
 */
define("pai/vwx0.0.1-beta/model_date/submit_success/view-debug", [ "$-debug", "pai/vwx0.0.1-beta/frame/page_control-debug", "utility/backbone/1.1.2/backbone-debug", "pai/vwx0.0.1-beta/frame/ua-debug", "pai/vwx0.0.1-beta/frame/page-debug", "utility/zepto/modules/data/1.1.4/data-debug", "utility/hammer/plugins/jquery.hammer/1.1.3/jquery.hammer-debug", "utility/underscore/1.6.0/underscore-debug", "pai/vwx0.0.1-beta/common/view-debug", "utility/handlebars/1.3.0/runtime-debug", "pai/vwx0.0.1-beta/common/utility-debug", "pai/vwx0.0.1-beta/common/cross_domain_storage-debug", "matcha/cookie/1.0.0/cookie-debug", "pai/vwx0.0.1-beta/common/template-helpers-debug", "pai/vwx0.0.1-beta/common/scroll-debug", "utility/iscroll/4.2.5/iscroll-debug", "pai/vwx0.0.1-beta/common/img-ready-debug", "pai/vwx0.0.1-beta/common/I_APP-debug", "pai/vwx0.0.1-beta/common/global_config-debug", "pai/vwx0.0.1-beta/ui/m_alert/view-debug", "pai/vwx0.0.1-beta/widget/model_pic/view-debug" ], function(require, exports, module) {
    var $ = require("$-debug");
    var page_control = require("pai/vwx0.0.1-beta/frame/page_control-debug");
    var View = require("pai/vwx0.0.1-beta/common/view-debug");
    var submit_success = require("pai/vwx0.0.1-beta/model_date/submit_success/tpl/main-debug.handlebars");
    var utility = require("pai/vwx0.0.1-beta/common/utility-debug");
    var templateHelpers = require("pai/vwx0.0.1-beta/common/template-helpers-debug");
    var Scroll = require("pai/vwx0.0.1-beta/common/scroll-debug");
    var App = require("pai/vwx0.0.1-beta/common/I_APP-debug");
    var grid = require("pai/vwx0.0.1-beta/widget/model_pic/view-debug");
    var global_config = require("pai/vwx0.0.1-beta/common/global_config-debug");
    var submit_success_view = View.extend({
        attrs: {
            template: submit_success
        },
        events: {
            "tap [data-role=date-city]": function(ev) {},
            "tap [data-role=page-back]": function(ev) {
                page_control.navigate_to_page("hot");
            },
            'tap [data-role="to_date_list"]': function() {
                page_control.navigate_to_page("mine/consider/can_back_to_mine");
            },
            'tap [data-role="talk"]': function() {
                var self = this;
                if (!utility.auth.is_login()) {
                    page_control.navigate_to_page("account/login");
                    return;
                }
                var date_model = utility.date_info && utility.date_info.get().model;
                var data = {
                    senderid: utility.login_id,
                    receiverid: utility.int(date_model.user_id),
                    sendername: utility.user.get("nickname"),
                    receivername: date_model.user_name,
                    sendericon: utility.user.get("user_icon"),
                    receivericon: date_model.user_icon
                };
                if (App.isPaiApp) {
                    App.chat(data);
                }
            },
            'tap [data-role="to_message"]': function() {
                var self = this;
                page_control.navigate_to_page("message");
                console.log(self.from_app);
                if (self.from_app) {
                    console.log("back");
                    App.isPaiApp && App.app_back();
                } else {
                    console.log("show_chat_list");
                    App.isPaiApp && App.show_chat_list();
                }
            },
            'tap [data-name="wx_card_download_btn"]': function() {
                window.location.href = "http://app.yueus.com/";
            },
            'tap [data-role="wx_return"]': function() {
                page_control.navigate_to_page(global_config.default_index_route);
            }
        },
        /**
         * 安装事件
         * @private
         */
        _setup_events: function() {
            var self = this;
            self.model.on("before:fetch", function() {}).on("success:fetch", function() {
                self._render_model_card();
            }).on("complete:fetch", function(xhr, status) {});
            self.on("update_info", function(response, xhr) {
                // 区分当前对象
                var _self = this;
                // 头部滚动条
                // self._setup_scroll_top();
                // self.view_scroll_obj_top.refresh();
                //主要滚动条
                self._setup_scroll();
                self.view_scroll_obj.refresh();
            });
            self._setup_scroll();
            self.view_scroll_obj.refresh();
        },
        /**
         * 安装滚动条
         * @private
         */
        _setup_scroll: function() {
            var self = this;
            var view_scroll_obj = Scroll(self.$procedure_wrap_page, {
                lazyLoad: true,
                is_hide_dropdown: true
            });
            self.view_scroll_obj = view_scroll_obj;
        },
        /**
         * 渲染模特卡
         * @param response
         * @param options
         * @private
         */
        _render_model_card: function() {
            var self = this;
            var model_data = self.model.toJSON();
            var html_str = model_card({
                model_data_mod: model_data
            });
            var $container_op = self.$container;
            $container_op.html(html_str);
            //塞内容
            self.trigger("update_info");
        },
        /**
         * 视图初始化入口
         */
        setup: function() {
            var self = this;
            // 配置交互对象
            self.$container = self.$("[data-role=container]");
            // 滚动容器
            self.$container_img_list = self.$("[data-role=container-img-list]");
            // 头部图片容器
            self.$procedure_wrap = self.$("[data-role=procedure_wrap]");
            // 头部图片容器
            self.$procedure_wrap_page = self.$('[data-role="procedure_wrap_page"]');
            // 滚动容器
            self.from_app = self.get("from_app");
            //self.$container_top = self.$('[data-role=container-top]'); // 滚动容器
            // 安装事件
            self._setup_events();
        },
        reset_viewport_height: function() {
            return utility.get_view_port_height("nav");
        },
        render: function() {
            var self = this;
            var view_port_height = self.reset_viewport_height();
            self.$procedure_wrap_page.height(view_port_height);
            //self.view_scroll_obj.refresh()
            // 调用渲染函数
            View.prototype.render.apply(self);
            self.trigger("render");
            return self;
        }
    });
    module.exports = submit_success_view;
});

define("pai/vwx0.0.1-beta/model_date/submit_success/tpl/main-debug.handlebars", [ "utility/handlebars/1.3.0/runtime-debug" ], function(require, exports, module) {
    var Handlebars = require("utility/handlebars/1.3.0/runtime-debug");
    var template = Handlebars.template;
    module.exports = template(function(Handlebars, depth0, helpers, partials, data) {
        this.compilerInfo = [ 4, ">= 1.0.0" ];
        helpers = helpers || {};
        for (var key in Handlebars.helpers) {
            helpers[key] = helpers[key] || Handlebars.helpers[key];
        }
        data = data || {};
        return '<main role="main" class="procedure-succeed">\r\n    <!-- <header class="page-header wryh">\r\n        <div class="page-back fn-hide" data-role="page-back"><i class="icon icon-back-40x40"></i></div>\r\n                提交成功\r\n    </header> -->\r\n    <header class="nav-header mine-nav-header">\r\n        <h3 class="title">提交成功</h3>\r\n    </header>\r\n    <div data-role="container" class="content-body">\r\n        <div data-role="procedure_wrap_page">\r\n            <div>\r\n                <div class="wrap-div" data-role="procedure_wrap">\r\n                    <div class="procedure-header-mod">\r\n                        <ul class="step">\r\n                            <li>提交约拍申请</li>\r\n                            <li>支付</li>\r\n                            <li class="current">提交成功</li>\r\n                        </ul>\r\n                        <ul class="num">\r\n                            <li class="common">\r\n                                        <i class="num-icon">1</i>\r\n                                        <div class="line-grey"></div>\r\n                                        <div class="line-red"></div>\r\n                                    </li>\r\n                                    <li class="common">\r\n                                        <i class="num-icon">2</i>\r\n                                        <div class="line-grey"></div>\r\n                                        <div class="line-red"></div>\r\n                                    </li>\r\n                                    <li class="common  current">\r\n                                        <i class="num-icon">3</i>\r\n                                        <div class="line-grey"></div>\r\n                                        <div class="line-red"></div>\r\n                                    </li>\r\n                        </ul>\r\n                    </div>\r\n                    <div class="icon-yes"><i class="icon icon-success-60x60"></i></div>\r\n                    <div class="notice-one">约拍申请提交成功。</div>\r\n                    <div class="notice-two">请耐心等待模特回应</div>\r\n                    <div class="details-notice">\r\n                        <p class="tips">温馨提示</p>\r\n                        <p><!--i class="icon icon-icon-money-c"></i--> 1.资金保障。您付款后，款项由【约拍】平台保管，直至您在拍摄现场签到后，款项才会付给模特。</p>\r\n                        <p><!--i class="icon icon-icon-zhi-c"></i--> 2.质量无忧。若您在现场发现模特货不对板，可拒绝签到并申请退款。</p>\r\n                    </div>\r\n                    <div class="wx_download_contain">\r\n                        <button class="ui-button ui-button-primary ui-button-size-large ui-button-block download"  data-role="button" data-name="wx_card_download_btn"><span class="ui-button-content">下载约yue APP</span></button>\r\n                        <button class="ui-button ui-button-nocolor ui-button-size-large ui-button-block return_find"  data-role="wx_return"><span class="ui-button-content">返回约拍页</span></button>\r\n                        <li>不错过每一场的约拍</li>\r\n                        <li>更多的模特资源与约拍玩法</li>\r\n                        <li>与模特私聊，更好地传达拍摄需求</li>\r\n                         </div>\r\n                </div>    \r\n                        \r\n            </div>\r\n        </div>\r\n\r\n\r\n        <div class="btn_container_success fn-hide">\r\n            <div class="left fn-hide">\r\n                <button class="ui-button ui-button-size-middle ui-button-block ui-button-color2 ui-button-size-radius-large auto_width" data-role="to_date_list">\r\n                    <span class="ui-button-content">去约拍列表</span>\r\n                </button>\r\n            </div>\r\n            <div class="right fn-hide">\r\n                <button class="ui-button ui-button-size-middle ui-button-block ui-button-primary ui-button-size-radius-large auto_width" data-role="talk">\r\n                    <span class="ui-button-content">私信Ta</span>\r\n                </button>\r\n            </div>\r\n            <div class="right">\r\n                <button class="ui-button ui-button-size-middle ui-button-block ui-button-primary ui-button-size-radius-large auto_width" data-role="to_message">\r\n                    <span class="ui-button-content">去聊聊</span>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</main>';
    });
});

/**
 * 模特卡 模型
 * 汤圆 2014.8.21
 */
define("pai/vwx0.0.1-beta/model_date/submit_success/model-debug", [ "pai/vwx0.0.1-beta/common/global_config-debug", "utility/backbone/1.1.2/backbone-debug" ], function(require, exports, module) {
    var global_config = require("pai/vwx0.0.1-beta/common/global_config-debug");
    var Backbone = require("utility/backbone/1.1.2/backbone-debug");
    module.exports = Backbone.Model.extend({
        idAttribute: "user_id",
        url: global_config.ajax_url.model_card,
        "default": {
            user_id: ""
        },
        /**
         * 安装事件
         * @private
         */
        _setup_events: function() {
            var self = this;
            self.on("before:fetch", function(xhr, xhrOptions) {
                self._get_info_xhr = xhr;
            }).on("success:fetch", function(xhr, xhrOptions) {}).on("complete:fetch", function(xhr, status) {
                delete self._get_info_xhr;
            });
        },
        /**
         * 转换数据格式
         * @param response
         * @returns {*}
         */
        parse: function(response) {
            if (response.result_data) {
                return response.result_data;
            }
            return response;
        },
        initialize: function(options) {},
        get_info: function() {
            var self = this;
            if (self._get_info_xhr) {
                return;
            }
            self.fetch({
                url: self.url,
                data: {},
                cache: false,
                beforeSend: function(xhr, options) {
                    self.trigger("before:fetch", xhr, options);
                },
                success: function(collection, response, options) {
                    self.trigger("success:fetch", response, options);
                },
                error: function(collection, response, options) {
                    self.trigger("error:fetch", response, options);
                },
                complete: function(xhr, status) {
                    self.trigger("complete:fetch", xhr, status);
                }
            });
        }
    });
});

/**
 * 约拍完成
 * hudw 2014.9.21
 * @param  {[type]} require 
 * @param  {[type]} exports 
 * @param  {[type]} module  
 * @return {[type]}         
 */
define("pai/vwx0.0.1-beta/model_date/complete_application/index-debug", [ "$-debug", "pai/vwx0.0.1-beta/frame/page_control-debug", "utility/backbone/1.1.2/backbone-debug", "pai/vwx0.0.1-beta/frame/ua-debug", "pai/vwx0.0.1-beta/frame/page-debug", "utility/zepto/modules/data/1.1.4/data-debug", "utility/hammer/plugins/jquery.hammer/1.1.3/jquery.hammer-debug", "utility/underscore/1.6.0/underscore-debug", "pai/vwx0.0.1-beta/model_date/complete_application/view-debug", "pai/vwx0.0.1-beta/common/view-debug", "utility/handlebars/1.3.0/runtime-debug", "pai/vwx0.0.1-beta/common/utility-debug", "pai/vwx0.0.1-beta/common/cross_domain_storage-debug", "matcha/cookie/1.0.0/cookie-debug", "pai/vwx0.0.1-beta/ui/m_alert/view-debug", "pai/vwx0.0.1-beta/common/scroll-debug", "utility/iscroll/4.2.5/iscroll-debug", "pai/vwx0.0.1-beta/common/img-ready-debug" ], function(require, exports, module) {
    var $ = require("$-debug");
    var page_control = require("pai/vwx0.0.1-beta/frame/page_control-debug");
    var complete_application_view = require("pai/vwx0.0.1-beta/model_date/complete_application/view-debug");
    page_control.add_page([ function() {
        return {
            title: "约拍完成",
            route: {
                "model_date/complete_application/:date_id": "model_date/complete_application"
            },
            dom_not_cache: true,
            ignore_exist: true,
            transition_type: "slide",
            page_init: function(page_view, route_params_arr, route_params_obj) {
                var self = this;
                var date_id = route_params_arr[0];
                var complete_application_view_obj = new complete_application_view({
                    parentNode: self.$el,
                    date_id: date_id
                }).render();
            },
            page_before_show: function() {},
            page_show: function() {},
            page_before_hide: function() {}
        };
    } ]);
});

/**
 * 约拍成功
 * hudw 2014.9.21
 */
define("pai/vwx0.0.1-beta/model_date/complete_application/view-debug", [ "$-debug", "pai/vwx0.0.1-beta/frame/page_control-debug", "utility/backbone/1.1.2/backbone-debug", "pai/vwx0.0.1-beta/frame/ua-debug", "pai/vwx0.0.1-beta/frame/page-debug", "utility/zepto/modules/data/1.1.4/data-debug", "utility/hammer/plugins/jquery.hammer/1.1.3/jquery.hammer-debug", "utility/underscore/1.6.0/underscore-debug", "pai/vwx0.0.1-beta/common/view-debug", "utility/handlebars/1.3.0/runtime-debug", "pai/vwx0.0.1-beta/common/utility-debug", "pai/vwx0.0.1-beta/common/cross_domain_storage-debug", "matcha/cookie/1.0.0/cookie-debug", "pai/vwx0.0.1-beta/ui/m_alert/view-debug", "pai/vwx0.0.1-beta/common/scroll-debug", "utility/iscroll/4.2.5/iscroll-debug", "pai/vwx0.0.1-beta/common/img-ready-debug" ], function(require, exports, module) {
    var $ = require("$-debug");
    var page_control = require("pai/vwx0.0.1-beta/frame/page_control-debug");
    var View = require("pai/vwx0.0.1-beta/common/view-debug");
    var complete_application = require("pai/vwx0.0.1-beta/model_date/complete_application/tpl/main-debug.handlebars");
    var utility = require("pai/vwx0.0.1-beta/common/utility-debug");
    var m_alert = require("pai/vwx0.0.1-beta/ui/m_alert/view-debug");
    var Scroll = require("pai/vwx0.0.1-beta/common/scroll-debug");
    var info_tpl = require("pai/vwx0.0.1-beta/model_date/complete_application/tpl/info-debug.handlebars");
    var complete_application_view = View.extend({
        attrs: {
            template: complete_application
        },
        events: {
            'tap [data-role="nav-to-model"]': function(ev) {
                var self = this;
                var $cur_btn = $(ev.currentTarget);
                var model_id = $cur_btn.attr("data-model-id");
                var date_id = $cur_btn.attr("data-date_id");
                page_control.navigate_to_page("mine/consider_details_camera/" + date_id);
            },
            'tap [data-role="page-back"]': function() {
                page_control.back();
            }
        },
        /**
         * 安装事件
         * @private
         */
        _setup_events: function() {
            var self = this;
            utility.user.on("before:get_date_by_date_id:fetch", function(response, options) {
                m_alert.show("加载中...", "loading");
            }).on("success:get_date_by_date_id:fetch", function(response, options) {
                m_alert.hide();
                self._render_info(response);
            }).on("error:get_date_by_date_id:fetch", function(response, options) {
                m_alert.hide();
            }).on("complete:get_date_by_date_id:fetch", function(response, options) {});
            self.on("update_info", function() {
                if (!self.view_scroll_obj) {
                    self._setup_scroll();
                    self.view_scroll_obj.refresh();
                    return;
                }
                self.view_scroll_obj.refresh();
            });
        },
        _render_info: function(response) {
            var self = this;
            var responses = response.result_data;
            var html_str = info_tpl(responses.data);
            self.$srcoll_wrapper.html(html_str);
            self.trigger("update_info");
        },
        /**
         * 安装滚动条
         * @private
         */
        _setup_scroll: function() {
            var self = this;
            var view_scroll_obj = Scroll(self.$container, {
                is_hide_dropdown: true
            });
            self.view_scroll_obj = view_scroll_obj;
        },
        /**
         * 视图初始化入口
         */
        setup: function() {
            var self = this;
            // 配置交互对象
            self.$container = self.$("[data-role=container]");
            // 滚动容器
            self.$srcoll_wrapper = self.$('[data-role="scroll_wrapper"]');
            self.date_id = self.get("date_id");
            // 安装事件
            self._setup_events();
            self.refresh(self.date_id);
        },
        render: function() {
            var self = this;
            // 调用渲染函数
            View.prototype.render.apply(self);
            self.trigger("render");
            return self;
        },
        refresh: function(date_id) {
            var self = this;
            utility.user.get_date_by_date_id(date_id);
        }
    });
    module.exports = complete_application_view;
});

define("pai/vwx0.0.1-beta/model_date/complete_application/tpl/main-debug.handlebars", [ "utility/handlebars/1.3.0/runtime-debug" ], function(require, exports, module) {
    var Handlebars = require("utility/handlebars/1.3.0/runtime-debug");
    var template = Handlebars.template;
    module.exports = template(function(Handlebars, depth0, helpers, partials, data) {
        this.compilerInfo = [ 4, ">= 1.0.0" ];
        helpers = helpers || {};
        for (var key in Handlebars.helpers) {
            helpers[key] = helpers[key] || Handlebars.helpers[key];
        }
        data = data || {};
        return '<main role="main" class="procedure-finish secondary">\r\n\r\n<!--     <header class="page-header wryh">\r\n        <div class="page-back" data-role="page-back"><i class="icon icon-back-40x40"></i></div>\r\n        模特约拍\r\n    </header> -->\r\n\r\n    <header class="nav-header mine-nav-header">\r\n        <div class="left-button-wrap" data-role="page-back">\r\n            <a><i class="icon icon-back"></i></a>\r\n        </div>\r\n\r\n        <h3 class="title">模特约拍</h3>\r\n        \r\n        <div class="right-button-wrap">\r\n            <a><i class="icon icon-cog"></i></a>\r\n        </div>\r\n    </header>\r\n\r\n    <div data-role="container" class="content-body">\r\n        <div data-role="scroll_wrapper">\r\n\r\n\r\n        </div>\r\n    </div>\r\n\r\n</main>';
    });
});

define("pai/vwx0.0.1-beta/model_date/complete_application/tpl/info-debug.handlebars", [ "utility/handlebars/1.3.0/runtime-debug" ], function(require, exports, module) {
    var Handlebars = require("utility/handlebars/1.3.0/runtime-debug");
    var template = Handlebars.template;
    module.exports = template(function(Handlebars, depth0, helpers, partials, data) {
        this.compilerInfo = [ 4, ">= 1.0.0" ];
        helpers = helpers || {};
        for (var key in Handlebars.helpers) {
            helpers[key] = helpers[key] || Handlebars.helpers[key];
        }
        data = data || {};
        var buffer = "", stack1, helper, functionType = "function", escapeExpression = this.escapeExpression, self = this;
        function program1(depth0, data) {
            return '\r\n        <div class="notice-one">约拍已失效</div>\r\n        ';
        }
        function program3(depth0, data) {
            return '\r\n        <div class="notice-one">祝贺你，模特已经接受邀请。</div>\r\n    ';
        }
        function program5(depth0, data) {
            return "fn-hide";
        }
        function program7(depth0, data) {
            var stack1;
            return escapeExpression((stack1 = depth0 && depth0.code, typeof stack1 === functionType ? stack1.apply(depth0) : stack1));
        }
        function program9(depth0, data) {
            return escapeExpression(typeof depth0 === functionType ? depth0.apply(depth0) : depth0);
        }
        buffer += '\r\n\r\n<div class="procedure-page-wrap" style="padding-bottom:40px">\r\n<div class="procedure-header-mod">\r\n    <ul class="step">\r\n        <li>提交约拍申请</li>\r\n        <li>模特接受约拍</li>\r\n        <li class="current">拍摄/完成</li>\r\n    </ul>\r\n    <ul class="num">\r\n        <li class="common">\r\n            <i class="num-icon">1</i>\r\n            <div class="line-grey"></div>\r\n            <div class="line-red"></div>\r\n        </li>\r\n        <li class="common">\r\n            <i class="num-icon">2</i>\r\n            <div class="line-grey"></div>\r\n            <div class="line-red"></div>\r\n        </li>\r\n        <li class="common current">\r\n            <i class="num-icon">3</i>\r\n            <div class="line-grey"></div>\r\n            <div class="line-red"></div>\r\n        </li>\r\n    </ul>\r\n</div>\r\n<div class="icon-yes"><i class="icon icon-success-60x60"></i></div>\r\n    ';
        stack1 = helpers["if"].call(depth0, depth0 && depth0.event_status, {
            hash: {},
            inverse: self.program(3, program3, data),
            fn: self.program(1, program1, data),
            data: data
        });
        if (stack1 || stack1 === 0) {
            buffer += stack1;
        }
        buffer += '\r\n\r\n<div class="details-content ';
        stack1 = helpers["if"].call(depth0, depth0 && depth0.event_status, {
            hash: {},
            inverse: self.noop,
            fn: self.program(5, program5, data),
            data: data
        });
        if (stack1 || stack1 === 0) {
            buffer += stack1;
        }
        buffer += '" data-role="nav-to-model" data-model-id="';
        if (helper = helpers.to_date_id) {
            stack1 = helper.call(depth0, {
                hash: {},
                data: data
            });
        } else {
            helper = depth0 && depth0.to_date_id;
            stack1 = typeof helper === functionType ? helper.call(depth0, {
                hash: {},
                data: data
            }) : helper;
        }
        buffer += escapeExpression(stack1) + '" data-date_id="';
        if (helper = helpers.date_id) {
            stack1 = helper.call(depth0, {
                hash: {},
                data: data
            });
        } else {
            helper = depth0 && depth0.date_id;
            stack1 = typeof helper === functionType ? helper.call(depth0, {
                hash: {},
                data: data
            }) : helper;
        }
        buffer += escapeExpression(stack1) + '">\r\n    <div class="details-content-top">\r\n        <i class="icon icon-time-48x46 icon-one"></i>\r\n        <div class="middle">\r\n            <p>模特：</p><p data-role="finish-date-name">';
        if (helper = helpers.model_nickname) {
            stack1 = helper.call(depth0, {
                hash: {},
                data: data
            });
        } else {
            helper = depth0 && depth0.model_nickname;
            stack1 = typeof helper === functionType ? helper.call(depth0, {
                hash: {},
                data: data
            }) : helper;
        }
        buffer += escapeExpression(stack1) + '</p>\r\n            <p>时间：</p><p data-role="finish-date-time">';
        if (helper = helpers.date_time) {
            stack1 = helper.call(depth0, {
                hash: {},
                data: data
            });
        } else {
            helper = depth0 && depth0.date_time;
            stack1 = typeof helper === functionType ? helper.call(depth0, {
                hash: {},
                data: data
            }) : helper;
        }
        buffer += escapeExpression(stack1) + '</p>\r\n        </div>\r\n        <i class="icon icon-r-16x26-cur icon-two"></i>\r\n    </div>\r\n    <div class="details-content-bot">\r\n        <p>密码：</p>\r\n        <p class="pw" data-role="finish-date-pw">';
        stack1 = helpers.each.call(depth0, depth0 && depth0.code, {
            hash: {},
            inverse: self.noop,
            fn: self.program(7, program7, data),
            data: data
        });
        if (stack1 || stack1 === 0) {
            buffer += stack1;
        }
        buffer += '</p>\r\n        <img class="ewm" data-role="finish-date-ewm" src="';
        stack1 = helpers.each.call(depth0, depth0 && depth0.qr_code, {
            hash: {},
            inverse: self.noop,
            fn: self.program(9, program9, data),
            data: data
        });
        if (stack1 || stack1 === 0) {
            buffer += stack1;
        }
        buffer += '"/>\r\n    </div>\r\n</div>\r\n\r\n\r\n<div class="details-notice ';
        stack1 = helpers["if"].call(depth0, depth0 && depth0.event_status, {
            hash: {},
            inverse: self.noop,
            fn: self.program(5, program5, data),
            data: data
        });
        if (stack1 || stack1 === 0) {
            buffer += stack1;
        }
        buffer += '">\r\n    <p>约拍三步走：</p>\r\n    <p>第一步，出示交易二维码或密码</p>\r\n    <p>第二步，模特扫描，开始私拍</p>\r\n    <p>第三步，给模特进行评价</p>\r\n</div>\r\n</div>';
        return buffer;
    });
});

/**
 * 我的
 * hudw 2014.8.30
 * @param  {[type]} require 
 * @param  {[type]} exports 
 * @param  {[type]} module  
 * @return {[type]}         
 */
define("pai/vwx0.0.1-beta/mine/index-debug", [ "$-debug", "pai/vwx0.0.1-beta/frame/page_control-debug", "utility/backbone/1.1.2/backbone-debug", "pai/vwx0.0.1-beta/frame/ua-debug", "pai/vwx0.0.1-beta/frame/page-debug", "utility/zepto/modules/data/1.1.4/data-debug", "utility/hammer/plugins/jquery.hammer/1.1.3/jquery.hammer-debug", "utility/underscore/1.6.0/underscore-debug", "pai/vwx0.0.1-beta/mine/model-debug", "pai/vwx0.0.1-beta/common/global_config-debug", "pai/vwx0.0.1-beta/common/utility-debug", "pai/vwx0.0.1-beta/common/cross_domain_storage-debug", "matcha/cookie/1.0.0/cookie-debug", "pai/vwx0.0.1-beta/mine/view-debug", "pai/vwx0.0.1-beta/common/view-debug", "utility/handlebars/1.3.0/runtime-debug", "pai/vwx0.0.1-beta/common/I_APP-debug", "pai/vwx0.0.1-beta/ui/m_alert/view-debug", "pai/vwx0.0.1-beta/widget/footer/index-debug", "pai/vwx0.0.1-beta/common/system-debug", "pai/vwx0.0.1-beta/common/template-helpers-debug", "pai/vwx0.0.1-beta/widget/pull_down/view-debug", "pai/vwx0.0.1-beta/common/scroll-debug", "utility/iscroll/4.2.5/iscroll-debug", "pai/vwx0.0.1-beta/common/img-ready-debug" ], function(require, exports, module) {
    var $ = require("$-debug");
    var page_control = require("pai/vwx0.0.1-beta/frame/page_control-debug");
    var mine = require("pai/vwx0.0.1-beta/mine/model-debug");
    var mine_view = require("pai/vwx0.0.1-beta/mine/view-debug");
    var utility = require("pai/vwx0.0.1-beta/common/utility-debug");
    var App = require("pai/vwx0.0.1-beta/common/I_APP-debug");
    page_control.add_page([ function() {
        return {
            title: "我的",
            route: {
                "mine(/:payment_no)": "mine"
            },
            transition_type: "none",
            initialize: function() {},
            page_init: function(page_view, route_params_arr, route_params_obj) {
                var self = this;
                var user_id = route_params_arr[0];
                //角色分支
                if (utility.user.get("role") == "model") {
                    utility.user.set("is_model", true);
                    utility.user.set("is_cameraman", false);
                    utility.user.set("notice_list", "model_notice_list");
                } else {
                    utility.user.set("is_model", false);
                    utility.user.set("is_cameraman", true);
                    utility.user.set("notice_list", "cameraman_notice_list");
                }
                self.mine_view_obj = new mine_view({
                    model: utility.user,
                    parentNode: self.$el,
                    templateModel: utility.user
                }).render();
                console.log(1);
            },
            page_before_show: function() {
                var self = this;
                console.log(self.mine_view_obj.is_rendered);
                if (self.mine_view_obj) {
                    self.mine_view_obj.refresh(true);
                }
            },
            page_show: function() {},
            page_before_hide: function() {}
        };
    } ]);
});

/**
 * 我的 视图
 * hudw 2014.8.30
 */
define("pai/vwx0.0.1-beta/mine/view-debug", [ "$-debug", "pai/vwx0.0.1-beta/frame/page_control-debug", "utility/backbone/1.1.2/backbone-debug", "pai/vwx0.0.1-beta/frame/ua-debug", "pai/vwx0.0.1-beta/frame/page-debug", "utility/zepto/modules/data/1.1.4/data-debug", "utility/hammer/plugins/jquery.hammer/1.1.3/jquery.hammer-debug", "utility/underscore/1.6.0/underscore-debug", "pai/vwx0.0.1-beta/common/view-debug", "utility/handlebars/1.3.0/runtime-debug", "pai/vwx0.0.1-beta/common/utility-debug", "pai/vwx0.0.1-beta/common/cross_domain_storage-debug", "matcha/cookie/1.0.0/cookie-debug", "pai/vwx0.0.1-beta/common/I_APP-debug", "pai/vwx0.0.1-beta/common/global_config-debug", "pai/vwx0.0.1-beta/ui/m_alert/view-debug", "pai/vwx0.0.1-beta/widget/footer/index-debug", "pai/vwx0.0.1-beta/common/system-debug", "pai/vwx0.0.1-beta/common/template-helpers-debug", "pai/vwx0.0.1-beta/widget/pull_down/view-debug", "pai/vwx0.0.1-beta/common/scroll-debug", "utility/iscroll/4.2.5/iscroll-debug", "pai/vwx0.0.1-beta/common/img-ready-debug" ], function(require, exports, module) {
    var $ = require("$-debug");
    var page_control = require("pai/vwx0.0.1-beta/frame/page_control-debug");
    var ua = require("pai/vwx0.0.1-beta/frame/ua-debug");
    var View = require("pai/vwx0.0.1-beta/common/view-debug");
    var main_tpl = require("pai/vwx0.0.1-beta/mine/tpl/main-debug.handlebars");
    var utility = require("pai/vwx0.0.1-beta/common/utility-debug");
    var App = require("pai/vwx0.0.1-beta/common/I_APP-debug");
    var footer = require("pai/vwx0.0.1-beta/widget/footer/index-debug");
    var pull_down = require("pai/vwx0.0.1-beta/widget/pull_down/view-debug");
    var Scroll = require("pai/vwx0.0.1-beta/common/scroll-debug");
    var m_alert = require("pai/vwx0.0.1-beta/ui/m_alert/view-debug");
    var mine_view = View.extend({
        attrs: {
            template: main_tpl
        },
        events: {
            // 调试模式，后门开启
            'tap [data-role="debug-header"]': function() {},
            swiperight: function() {
                page_control.back();
            },
            "tap [data-role=page-back]": function(ev) {},
            'tap [data-role="nav-to-login"]': function() {
                page_control.navigate_to_page("account/login");
            },
            'tap [data-role="nav-to-zone"]': function(ev) {
                var self = this;
                var $cur_btn = $(ev.currentTarget);
                if ($(ev.srcElement).hasClass("head-icon")) {}
                var role = self.model.get("role");
                if (role == "cameraman") {
                    return;
                    page_control.navigate_to_page("zone/" + self.model.get("user_id") + "/cameraman");
                } else {
                    //page_control.navigate_to_page('zone/'+self.model.get('user_id')+'/model');
                    //page_control.navigate_to_page('model_date/model_card/edit_all');
                    page_control.navigate_to_page("model_date/model_card/edit_all");
                }
            },
            'tap [data-role="act"]': function() {
                if (!utility.auth.is_login()) {
                    page_control.navigate_to_page("account/login");
                    return;
                }
                page_control.navigate_to_page("mine/status");
            },
            /**
             * 约拍列表
             */
            'tap [data-role="date"]': function() {
                var self = this;
                if (!utility.auth.is_login()) {
                    page_control.navigate_to_page("account/login");
                    return;
                }
                page_control.navigate_to_page("mine/consider");
            },
            /**
             * 活动劵
             */
            'tap [data-role="nav-to-security"]': function(ev) {
                var $cur_btn = $(ev.currentTarget);
                if (!utility.auth.is_login()) {
                    page_control.navigate_to_page("account/login");
                    return;
                }
                page_control.navigate_to_page("act/security");
            },
            /**
             * 提现
             */
            'tap [data-role="get-money-btn"]': function() {
                var self = this;
                //没有绑定手机前不能提现
                if (self.phone && self.phone != "") {
                    page_control.navigate_to_page("mine/money/withdrawal");
                } else if (self.phone == "") {
                    m_alert.show("请先绑定手机", "error");
                    setTimeout(function() {
                        page_control.navigate_to_page("account/register/bind_phone");
                    }, 1e3);
                }
            },
            /**
             * 充值
             */
            'tap [data-role="add-value-btn"]': function() {
                var self = this;
                page_control.navigate_to_page("mine/money/recharge/0");
            },
            'tap [data-role="setup"]': function() {
                page_control.navigate_to_page("account/setup");
            },
            'tap [data-role="identity_money"]': function() {
                page_control.navigate_to_page("mine/credit", {
                    available_balance: utility.user.get("available_balance")
                });
            },
            'tap [data-role="show-chat-list"]': function() {
                var self = this;
                if (!utility.auth.is_login()) {
                    page_control.navigate_to_page("account/login");
                    return;
                }
                if (!App.isPaiApp) {
                    console.warn("no App");
                    return;
                }
                App.show_chat_list();
            },
            'tap [data-role="nav-to-login"]': function() {
                page_control.navigate_to_page("account/login");
            },
            'tap [data-role="to-be-model-btn"]': function() {
                var self = this;
                if (confirm("请再次确认，身份暂不支持修改哦。")) {
                    window.role = "model";
                    page_control.navigate_to_page("account/login/model");
                }
            },
            'tap [data-role="to-bill"]': function() {
                page_control.navigate_to_page("mine/money/bill");
            },
            'tap [data-role="credit-level"]': function() {
                page_control.navigate_to_page("mine/authentication_list");
            }
        },
        /**
         * 安装事件
         * @private
         */
        _setup_events: function() {
            var self = this;
            self.model.on("before:get_info:fetch", function() {
                self.$avaliable_balance.html("金额读取中...");
            }).on("success:get_info:fetch", function(response) {
                if (self.pull_down_obj) {
                    self.pull_down_obj.set_pull_down_style("loaded");
                }
                self.phone = response.result_data.data.phone;
                self.render_info(response);
                self.render_role_items();
                if (!self.refresh_from_before) {
                    // 重置下拉
                    self._drop_reset();
                }
            }).on("error:get_info:fetch", function() {
                //m_alert.show('网络异常','error',{delay:1000});
                self.$avaliable_balance.html("数据加载失败");
            });
            self.once("render", function() {
                self.is_rendered = true;
                if (!self.footer_obj) {
                    self._setup_footer();
                }
            });
        },
        render_info: function(response) {
            var self = this;
            utility.user.update_user(response.result_data.data);
            self.$avaliable_balance.html("￥" + utility.user.get("available_balance"));
            //解决头像不闪 2014-12-4 nolest
            var img_obj = new Image();
            img_obj.src = utility.user.get("user_icon");
            img_obj.onload = function() {
                self.$login_info.find('[data-role="head-icon"]').find("i").css("background-image", "url(" + utility.user.get("user_icon") + ")");
            };
            self.$login_info.find('[data-role="user-name"]').html(utility.user.get("nickname"));
            self.$login_info.find('[data-role="location-name"]').html(utility.user.get("city_name"));
            if (utility.user.get("ticket_num") > 0) {
                self.$('[data-role="notice_security_container"]').removeClass("fn-hide");
                self.$('[data-role="notice_security_num"]').html(utility.user.get("ticket_num"));
            } else {
                self.$('[data-role="notice_security_container"]').addClass("fn-hide");
                self.$('[data-role="notice_security_num"]').html(0);
            }
            /*var time = 200;

            self._reset_scroll_to(time);*/
            if (!self.view_scroll_obj) {
                //主要滚动条
                self._setup_scroll(utility.auth.is_login() ? false : true);
                self.view_scroll_obj.refresh();
                return;
            }
            self.view_scroll_obj.refresh();
        },
        /**
         * 安装滚动条
         * @private
         */
        _setup_scroll: function(is_hide_dropdown) {
            var self = this;
            var view_scroll_obj = Scroll(self.$container, {
                _startY: 45,
                is_hide_dropdown: is_hide_dropdown
            });
            self.view_scroll_obj = view_scroll_obj;
            // 下拉完成
            self.view_scroll_obj.on("dropload", function(e) {
                self.refresh();
            });
        },
        /**
         * 安装底部导航
         * @private
         */
        _setup_footer: function() {
            var self = this;
            self.footer_obj = new footer({
                // 元素插入位置
                parentNode: self.$el,
                // 模板参数对象
                templateModel: {
                    // 高亮设置参数
                    is_my_pai: true
                }
            }).render();
        },
        /**
         *
         * @private
         */
        _setup_pull_down: function() {
            var self = this;
            self.pull_down_obj = new pull_down({
                parentNode: self.$refresh_top_bar,
                templateModel: {
                    top: -65
                }
            }).render();
        },
        /**
         * 视图初始化入口
         */
        setup: function() {
            var self = this;
            // 安装事件
            self._setup_events();
            self.recent_icon_url = "";
            // 配置交互对象
            self.$container = self.$("[data-role=container]");
            // 滚动容器
            self.mid_container = self.$("[data-role=scoll-wrapper]");
            self.$avaliable_balance = self.$('[data-role="availiable-balance"]');
            self.$login_info = self.$('[data-role="login-info"]');
            self.$no_login_info = self.$('[data-role="no-login-info"]');
            self.$setup_btn = self.$('[data-role="setup"]');
            self.$change_role_btn = self.$('[data-role="change-btn"]');
            self.$refresh_top_bar = self.$("[data-role=refresh-bar-container]");
            self.$appver_update_point = self.$("[data-appver-update-point]");
            //self._setup_pull_down();
            self.render_role_items();
            // 检查是否有红点更新
            App.isPaiApp && App.app_info(function(data) {
                if (utility.int(data.appupdate) == 1) {
                    self.$appver_update_point.removeClass("fn-hide");
                } else {
                    self.$appver_update_point.addClass("fn-hide");
                }
            });
        },
        render: function() {
            var self = this;
            // 调用渲染函数
            View.prototype.render.apply(self);
            self.trigger("render");
            return self;
        },
        _drop_reset: function() {
            var self = this;
            self.view_scroll_obj && self.view_scroll_obj.resetload();
        },
        refresh: function(tag) {
            var self = this;
            if (utility.auth.is_login()) {
                self.model.get_info();
                self.refresh_from_before = tag;
                self.$login_info.removeClass("fn-hide");
                self.$no_login_info.addClass("fn-hide");
            } else {
                self.$no_login_info.removeClass("fn-hide");
                self.$login_info.addClass("fn-hide");
            }
        },
        render_role_items: function() {
            var self = this;
            var role = utility.user.get("role");
            if (utility.user.get("role") == "cameraman") {} else if (utility.user.get("role") == "model") {}
        },
        reset_viewport_height: function() {
            return utility.get_view_port_height("nav") - 50;
        },
        _pull_refresh: function() {
            var self = this;
            self.pull_down_obj.set_pull_down_style("loading");
            self.view_scroll_obj.minScrollY = 60;
            self.view_scroll_obj.scrollTo(0, 60);
            self.refresh();
        },
        _reset_scroll_to: function(time) {
            var self = this;
            self.view_scroll_obj.minScrollY = 0;
            self.view_scroll_obj.scrollTo(0, 0, time);
        }
    });
    module.exports = mine_view;
});

define("pai/vwx0.0.1-beta/mine/tpl/main-debug.handlebars", [ "utility/handlebars/1.3.0/runtime-debug" ], function(require, exports, module) {
    var Handlebars = require("utility/handlebars/1.3.0/runtime-debug");
    var template = Handlebars.template;
    module.exports = template(function(Handlebars, depth0, helpers, partials, data) {
        this.compilerInfo = [ 4, ">= 1.0.0" ];
        helpers = helpers || {};
        for (var key in Handlebars.helpers) {
            helpers[key] = helpers[key] || Handlebars.helpers[key];
        }
        data = data || {};
        var buffer = "", stack1, helper, self = this, functionType = "function", escapeExpression = this.escapeExpression;
        function program1(depth0, data) {
            var buffer = "";
            return buffer;
        }
        function program3(depth0, data) {
            return "fn-hide";
        }
        buffer += '\r\n<main role="main" class="mine wryh">\r\n    <header class="nav-header my-zone-header" data-role="debug-header">\r\n        <div class="left-button-wrap">\r\n\r\n        </div>\r\n        <h3 class="title">我的</h3>\r\n\r\n        <div class="right-button-wrap" data-role="setup">\r\n            <i class="circle-mod fn-hide" data-appver-update-point="1"></i>\r\n            <a><!-- <i class="icon icon-my-edit-m"></i> --></a>\r\n        </div>\r\n    </header>\r\n\r\n    <div class="content-body " data-role="container" style="height: 100%">\r\n        <div data-role="scoll-wrapper" style="height: 100%;">\r\n                <div data-role="refresh-bar-container" class="refresh-bar-container fn-hide" >\r\n\r\n                </div>\r\n\r\n                    <section class="group-user-info mt20  ';
        stack1 = helpers["if"].call(depth0, depth0 && depth0.is_login, {
            hash: {},
            inverse: self.program(3, program3, data),
            fn: self.program(1, program1, data),
            data: data
        });
        if (stack1 || stack1 === 0) {
            buffer += stack1;
        }
        buffer += '" data-role="login-info">\r\n                        <ul>\r\n\r\n\r\n                            <!-- <li class="item head-icon-item fn-hide" data-role="nav-to-zone" data-role-name="cameraman">\r\n                                <div data-role="zone" class="zone">\r\n                                    <i class="icon icon-home-s"></i>\r\n                                    <span>空间</span>\r\n                                </div>\r\n                                <div data-role="head-icon" class="head-img">\r\n                                    <i class="img circle-img head-icon" style="background-image:url(\'';
        if (helper = helpers.user_icon) {
            stack1 = helper.call(depth0, {
                hash: {},
                data: data
            });
        } else {
            helper = depth0 && depth0.user_icon;
            stack1 = typeof helper === functionType ? helper.call(depth0, {
                hash: {},
                data: data
            }) : helper;
        }
        buffer += escapeExpression(stack1) + '\');"></i>\r\n                                </div>\r\n                                <div class="name-and-location">\r\n                                    <div class="user-name" data-role="user-name">';
        if (helper = helpers.nickname) {
            stack1 = helper.call(depth0, {
                hash: {},
                data: data
            });
        } else {
            helper = depth0 && depth0.nickname;
            stack1 = typeof helper === functionType ? helper.call(depth0, {
                hash: {},
                data: data
            }) : helper;
        }
        buffer += escapeExpression(stack1) + '</div>\r\n                                    <div class="location">\r\n                                        <i class="icon icon-place"></i>\r\n                                        <span data-role="location-name">';
        if (helper = helpers.city_name) {
            stack1 = helper.call(depth0, {
                hash: {},
                data: data
            });
        } else {
            helper = depth0 && depth0.city_name;
            stack1 = typeof helper === functionType ? helper.call(depth0, {
                hash: {},
                data: data
            }) : helper;
        }
        buffer += escapeExpression(stack1) + '</span>\r\n                                    </div>\r\n                                </div>\r\n                            </li> -->\r\n\r\n\r\n                            <li class="item head-icon-item model position" data-role="nav-to-zone" data-role-name="cameraman" >\r\n                                <div data-role="head-icon" class="head-img">\r\n                                    <i class="img circle-img head-icon" style="background-image:url(\'';
        if (helper = helpers.user_icon) {
            stack1 = helper.call(depth0, {
                hash: {},
                data: data
            });
        } else {
            helper = depth0 && depth0.user_icon;
            stack1 = typeof helper === functionType ? helper.call(depth0, {
                hash: {},
                data: data
            }) : helper;
        }
        buffer += escapeExpression(stack1) + '\');"></i>\r\n                                </div>\r\n                                <div class="name-and-location">\r\n                                    <div class="user-name" data-role="user-name">';
        if (helper = helpers.nickname) {
            stack1 = helper.call(depth0, {
                hash: {},
                data: data
            });
        } else {
            helper = depth0 && depth0.nickname;
            stack1 = typeof helper === functionType ? helper.call(depth0, {
                hash: {},
                data: data
            }) : helper;
        }
        buffer += escapeExpression(stack1) + '</div>\r\n                                    <div class="location">\r\n                                       <!--  <i class="icon icon-place"></i> -->\r\n                                        <span data-role="location-name">';
        if (helper = helpers.city_name) {
            stack1 = helper.call(depth0, {
                hash: {},
                data: data
            });
        } else {
            helper = depth0 && depth0.city_name;
            stack1 = typeof helper === functionType ? helper.call(depth0, {
                hash: {},
                data: data
            }) : helper;
        }
        buffer += escapeExpression(stack1) + '</span>\r\n                                    </div>\r\n                                </div>\r\n                                <div data-role="edit-model-car" class="edit-model-car" >\r\n                                    <!-- 更新模特卡 -->\r\n                                    <i class="icon icon-r fn-hide"></i>\r\n                                </div>\r\n                            </li>\r\n\r\n\r\n                            <li class="item head-icon-item model position fn-hide" data-role="nav-to-zone" data-role-name="model" >\r\n                                <div data-role="head-icon" class="head-img">\r\n                                    <i class="img circle-img head-icon" style="background-image:url(\'';
        if (helper = helpers.user_icon) {
            stack1 = helper.call(depth0, {
                hash: {},
                data: data
            });
        } else {
            helper = depth0 && depth0.user_icon;
            stack1 = typeof helper === functionType ? helper.call(depth0, {
                hash: {},
                data: data
            }) : helper;
        }
        buffer += escapeExpression(stack1) + '\');"></i>\r\n                                </div>\r\n                                <div class="name-and-location">\r\n                                    <div class="user-name" data-role="user-name">';
        if (helper = helpers.nickname) {
            stack1 = helper.call(depth0, {
                hash: {},
                data: data
            });
        } else {
            helper = depth0 && depth0.nickname;
            stack1 = typeof helper === functionType ? helper.call(depth0, {
                hash: {},
                data: data
            }) : helper;
        }
        buffer += escapeExpression(stack1) + '</div>\r\n                                    <div class="location">\r\n                                       <!--  <i class="icon icon-place"></i> -->\r\n                                        <span data-role="location-name">';
        if (helper = helpers.city_name) {
            stack1 = helper.call(depth0, {
                hash: {},
                data: data
            });
        } else {
            helper = depth0 && depth0.city_name;
            stack1 = typeof helper === functionType ? helper.call(depth0, {
                hash: {},
                data: data
            }) : helper;
        }
        buffer += escapeExpression(stack1) + '</span>\r\n                                    </div>\r\n                                </div>\r\n                                <div data-role="edit-model-car" class="edit-model-car">\r\n                                    更新模特卡\r\n                                    <i class="icon icon-r"></i>\r\n                                </div>\r\n                            </li>\r\n\r\n\r\n\r\n                            <li class="item balance-item balance-item-h">\r\n                                <div data-role="avaliable-banace" class="avaliable-banace">\r\n                                    <p class="money" ><label data-role="availiable-balance">金额读取中...</label></p>\r\n                                    <p class="text">钱包</p>\r\n                                </div>\r\n\r\n                                    <button  data-role="get-money-btn"   class="fn-hide add-btn ui-button ui-button-primary ui-button-size-min ui-button-block ">\r\n                                        <span class="ui-button-content">提现</span>\r\n                                    </button>\r\n\r\n                                    <button   data-role="add-value-btn"   class="fn-hide add-btn ui-button ui-button-primary ui-button-size-min ui-button-block ">\r\n                                        <span class="ui-button-content">充值</span>\r\n                                    </button>\r\n\r\n                                <button data-role="to-bill"  class="add-btn ui-button ui-button-primary ui-button-size-min ui-button-block ">\r\n                                    <span class="ui-button-content">账单</span>\r\n                                </button>\r\n\r\n\r\n\r\n                            </li>\r\n                        </ul>\r\n                    </section>\r\n\r\n                    <section class="welcome ';
        stack1 = helpers["if"].call(depth0, depth0 && depth0.is_login, {
            hash: {},
            inverse: self.program(1, program1, data),
            fn: self.program(3, program3, data),
            data: data
        });
        if (stack1 || stack1 === 0) {
            buffer += stack1;
        }
        buffer += '" data-role="no-login-info">\r\n                        <h3>欢迎来到约约</h3>\r\n                        <button class="ui-button ui-button-primary ui-button-size-large ui-button-block" data-role="nav-to-login">\r\n                            <span class="ui-button-content">登录</span>\r\n                        </button>\r\n\r\n                        \r\n                    </section>\r\n\r\n                    <section class="group-user-info group-user-info-list-other mt20" >\r\n                        <ul id="';
        if (helper = helpers.notice_list) {
            stack1 = helper.call(depth0, {
                hash: {},
                data: data
            });
        } else {
            helper = depth0 && depth0.notice_list;
            stack1 = typeof helper === functionType ? helper.call(depth0, {
                hash: {},
                data: data
            }) : helper;
        }
        buffer += escapeExpression(stack1) + '" data-role="ui-mine-msg-container">\r\n                            <li class="item" data-role="date">\r\n                                <div class="container">\r\n                                    <div class="date left-icon">\r\n                                        <i class="icon icon-camera-s"></i>\r\n                                        约拍订单\r\n                                    </div>\r\n                                    <i class="icon icon-r"></i>\r\n                                    <div class="num-box fn-hide" data-role="notice_date_num">0</div>\r\n                                </div>\r\n                            </li>\r\n\r\n                            <li class="item fn-hide" >\r\n                                <div class="container" data-role="act">\r\n                                    <div class="act left-icon">\r\n                                        <i class="icon icon-package-s"></i>\r\n                                        活动\r\n                                    </div>\r\n                                    <i class="icon icon-r"></i>\r\n                                    <div class="num-box fn-hide" data-role="notice_act_num">0</div>\r\n                                </div>\r\n\r\n                            </li>\r\n\r\n\r\n                            <!-- <li class="item fn-hide" data-role="identity_money" data-role-name="cameraman">\r\n                                <div class="container">\r\n                                    <div class="identity_money">\r\n                                        <i class="icon icon-identity"></i>\r\n                                        个人信用度\r\n                                    </div>\r\n                                    <i class="icon icon-r"></i>\r\n                                </div>\r\n                            </li> -->\r\n\r\n\r\n                            <li class="item fn-hide" data-role="show-chat-list">\r\n                                <div class="container">\r\n                                    <div class="msg">\r\n                                        <i class="icon icon-letter-s"></i>\r\n                                        消息\r\n                                    </div>\r\n                                    <i class="icon icon-r"></i>\r\n                                    <div class="num-box fn-hide" data-role="notice_msg_num">0</div>\r\n                                </div>\r\n                            </li>\r\n                            <li class="item" data-role="nav-to-security">\r\n                                <div class="container no-border-style">\r\n                                    <div class="act_volume left-icon">\r\n                                        <i class="icon icon-volume-s"></i>\r\n                                        二维码签到券\r\n                                    </div>\r\n                                    <i class="icon icon-r"></i>\r\n                                    <div class="num-box-2 fn-hide" data-role="notice_security_container">还有<span class="color"><i data-role="notice_security_num">0</i></span>张二维码未扫</div>\r\n                                </div>\r\n                            </li>\r\n\r\n\r\n                            \r\n\r\n\r\n                        </ul>\r\n                    </section>\r\n\r\n\r\n                    <section class="group-user-info fn-hide mt20" data-role="credit-level">\r\n                            <li class="item" data-role="">\r\n                                <div class="container no-border-style">\r\n                                    <div class="act_volume left-icon">\r\n                                        <i class="icon icon-credit-level-m"></i>\r\n                                        信用等级\r\n                                    </div>\r\n                                    <i class="icon icon-r"></i>\r\n                                </div>\r\n                            </li>\r\n                    </section>\r\n\r\n\r\n            <section class="group-user-info fn-hide" data-role="change-btn">\r\n                <button data-role="to-be-model-btn" class="add-btn ui-button ui-button-size-min ui-button-block " style="background: #ff0052;color: white;width: 200px;margin: 30px auto;">\r\n                    <span class="ui-button-content">我要当模特</span>\r\n                </button>\r\n            </section>\r\n\r\n\r\n                    <section class="group-user-info fn-hide" data-role="upload_mutiply">\r\n                        <div data-role="upload_imgs fn-hide" style="width: 80px;height: 80px;background: #f90;text-align: center;line-height: 80px;color:#fff;">上传单图片</div>\r\n                        <div data-role="upload_m_imgs fn-hide" style="width: 80px;height: 80px;background: #666;text-align: center;line-height: 80px;color:#fff;">多图zip</div>\r\n                        <div data-role="upload_m_imgs_no_zip fn-hide" style="width: 80px;height: 80px;background: #ff0052;text-align: center;line-height: 80px;color:#fff;">多图非zip</div>\r\n                    </section>\r\n                    <section class="group-user-info fn-hide" data-role="upload_mutiply">\r\n                        <div data-role="imgs_container"></div>\r\n                    </section>\r\n\r\n        </div>\r\n    </div>\r\n\r\n</main>\r\n';
        return buffer;
    });
});

/**
 * 我的zone
 * hudw 2014.9.8
 * @param  {[type]} require 
 * @param  {[type]} exports 
 * @param  {[type]} module  
 * @return {[type]}         
 */
define("pai/vwx0.0.1-beta/mine/zone/index-debug", [ "$-debug", "pai/vwx0.0.1-beta/frame/page_control-debug", "utility/backbone/1.1.2/backbone-debug", "pai/vwx0.0.1-beta/frame/ua-debug", "pai/vwx0.0.1-beta/frame/page-debug", "utility/zepto/modules/data/1.1.4/data-debug", "utility/hammer/plugins/jquery.hammer/1.1.3/jquery.hammer-debug", "utility/underscore/1.6.0/underscore-debug", "pai/vwx0.0.1-beta/common/utility-debug", "pai/vwx0.0.1-beta/common/cross_domain_storage-debug", "matcha/cookie/1.0.0/cookie-debug", "pai/vwx0.0.1-beta/mine/zone/cameraman_view-debug", "pai/vwx0.0.1-beta/common/view-debug", "utility/handlebars/1.3.0/runtime-debug", "pai/vwx0.0.1-beta/common/scroll-debug", "utility/iscroll/4.2.5/iscroll-debug", "pai/vwx0.0.1-beta/common/img-ready-debug", "pai/vwx0.0.1-beta/mine/model-debug", "pai/vwx0.0.1-beta/common/global_config-debug", "pai/vwx0.0.1-beta/ui/mine-popup/index-debug", "pai/vwx0.0.1-beta/ui/popup/index-debug", "pai/vwx0.0.1-beta/common/template-helpers-debug", "pai/vwx0.0.1-beta/widget/model_pic/view-debug", "pai/vwx0.0.1-beta/common/I_APP-debug", "pai/vwx0.0.1-beta/ui/m_alert/view-debug", "pai/vwx0.0.1-beta/mine/zone/model_view-debug" ], function(require, exports, module) {
    var $ = require("$-debug");
    var page_control = require("pai/vwx0.0.1-beta/frame/page_control-debug");
    var utility = require("pai/vwx0.0.1-beta/common/utility-debug");
    var zone_cameraman_view = require("pai/vwx0.0.1-beta/mine/zone/cameraman_view-debug");
    var zone_model_view = require("pai/vwx0.0.1-beta/mine/zone/model_view-debug");
    var model = require("pai/vwx0.0.1-beta/mine/model-debug");
    page_control.add_page([ function() {
        return {
            title: "我的空间",
            route: {
                "zone/:user_id/:role": "zone"
            },
            dom_not_cache: true,
            ignore_exist: true,
            transition_type: "slide",
            page_init: function(page_view, route_params_arr, route_params_obj) {
                var self = this;
                var user_id = route_params_arr[0];
                if (route_params_arr[1] == "model") {
                    self.zone_model_view_obj = new zone_model_view({
                        parentNode: self.$el,
                        //model : model_obj,
                        model: utility.user,
                        user_id: user_id
                    }).render();
                } else {
                    self.zone_cameraman_view_obj = new zone_cameraman_view({
                        parentNode: self.$el,
                        //model : model_obj,
                        user_id: user_id,
                        is_myself: utility.user.get("user_id") == user_id
                    }).render();
                }
            },
            page_before_show: function() {
                var self = this;
            },
            page_show: function() {},
            page_before_hide: function() {}
        };
    } ]);
});

/**
 * 我的zone 视图
 * hudw 2014.9.8
 */
define("pai/vwx0.0.1-beta/mine/zone/cameraman_view-debug", [ "$-debug", "pai/vwx0.0.1-beta/frame/page_control-debug", "utility/backbone/1.1.2/backbone-debug", "pai/vwx0.0.1-beta/frame/ua-debug", "pai/vwx0.0.1-beta/frame/page-debug", "utility/zepto/modules/data/1.1.4/data-debug", "utility/hammer/plugins/jquery.hammer/1.1.3/jquery.hammer-debug", "utility/underscore/1.6.0/underscore-debug", "pai/vwx0.0.1-beta/common/view-debug", "utility/handlebars/1.3.0/runtime-debug", "pai/vwx0.0.1-beta/common/utility-debug", "pai/vwx0.0.1-beta/common/cross_domain_storage-debug", "matcha/cookie/1.0.0/cookie-debug", "pai/vwx0.0.1-beta/common/scroll-debug", "utility/iscroll/4.2.5/iscroll-debug", "pai/vwx0.0.1-beta/common/img-ready-debug", "pai/vwx0.0.1-beta/mine/model-debug", "pai/vwx0.0.1-beta/common/global_config-debug", "pai/vwx0.0.1-beta/ui/mine-popup/index-debug", "pai/vwx0.0.1-beta/ui/popup/index-debug", "pai/vwx0.0.1-beta/common/template-helpers-debug", "pai/vwx0.0.1-beta/widget/model_pic/view-debug", "pai/vwx0.0.1-beta/common/I_APP-debug", "pai/vwx0.0.1-beta/ui/m_alert/view-debug" ], function(require, exports, module) {
    var $ = require("$-debug");
    var page_control = require("pai/vwx0.0.1-beta/frame/page_control-debug");
    var View = require("pai/vwx0.0.1-beta/common/view-debug");
    var tpl = require("pai/vwx0.0.1-beta/mine/zone/tpl/main-debug.handlebars");
    var utility = require("pai/vwx0.0.1-beta/common/utility-debug");
    var Scroll = require("pai/vwx0.0.1-beta/common/scroll-debug");
    var info_tpl = require("pai/vwx0.0.1-beta/mine/zone/tpl/info-debug.handlebars");
    var mine_model = require("pai/vwx0.0.1-beta/mine/model-debug");
    var mine_popup = require("pai/vwx0.0.1-beta/ui/mine-popup/index-debug");
    var grid = require("pai/vwx0.0.1-beta/widget/model_pic/view-debug");
    var App = require("pai/vwx0.0.1-beta/common/I_APP-debug");
    var mine_view = View.extend({
        attrs: {
            template: tpl
        },
        events: {
            'tap [data-role="page-back"]': function() {
                page_control.back();
            },
            'tap [data-role="show-pop"]': function() {
                var self = this;
                if (!self.get("is_myself")) {
                    return;
                }
                if (!utility.auth.is_login()) {
                    alert("尚未登录");
                    return;
                }
                if (!self.mine_Popup) {
                    self.mine_Popup = new mine_popup({
                        uid: utility.user.get("user_id"),
                        items: {
                            edit: true,
                            report: false
                        }
                    }).show();
                } else {
                    self.mine_Popup.show();
                }
            },
            swiperight: function() {
                page_control.back();
            },
            'tap [data-role="follow"]': function() {
                var self = this;
                page_control.navigate_to_page("account/fans_follows/" + self.get("user_id") + "/follow");
            },
            'tap [data-role="fans"]': function() {
                var self = this;
                page_control.navigate_to_page("account/fans_follows/" + self.get("user_id") + "/fans");
            },
            'tap [data-role="user-info"]': function() {
                var self = this;
                // 只有点击自己的头像才是修改
                // hudw 2014.12.4
                if (self.get("user_id") == utility.user.get("user_id")) {
                    page_control.navigate_to_page("mine/profile");
                }
            },
            'tap [data-role="go-comment"]': function() {
                var self = this;
                console.log(utility.user.get("role"));
                page_control.navigate_to_page("comment/list/cameraman/" + self.get("user_id") + "/0");
            },
            /**
             * 点击查看轮播图
             * @param ev
             */
            "tap [data-role=grid-pic-container]": function(ev) {
                var self = this;
                var $cur_btn = $(ev.currentTarget);
                // 当前图片
                var cur_alumn_img = $cur_btn.attr("data-alumn-img");
                // 所有图片
                var $total_alumn_img = self.$("[data-role=grid-pic-container]");
                var total_alumn_img_arr = [];
                $total_alumn_img.each(function(i, obj) {
                    total_alumn_img_arr.push({
                        url: $(obj).attr("data-alumn-img"),
                        text: ""
                    });
                });
                // 当前图片索引
                var index = $total_alumn_img.index($cur_btn);
                // 轮播图数据
                var data = {
                    img_arr: total_alumn_img_arr,
                    index: index
                };
                console.log(data);
                if (!App.isPaiApp) {
                    console.log("no App");
                    return;
                }
                App.show_alumn_imgs(data);
            },
            //大笨象弹窗口
            'tap [data-role="pop-dabenxiang-cameraman"]': function(ev) {
                var self = this;
                $(ev.currentTarget).addClass("fn-hide");
                utility.storage.set("pop-dabenxiang-cameraman", 1);
            }
        },
        /**
         * 安装事件
         * @private
         */
        _setup_events: function() {
            var self = this;
            //大笨象
            /*if(utility.storage.get('pop-dabenxiang-cameraman'))
            {
                self.$('[data-role="pop-dabenxiang-cameraman"]').addClass('fn-hide');
            }*/
            self.model.on([ "change:nickname", "change:pic_arr", "change:user_icon" ].join(" "), function() {
                // 只有编辑自己时才触发
                if (self.model.get("user_id") == utility.user.get("user_id")) {
                    self._render_info(utility.user.toJSON());
                    //监听编辑页修改
                    setTimeout(function() {
                        self.view_scroll_obj.reset_top();
                        self.view_scroll_obj.resetLazyLoad();
                        self.view_scroll_obj.refresh();
                    }, 500);
                }
            }).on("success:get_zone_info:fetch", function(response) {
                self._render_info(response.result_data.data);
            });
            self.on("update_info", function(response, xhr) {
                // 区分当前对象
                var _self = this;
                if (!self.view_scroll_obj) {
                    //主要滚动条
                    self._setup_scroll();
                    self._drop_reset();
                    self.view_scroll_obj.reset_top();
                }
                self._drop_reset();
                self.view_scroll_obj.resetLazyLoad();
                self.view_scroll_obj.reset_top();
                self.view_scroll_obj.refresh();
            });
        },
        /**
         * 安装滚动条
         * @private
         */
        _setup_scroll: function() {
            var self = this;
            var view_scroll_obj = Scroll(self.$container, {
                lazyLoad: true
            });
            self.view_scroll_obj = view_scroll_obj;
            self.view_scroll_obj.on("dropload", function(e) {
                self.refresh();
            });
        },
        /**
         * 渲染内容
         * @param response
         * @private
         */
        _render_info: function(data) {
            var self = this;
            var html_str = info_tpl(data);
            self.$info_container.html(html_str);
            //var art_imgs = self.model.get('zone_info').model_pic;
            var art_imgs = [];
            var pic_arr = data && data.pic_arr;
            for (var i = 0; i < pic_arr.length; i++) {
                var type;
                if ((i + 2) % 3 == 0) {
                    type = "middle";
                } else {
                    type = "one";
                }
                art_imgs.push({
                    type: type,
                    user_icon: pic_arr[i].user_icon,
                    big_user_icon: pic_arr[i].big_user_icon
                });
            }
            if (art_imgs.length > 0) {
                var grid_list_view = new grid({
                    // 模板参数对象
                    templateModel: {
                        tpl_data: art_imgs,
                        tpl_type: "one"
                    }
                }).render();
                self.$info_container.find("[data-role=grid-container]").html(grid_list_view.list());
            }
            self.trigger("update_info");
        },
        /**
         * 视图初始化入口
         */
        setup: function() {
            var self = this;
            // 配置交互对象
            self.$container = self.$("[data-role=container]");
            // 滚动容器
            self.$info_container = self.$('[data-role="info"]');
            // 空间信息容器
            self.$setup_btn = self.$('[data-role="show-pop"]');
            if (self.get("is_myself")) {
                self.$setup_btn.find("a").removeClass("fn-hide");
                self.model = utility.user;
            } else {
                self.model = new mine_model({
                    user_id: self.get("user_id")
                });
            }
            // 安装事件
            self._setup_events();
            // 刷新
            self.refresh();
        },
        _drop_reset: function() {
            var self = this;
            self.view_scroll_obj && self.view_scroll_obj.resetload();
        },
        refresh: function() {
            var self = this;
            self.model.get_zone_info("cameraman", self.get("user_id"));
        },
        render: function() {
            var self = this;
            // 调用渲染函数
            View.prototype.render.apply(self);
            self.trigger("render");
            return self;
        }
    });
    module.exports = mine_view;
});

define("pai/vwx0.0.1-beta/mine/zone/tpl/main-debug.handlebars", [ "utility/handlebars/1.3.0/runtime-debug" ], function(require, exports, module) {
    var Handlebars = require("utility/handlebars/1.3.0/runtime-debug");
    var template = Handlebars.template;
    module.exports = template(function(Handlebars, depth0, helpers, partials, data) {
        this.compilerInfo = [ 4, ">= 1.0.0" ];
        helpers = helpers || {};
        for (var key in Handlebars.helpers) {
            helpers[key] = helpers[key] || Handlebars.helpers[key];
        }
        data = data || {};
        return '<main role="main" class="zone wryh">\r\n\r\n\r\n\r\n    <header class="nav-header mine-model-car-header zone-cameraman-header">\r\n        <div class="left-button-wrap" data-role="page-back">\r\n            <a><i class="icon icon-back"></i></a>\r\n        </div>\r\n\r\n        <h3 class="title">空间</h3>\r\n        \r\n        <div class="right-button-wrap" data-role="show-pop">\r\n            <a class="fn-hide"><i class="circle-min"></i><i class="circle-min"></i><i class="circle-min"></i></a>\r\n        </div>\r\n    </header>\r\n\r\n\r\n    <div class="content-body " data-role="container" >\r\n        <div data-role="info">\r\n\r\n        </div>\r\n\r\n        \r\n\r\n    </div>\r\n\r\n    <!-- 大笨像 -->\r\n        <div class="pop-max-dabenxiang fn-hide" data-role="pop-dabenxiang-cameraman" style="background-image:url(../mobile/images/pop-modelcar-tips.png);background-size:80%;background-repeat:no-repeat;background-position:50%">\r\n        </div>\r\n</main>';
    });
});

define("pai/vwx0.0.1-beta/mine/zone/tpl/info-debug.handlebars", [ "utility/handlebars/1.3.0/runtime-debug" ], function(require, exports, module) {
    var Handlebars = require("utility/handlebars/1.3.0/runtime-debug");
    var template = Handlebars.template;
    module.exports = template(function(Handlebars, depth0, helpers, partials, data) {
        this.compilerInfo = [ 4, ">= 1.0.0" ];
        helpers = helpers || {};
        for (var key in Handlebars.helpers) {
            helpers[key] = helpers[key] || Handlebars.helpers[key];
        }
        data = data || {};
        var buffer = "", stack1, helper, self = this, functionType = "function", escapeExpression = this.escapeExpression;
        function program1(depth0, data) {
            var buffer = "", stack1;
            buffer += "\r\n                        ";
            stack1 = helpers["if"].call(depth0, depth0 && depth0.is_red, {
                hash: {},
                inverse: self.program(4, program4, data),
                fn: self.program(2, program2, data),
                data: data
            });
            if (stack1 || stack1 === 0) {
                buffer += stack1;
            }
            buffer += "\r\n                    ";
            return buffer;
        }
        function program2(depth0, data) {
            return '\r\n                            <i class="icon icon-red"></i>\r\n                        ';
        }
        function program4(depth0, data) {
            return '\r\n                            <i class="icon icon-grey"></i>\r\n                        ';
        }
        buffer += '<section class="group-items no-top " style="border:none" >\r\n    <ul>\r\n        <li data-role="grid-container" class="grid-pic-content" >\r\n\r\n        </li>\r\n    </ul>\r\n</section>\r\n<section class="group-items no-top" >\r\n    <ul>\r\n        <li data-role="user-info" class="item user-info">\r\n            <div data-role="head-icon" class="head-icon-items">\r\n                <i class="img circle-img head-icon" style="background-image:url(\'';
        if (helper = helpers.user_icon) {
            stack1 = helper.call(depth0, {
                hash: {},
                data: data
            });
        } else {
            helper = depth0 && depth0.user_icon;
            stack1 = typeof helper === functionType ? helper.call(depth0, {
                hash: {},
                data: data
            }) : helper;
        }
        buffer += escapeExpression(stack1) + '\');"></i>\r\n                <div class="user-name">';
        if (helper = helpers.nickname) {
            stack1 = helper.call(depth0, {
                hash: {},
                data: data
            });
        } else {
            helper = depth0 && depth0.nickname;
            stack1 = typeof helper === functionType ? helper.call(depth0, {
                hash: {},
                data: data
            }) : helper;
        }
        buffer += escapeExpression(stack1) + '</div>\r\n            </div>\r\n        </li>\r\n    </ul>\r\n</section>\r\n<section class="group-items no-top" >\r\n    <ul>\r\n        <li class="item rel-count">\r\n            <div data-role="follow" class="counts">\r\n                <em>';
        if (helper = helpers.follow) {
            stack1 = helper.call(depth0, {
                hash: {},
                data: data
            });
        } else {
            helper = depth0 && depth0.follow;
            stack1 = typeof helper === functionType ? helper.call(depth0, {
                hash: {},
                data: data
            }) : helper;
        }
        buffer += escapeExpression(stack1) + '</em>\r\n                关注\r\n            </div>\r\n            <div data-role="meber-lv" class="counts">\r\n                <em>VIP_';
        if (helper = helpers.user_level) {
            stack1 = helper.call(depth0, {
                hash: {},
                data: data
            });
        } else {
            helper = depth0 && depth0.user_level;
            stack1 = typeof helper === functionType ? helper.call(depth0, {
                hash: {},
                data: data
            }) : helper;
        }
        buffer += escapeExpression(stack1) + '</em>\r\n                会员等级\r\n            </div>\r\n            <div data-role="fans" class="counts fn-hide">\r\n                <em>';
        if (helper = helpers.fans) {
            stack1 = helper.call(depth0, {
                hash: {},
                data: data
            });
        } else {
            helper = depth0 && depth0.fans;
            stack1 = typeof helper === functionType ? helper.call(depth0, {
                hash: {},
                data: data
            }) : helper;
        }
        buffer += escapeExpression(stack1) + '</em>\r\n                粉丝\r\n            </div>\r\n        </li>\r\n    </ul>\r\n</section>\r\n<section class="group-items ">\r\n    <ul>\r\n        <li data-role="items " class="item location">\r\n            <div class="container"  >\r\n                <div class="com">\r\n                    <span class="txt">地区 : ';
        if (helper = helpers.city_name) {
            stack1 = helper.call(depth0, {
                hash: {},
                data: data
            });
        } else {
            helper = depth0 && depth0.city_name;
            stack1 = typeof helper === functionType ? helper.call(depth0, {
                hash: {},
                data: data
            }) : helper;
        }
        buffer += escapeExpression(stack1) + '</span>\r\n                </div>\r\n            </div>\r\n        </li>\r\n        <li data-role="items " class="item score">\r\n            <div class="container"  data-role="go-comment">\r\n                <div class="com">\r\n                    <span class="txt">评价 : </span>\r\n                    ';
        stack1 = helpers.each.call(depth0, depth0 && depth0.comment_stars_list, {
            hash: {},
            inverse: self.noop,
            fn: self.program(1, program1, data),
            data: data
        });
        if (stack1 || stack1 === 0) {
            buffer += stack1;
        }
        buffer += '\r\n                    <span class="red">';
        if (helper = helpers.comment_score) {
            stack1 = helper.call(depth0, {
                hash: {},
                data: data
            });
        } else {
            helper = depth0 && depth0.comment_score;
            stack1 = typeof helper === functionType ? helper.call(depth0, {
                hash: {},
                data: data
            }) : helper;
        }
        buffer += escapeExpression(stack1) + '分</span>\r\n                </div>\r\n                <div>\r\n                        <span class="">';
        if (helper = helpers.comment_num) {
            stack1 = helper.call(depth0, {
                hash: {},
                data: data
            });
        } else {
            helper = depth0 && depth0.comment_num;
            stack1 = typeof helper === functionType ? helper.call(depth0, {
                hash: {},
                data: data
            }) : helper;
        }
        buffer += escapeExpression(stack1) + '人评价\r\n                            <i class="icon icon-r"></i>\r\n                        </span>\r\n                </div>\r\n            </div>\r\n        </li>\r\n        <li data-role="items" class="item score">\r\n            <div class="container no-border-style">\r\n                <div class="com">\r\n                    <span>出勤率 : </span>\r\n                    ';
        stack1 = helpers.each.call(depth0, depth0 && depth0.attendance_stars_list, {
            hash: {},
            inverse: self.noop,
            fn: self.program(1, program1, data),
            data: data
        });
        if (stack1 || stack1 === 0) {
            buffer += stack1;
        }
        buffer += '\r\n                    <span class="red">';
        if (helper = helpers.attendance) {
            stack1 = helper.call(depth0, {
                hash: {},
                data: data
            });
        } else {
            helper = depth0 && depth0.attendance;
            stack1 = typeof helper === functionType ? helper.call(depth0, {
                hash: {},
                data: data
            }) : helper;
        }
        buffer += escapeExpression(stack1) + '%</span>\r\n                </div>\r\n            </div>\r\n        </li>\r\n    </ul>\r\n</section>\r\n<section class="group-items fn-hide" style="padding-bottom: 45px;">\r\n    <ul>\r\n        <li data-role="items photo-lv-container" class="item photo-lv">\r\n            <div class="name">摄影等级：</div>\r\n            <div class="txt">' + escapeExpression((stack1 = (stack1 = depth0 && depth0.zone_info, 
        stack1 == null || stack1 === false ? stack1 : stack1.intro), typeof stack1 === functionType ? stack1.apply(depth0) : stack1)) + "</div>\r\n        </li>\r\n    </ul>\r\n</section>";
        return buffer;
    });
});

/**
 * 我的zone 视图
 * hudw 2014.9.8
 */
define("pai/vwx0.0.1-beta/mine/zone/model_view-debug", [ "$-debug", "pai/vwx0.0.1-beta/frame/page_control-debug", "utility/backbone/1.1.2/backbone-debug", "pai/vwx0.0.1-beta/frame/ua-debug", "pai/vwx0.0.1-beta/frame/page-debug", "utility/zepto/modules/data/1.1.4/data-debug", "utility/hammer/plugins/jquery.hammer/1.1.3/jquery.hammer-debug", "utility/underscore/1.6.0/underscore-debug", "pai/vwx0.0.1-beta/common/view-debug", "utility/handlebars/1.3.0/runtime-debug", "pai/vwx0.0.1-beta/common/utility-debug", "pai/vwx0.0.1-beta/common/cross_domain_storage-debug", "matcha/cookie/1.0.0/cookie-debug", "pai/vwx0.0.1-beta/common/scroll-debug", "utility/iscroll/4.2.5/iscroll-debug", "pai/vwx0.0.1-beta/common/img-ready-debug", "pai/vwx0.0.1-beta/common/I_APP-debug", "pai/vwx0.0.1-beta/common/global_config-debug", "pai/vwx0.0.1-beta/ui/m_alert/view-debug", "pai/vwx0.0.1-beta/widget/model_pic/view-debug", "pai/vwx0.0.1-beta/common/template-helpers-debug" ], function(require, exports, module) {
    var $ = require("$-debug");
    var page_control = require("pai/vwx0.0.1-beta/frame/page_control-debug");
    var View = require("pai/vwx0.0.1-beta/common/view-debug");
    var tpl = require("pai/vwx0.0.1-beta/mine/zone/tpl/model_main-debug.handlebars");
    var utility = require("pai/vwx0.0.1-beta/common/utility-debug");
    var Scroll = require("pai/vwx0.0.1-beta/common/scroll-debug");
    var App = require("pai/vwx0.0.1-beta/common/I_APP-debug");
    var grid = require("pai/vwx0.0.1-beta/widget/model_pic/view-debug");
    var info_tpl = require("pai/vwx0.0.1-beta/mine/zone/tpl/model_info-debug.handlebars");
    var mine_view = View.extend({
        attrs: {
            template: tpl
        },
        events: {
            'tap [data-role="bar-swt"]': function(ev) {
                var self = this;
                if (self.$style_list.hasClass("fn-hide")) {
                    self.$style_list.removeClass("fn-hide");
                    self.$bottom_info.addClass("fn-hide");
                    self.$bar_sty.addClass("bar-hover");
                } else {
                    self.$bottom_info.removeClass("fn-hide");
                    self.$style_list.addClass("fn-hide");
                    self.$bar_sty.removeClass("bar-hover");
                }
                self.view_scroll_obj.refresh();
            },
            'tap [data-role="page-back"]': function() {
                var self = this;
                page_control.back();
            },
            'tap [data-role="edit"]': function() {
                var self = this;
                page_control.navigate_to_page("model_date/model_card/edit_all");
            },
            swiperight: function() {
                page_control.back();
            },
            /**
             * 点击查看轮播图
             * @param ev
             */
            "tap [data-role=grid-pic-container]": function(ev) {
                var self = this;
                var $cur_btn = $(ev.currentTarget);
                // 当前图片
                var cur_alumn_img = $cur_btn.attr("data-alumn-img");
                // 所有图片
                var $total_alumn_img = self.$("[data-role=grid-pic-container]");
                var total_alumn_img_arr = [];
                $total_alumn_img.each(function(i, obj) {
                    total_alumn_img_arr.push({
                        url: $(obj).attr("data-alumn-img"),
                        text: ""
                    });
                });
                // 当前图片索引
                var index = $total_alumn_img.index($cur_btn);
                // 轮播图数据
                var data = {
                    img_arr: total_alumn_img_arr,
                    index: index
                };
                console.log(data);
                if (!App.isPaiApp) {
                    console.log("no App");
                    return;
                }
                App.show_alumn_imgs(data);
            },
            //大笨象弹窗口
            'tap [data-role="pop-dabenxiang-model"]': function(ev) {
                var self = this;
                $(ev.currentTarget).addClass("fn-hide");
                utility.storage.set("pop-dabenxiang-model", 1);
            }
        },
        /**
         * 安装事件
         * @private
         */
        _setup_events: function() {
            var self = this;
            //大笨象
            if (utility.storage.get("pop-dabenxiang-model")) {
                self.$('[data-role="pop-dabenxiang-model"]').addClass("fn-hide");
            }
            self._render_info();
            self.model.on("change", function() {
                self._render_info();
            });
            self.on("update_info", function(response, xhr) {
                // 区分当前对象
                var _self = this;
                if (!self.view_scroll_obj) {
                    //主要滚动条
                    self._setup_scroll();
                    self.view_scroll_obj.scrollTo(0, 0);
                    self.view_scroll_obj.resetLazyLoad();
                    return;
                }
                self.view_scroll_obj.refresh();
            });
        },
        /**
         * 安装滚动条
         * @private
         */
        _setup_scroll: function() {
            var self = this;
            var view_scroll_obj = Scroll(self.$container, {
                lazyLoad: true
            });
            self.view_scroll_obj = view_scroll_obj;
        },
        /**
         * 渲染内容
         * @param response
         * @private
         */
        _render_info: function(response) {
            var self = this;
            console.log(self.model.toJSON());
            var html_str = info_tpl(self.model.toJSON());
            self.$info_container.html(html_str);
            var art_imgs = [];
            var pic_arr = utility.user.get("pic_arr");
            for (var i = 0; i < pic_arr.length; i++) {
                var type;
                if ((i + 2) % 3 == 0) {
                    type = "middle";
                } else {
                    type = "one";
                }
                art_imgs.push({
                    type: type,
                    user_icon: pic_arr[i].img,
                    big_user_icon: pic_arr[i].big_user_icon
                });
            }
            if (art_imgs.length > 0) {
                var grid_list_view = new grid({
                    // 模板参数对象
                    templateModel: {
                        tpl_data: art_imgs,
                        tpl_type: "1l1m1r"
                    }
                }).render();
                self.$info_container.find("[data-role=grid-container]").html(grid_list_view.list());
            }
            self.trigger("update_info");
            self.$style_list = self.$('[data-role="style"]');
            self.$bottom_info = self.$('[data-role="bottom-info"]');
            self.$bar_sty = self.$('[data-role="bar-swt"]');
        },
        /**
         * 视图初始化入口
         */
        setup: function() {
            var self = this;
            // 配置交互对象
            self.$container = self.$("[data-role=container]");
            // 滚动容器
            self.$info_container = self.$('[data-role="info"]');
            // 空间信息容器
            // 安装事件
            self._setup_events();
            // 刷新
            self.refresh();
        },
        refresh: function() {
            var self = this;
            self.model.get_zone_info("model", utility.int(self.get("user_id")));
        },
        render: function() {
            var self = this;
            // 调用渲染函数
            View.prototype.render.apply(self);
            self.trigger("render");
            return self;
        }
    });
    module.exports = mine_view;
});

define("pai/vwx0.0.1-beta/mine/zone/tpl/model_main-debug.handlebars", [ "utility/handlebars/1.3.0/runtime-debug" ], function(require, exports, module) {
    var Handlebars = require("utility/handlebars/1.3.0/runtime-debug");
    var template = Handlebars.template;
    module.exports = template(function(Handlebars, depth0, helpers, partials, data) {
        this.compilerInfo = [ 4, ">= 1.0.0" ];
        helpers = helpers || {};
        for (var key in Handlebars.helpers) {
            helpers[key] = helpers[key] || Handlebars.helpers[key];
        }
        data = data || {};
        return '<main role="main" class="zone wryh">\r\n            <header class="nav-header mine-model-car-header">\r\n                <div class="left-button-wrap" data-role="page-back">\r\n                    <a><i class="icon icon-back"></i></a>\r\n                </div>\r\n\r\n                <h3 class="title">模特卡</h3>\r\n                \r\n                <div class="right-button-wrap" data-role="edit">\r\n                    <a><i class="circle-min"></i><i class="circle-min"></i><i class="circle-min"></i></a>\r\n                </div>\r\n            </header>  \r\n    <div class="content-body " data-role="container" style="">\r\n        <div  data-role="info">\r\n\r\n        </div>\r\n    </div>\r\n\r\n    <!-- 大笨像 -->\r\n        <div class="pop-max-dabenxiang" data-role="pop-dabenxiang-model" style="background-image:url(../mobile/images/pop-modelcar-tips.png);background-size:80%;background-repeat:no-repeat;background-position:50%">\r\n        </div>\r\n\r\n</main>';
    });
});

define("pai/vwx0.0.1-beta/mine/zone/tpl/model_info-debug.handlebars", [ "utility/handlebars/1.3.0/runtime-debug" ], function(require, exports, module) {
    var Handlebars = require("utility/handlebars/1.3.0/runtime-debug");
    var template = Handlebars.template;
    module.exports = template(function(Handlebars, depth0, helpers, partials, data) {
        this.compilerInfo = [ 4, ">= 1.0.0" ];
        helpers = helpers || {};
        for (var key in Handlebars.helpers) {
            helpers[key] = helpers[key] || Handlebars.helpers[key];
        }
        data = data || {};
        var buffer = "", stack1, helper, functionType = "function", escapeExpression = this.escapeExpression, self = this;
        function program1(depth0, data) {
            var buffer = "", stack1, helper;
            buffer += '\r\n                                <div class="item">\r\n                                    <div class="lbox">';
            if (helper = helpers.text) {
                stack1 = helper.call(depth0, {
                    hash: {},
                    data: data
                });
            } else {
                helper = depth0 && depth0.text;
                stack1 = typeof helper === functionType ? helper.call(depth0, {
                    hash: {},
                    data: data
                }) : helper;
            }
            buffer += escapeExpression(stack1) + '</div>\r\n                                    <div class="rbox"><span class="cor">￥';
            if (helper = helpers.price) {
                stack1 = helper.call(depth0, {
                    hash: {},
                    data: data
                });
            } else {
                helper = depth0 && depth0.price;
                stack1 = typeof helper === functionType ? helper.call(depth0, {
                    hash: {},
                    data: data
                }) : helper;
            }
            buffer += escapeExpression(stack1) + '</span> <span class="font">/小时</span></div>\r\n                                </div>\r\n                            ';
            return buffer;
        }
        function program3(depth0, data) {
            var buffer = "", stack1;
            buffer += "\r\n                                ";
            stack1 = helpers["if"].call(depth0, depth0 && depth0.is_red, {
                hash: {},
                inverse: self.program(6, program6, data),
                fn: self.program(4, program4, data),
                data: data
            });
            if (stack1 || stack1 === 0) {
                buffer += stack1;
            }
            buffer += "\r\n                            ";
            return buffer;
        }
        function program4(depth0, data) {
            return '\r\n                                    <i class="icon icon-red"></i>\r\n                                ';
        }
        function program6(depth0, data) {
            return '\r\n                                    <i class="icon icon-grey"></i>\r\n                                ';
        }
        buffer += '            <div class="mine-model-car">\r\n                    <ul>\r\n                        <li data-role="grid-container" class="grid-pic-content" >\r\n\r\n                        </li>\r\n                    </ul>\r\n       \r\n                <ul class="bar  "  data-role="bar-swt"  style="clear:both">  <!-- bar-hover -->\r\n                    <li  data-role="yuepai">\r\n                        <i class="icon icon-r-16x26-white"></i>我的约拍条件\r\n                    </li>\r\n\r\n                </ul>\r\n\r\n                <!-- 弹窗口  -->\r\n                <div class="pop-info fn-hide" data-role="style">\r\n                    <div class="wrap-box">\r\n                        <div class="box1">摄影师信用金要求：￥';
        if (helper = helpers.cameraman_require) {
            stack1 = helper.call(depth0, {
                hash: {},
                data: data
            });
        } else {
            helper = depth0 && depth0.cameraman_require;
            stack1 = typeof helper === functionType ? helper.call(depth0, {
                hash: {},
                data: data
            }) : helper;
        }
        buffer += escapeExpression(stack1) + '</div>\r\n                        <div class="box2">请选择拍摄风格</div>\r\n                        <div class="list-des clearfix">\r\n                            ';
        stack1 = helpers.each.call(depth0, depth0 && depth0.model_style, {
            hash: {},
            inverse: self.noop,
            fn: self.program(1, program1, data),
            data: data
        });
        if (stack1 || stack1 === 0) {
            buffer += stack1;
        }
        buffer += '\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div data-role="bottom-info">\r\n                    <div class="wrap-box">\r\n                        <div class="com">评价 :\r\n                            ';
        stack1 = helpers.each.call(depth0, depth0 && depth0.stars, {
            hash: {},
            inverse: self.noop,
            fn: self.program(3, program3, data),
            data: data
        });
        if (stack1 || stack1 === 0) {
            buffer += stack1;
        }
        buffer += '\r\n                            <span class="red">';
        if (helper = helpers.score) {
            stack1 = helper.call(depth0, {
                hash: {},
                data: data
            });
        } else {
            helper = depth0 && depth0.score;
            stack1 = typeof helper === functionType ? helper.call(depth0, {
                hash: {},
                data: data
            }) : helper;
        }
        buffer += escapeExpression(stack1) + '分</span></div>\r\n                        <div class="num">拍片次数  ';
        if (helper = helpers.take_photo_times) {
            stack1 = helper.call(depth0, {
                hash: {},
                data: data
            });
        } else {
            helper = depth0 && depth0.take_photo_times;
            stack1 = typeof helper === functionType ? helper.call(depth0, {
                hash: {},
                data: data
            }) : helper;
        }
        buffer += escapeExpression(stack1) + ' <!-- <i class="icon icon-r"></i> --></div>\r\n                    </div>\r\n\r\n                    <div class="img-area" >\r\n\r\n                        <div class="avatar-size-mod avatar-size-mod-50">\r\n                            <span class="icon avatar-size-area"></span>\r\n                            <i class="avatar-size-img" style="background-image: url(\'';
        if (helper = helpers.user_icon) {
            stack1 = helper.call(depth0, {
                hash: {},
                data: data
            });
        } else {
            helper = depth0 && depth0.user_icon;
            stack1 = typeof helper === functionType ? helper.call(depth0, {
                hash: {},
                data: data
            }) : helper;
        }
        buffer += escapeExpression(stack1) + '\'); background-size:cover;background-repeat: no-repeat;background-position: 50%;"></i>\r\n                        </div>\r\n\r\n                        <!-- <i class="user-img img circle-img head-icon"  style="background:url(\'';
        if (helper = helpers.user_icon) {
            stack1 = helper.call(depth0, {
                hash: {},
                data: data
            });
        } else {
            helper = depth0 && depth0.user_icon;
            stack1 = typeof helper === functionType ? helper.call(depth0, {
                hash: {},
                data: data
            }) : helper;
        }
        buffer += escapeExpression(stack1) + '\') no-repeat;background-size:cover;background-repeat: no-repeat;background-position: 50%;"></i> -->\r\n\r\n                    </div>\r\n\r\n                    <div class="model-info">\r\n                        <p class="p1"><i class="icon icon-person"></i> ';
        if (helper = helpers.nickname) {
            stack1 = helper.call(depth0, {
                hash: {},
                data: data
            });
        } else {
            helper = depth0 && depth0.nickname;
            stack1 = typeof helper === functionType ? helper.call(depth0, {
                hash: {},
                data: data
            }) : helper;
        }
        buffer += escapeExpression(stack1) + ' <i class="icon icon-place"></i> ';
        if (helper = helpers.city_name) {
            stack1 = helper.call(depth0, {
                hash: {},
                data: data
            });
        } else {
            helper = depth0 && depth0.city_name;
            stack1 = typeof helper === functionType ? helper.call(depth0, {
                hash: {},
                data: data
            }) : helper;
        }
        buffer += escapeExpression(stack1) + '</p>\r\n                        <p class="p2">';
        if (helper = helpers.model_type_list) {
            stack1 = helper.call(depth0, {
                hash: {},
                data: data
            });
        } else {
            helper = depth0 && depth0.model_type_list;
            stack1 = typeof helper === functionType ? helper.call(depth0, {
                hash: {},
                data: data
            }) : helper;
        }
        buffer += escapeExpression(stack1) + '</p>\r\n                    </div>\r\n\r\n                    <ul class="model-size">\r\n                        <li class="icon">';
        if (helper = helpers.height) {
            stack1 = helper.call(depth0, {
                hash: {},
                data: data
            });
        } else {
            helper = depth0 && depth0.height;
            stack1 = typeof helper === functionType ? helper.call(depth0, {
                hash: {},
                data: data
            }) : helper;
        }
        buffer += escapeExpression(stack1) + 'cm</li>\r\n                        <li class="icon">';
        if (helper = helpers.weight) {
            stack1 = helper.call(depth0, {
                hash: {},
                data: data
            });
        } else {
            helper = depth0 && depth0.weight;
            stack1 = typeof helper === functionType ? helper.call(depth0, {
                hash: {},
                data: data
            }) : helper;
        }
        buffer += escapeExpression(stack1) + 'kg</li>\r\n                        <li class="icon">';
        if (helper = helpers.cup) {
            stack1 = helper.call(depth0, {
                hash: {},
                data: data
            });
        } else {
            helper = depth0 && depth0.cup;
            stack1 = typeof helper === functionType ? helper.call(depth0, {
                hash: {},
                data: data
            }) : helper;
        }
        buffer += escapeExpression(stack1) + '</li>\r\n                        <li class="icon">';
        if (helper = helpers.chest) {
            stack1 = helper.call(depth0, {
                hash: {},
                data: data
            });
        } else {
            helper = depth0 && depth0.chest;
            stack1 = typeof helper === functionType ? helper.call(depth0, {
                hash: {},
                data: data
            }) : helper;
        }
        buffer += escapeExpression(stack1) + "-";
        if (helper = helpers.waist) {
            stack1 = helper.call(depth0, {
                hash: {},
                data: data
            });
        } else {
            helper = depth0 && depth0.waist;
            stack1 = typeof helper === functionType ? helper.call(depth0, {
                hash: {},
                data: data
            }) : helper;
        }
        buffer += escapeExpression(stack1) + "-";
        if (helper = helpers.hip) {
            stack1 = helper.call(depth0, {
                hash: {},
                data: data
            });
        } else {
            helper = depth0 && depth0.hip;
            stack1 = typeof helper === functionType ? helper.call(depth0, {
                hash: {},
                data: data
            }) : helper;
        }
        buffer += escapeExpression(stack1) + "</li>\r\n                    </ul>\r\n                </div>\r\n                \r\n                \r\n            </div>";
        return buffer;
    });
});

/**
 * Created by nolest on 2014/9/23.
 *
 * 约拍邀请列表
 *
 */
define("pai/vwx0.0.1-beta/mine/consider/index-debug", [ "$-debug", "pai/vwx0.0.1-beta/frame/page_control-debug", "utility/backbone/1.1.2/backbone-debug", "pai/vwx0.0.1-beta/frame/ua-debug", "pai/vwx0.0.1-beta/frame/page-debug", "utility/zepto/modules/data/1.1.4/data-debug", "utility/hammer/plugins/jquery.hammer/1.1.3/jquery.hammer-debug", "utility/underscore/1.6.0/underscore-debug", "pai/vwx0.0.1-beta/mine/consider/view-debug", "pai/vwx0.0.1-beta/common/view-debug", "utility/handlebars/1.3.0/runtime-debug", "pai/vwx0.0.1-beta/common/utility-debug", "pai/vwx0.0.1-beta/common/cross_domain_storage-debug", "matcha/cookie/1.0.0/cookie-debug", "pai/vwx0.0.1-beta/common/scroll-debug", "utility/iscroll/4.2.5/iscroll-debug", "pai/vwx0.0.1-beta/common/img-ready-debug", "pai/vwx0.0.1-beta/common/new_iscroll-debug", "pai/vwx0.0.1-beta/base/ua-debug", "pai/vwx0.0.1-beta/mine/consider/contain_view-debug", "pai/vwx0.0.1-beta/ui/m_alert/view-debug", "pai/vwx0.0.1-beta/widget/abnormal/view-debug", "pai/vwx0.0.1-beta/widget/load_more/view-debug", "pai/vwx0.0.1-beta/mine/consider/model-debug", "pai/vwx0.0.1-beta/common/global_config-debug", "pai/vwx0.0.1-beta/common/I_APP-debug", "pai/vwx0.0.1-beta/ui/dialog/index-debug", "pai/vwx0.0.1-beta/common/template-helpers-debug" ], function(require, exports, module) {
    var $ = require("$-debug");
    var page_control = require("pai/vwx0.0.1-beta/frame/page_control-debug");
    var consider_view = require("pai/vwx0.0.1-beta/mine/consider/view-debug");
    var consider_model = require("pai/vwx0.0.1-beta/mine/consider/model-debug");
    var global_config = require("pai/vwx0.0.1-beta/common/global_config-debug");
    var utility = require("pai/vwx0.0.1-beta/common/utility-debug");
    var App = require("pai/vwx0.0.1-beta/common/I_APP-debug");
    var m_alert = require("pai/vwx0.0.1-beta/ui/m_alert/view-debug");
    page_control.add_page([ function() {
        return {
            title: "约拍邀请",
            route: {
                "mine/consider(/:type)": "mine/consider(/:type)"
            },
            dom_not_cache: true,
            ignore_exist: true,
            transition_type: "slide",
            page_init: function(page_view, route_params_arr, route_params_obj) {
                var self = this;
                //获取用户类型
                var role = utility.user.get("role");
                //融合对象
                var templateModel = [];
                //配置分支信息
                if (role == "cameraman") {
                    templateModel = {
                        role: role,
                        is_cameraman: true
                    };
                } else {
                    templateModel = {
                        role: role,
                        is_cameraman: false
                    };
                }
                var model = new consider_model();
                var view_type;
                var can_back_to_mine = false;
                if (route_params_arr[0] == "consider") {
                    view_type = "consider";
                    can_back_to_mine = true;
                } else if (route_params_arr[0] == "confirm") {
                    view_type = "confirm";
                    can_back_to_mine = true;
                } else if (route_params_arr[0] == "can_back_to_mine") {
                    view_type = "consider";
                    can_back_to_mine = false;
                } else {
                    view_type = "consider";
                    can_back_to_mine = true;
                }
                var view = new consider_view({
                    model: model,
                    parentNode: self.$el,
                    type: view_type,
                    templateModel: templateModel,
                    can_back_to_mine: can_back_to_mine
                }).render();
            },
            page_before_show: function() {},
            page_show: function() {},
            page_before_hide: function() {}
        };
    } ]);
});

/**
 * Created by nolest on 2014/9/9.
 *
 * 约拍邀请列表view
 */
define("pai/vwx0.0.1-beta/mine/consider/view-debug", [ "$-debug", "pai/vwx0.0.1-beta/frame/page_control-debug", "utility/backbone/1.1.2/backbone-debug", "pai/vwx0.0.1-beta/frame/ua-debug", "pai/vwx0.0.1-beta/frame/page-debug", "utility/zepto/modules/data/1.1.4/data-debug", "utility/hammer/plugins/jquery.hammer/1.1.3/jquery.hammer-debug", "utility/underscore/1.6.0/underscore-debug", "pai/vwx0.0.1-beta/common/view-debug", "utility/handlebars/1.3.0/runtime-debug", "pai/vwx0.0.1-beta/common/utility-debug", "pai/vwx0.0.1-beta/common/cross_domain_storage-debug", "matcha/cookie/1.0.0/cookie-debug", "pai/vwx0.0.1-beta/common/scroll-debug", "utility/iscroll/4.2.5/iscroll-debug", "pai/vwx0.0.1-beta/common/img-ready-debug", "pai/vwx0.0.1-beta/common/new_iscroll-debug", "pai/vwx0.0.1-beta/base/ua-debug", "pai/vwx0.0.1-beta/mine/consider/contain_view-debug", "pai/vwx0.0.1-beta/ui/m_alert/view-debug", "pai/vwx0.0.1-beta/widget/abnormal/view-debug", "pai/vwx0.0.1-beta/widget/load_more/view-debug", "pai/vwx0.0.1-beta/mine/consider/model-debug", "pai/vwx0.0.1-beta/common/global_config-debug", "pai/vwx0.0.1-beta/common/I_APP-debug", "pai/vwx0.0.1-beta/ui/dialog/index-debug", "pai/vwx0.0.1-beta/common/template-helpers-debug" ], function(require, exports, module) {
    var $ = require("$-debug");
    var page_control = require("pai/vwx0.0.1-beta/frame/page_control-debug");
    var View = require("pai/vwx0.0.1-beta/common/view-debug");
    var consider_tpl = require("pai/vwx0.0.1-beta/mine/consider/tpl/main-debug.handlebars");
    var utility = require("pai/vwx0.0.1-beta/common/utility-debug");
    var Scroll = require("pai/vwx0.0.1-beta/common/scroll-debug");
    var new_iscroll = require("pai/vwx0.0.1-beta/common/new_iscroll-debug");
    var contain_view = require("pai/vwx0.0.1-beta/mine/consider/contain_view-debug");
    var m_alert = require("pai/vwx0.0.1-beta/ui/m_alert/view-debug");
    var container_model = require("pai/vwx0.0.1-beta/mine/consider/model-debug");
    var App = require("pai/vwx0.0.1-beta/common/I_APP-debug");
    var global_config = require("pai/vwx0.0.1-beta/common/global_config-debug");
    var Dialog = require("pai/vwx0.0.1-beta/ui/dialog/index-debug");
    var qr_tpl = require("pai/vwx0.0.1-beta/act/security/tpl/big_qr_code-debug.handlebars");
    var consider_view = View.extend({
        attrs: {
            template: consider_tpl
        },
        events: {
            swiperight: function() {
                if (window._IS_NEW_WEB_VIEW) {
                    return;
                }
                page_control.back();
            },
            "tap [data-role=page-back]": function(ev) {
                if (window._IS_NEW_WEB_VIEW) {
                    App.remove_front();
                    return;
                }
                var self = this;
                if (self.get("can_back_to_mine")) {
                    page_control.back();
                } else {
                    page_control.navigate_to_page("mine");
                }
            },
            'tap [data-role="considering"]': function(ev) {
                var self = this;
                $(ev.currentTarget).addClass("cur").siblings().removeClass("cur");
                self.confirm_view.hide();
                self.consider_view.show();
                //首次加载
                if (self.first_time_in_consider) {
                    self.consider_view.get_list();
                    self.first_time_in_consider = false;
                }
                //点击刷新
                if (self.current_type == "consider") {
                    self.consider_view.refresh();
                }
                self.current_type = "consider";
            },
            'tap [data-role="agreed"]': function(ev) {
                var self = this;
                $(ev.currentTarget).addClass("cur").siblings().removeClass("cur");
                self.consider_view.hide();
                self.confirm_view.show();
                //首次加载
                if (self.first_time_in_confirm) {
                    self.confirm_view.get_list();
                    self.first_time_in_confirm = false;
                }
                //点击刷新
                if (self.current_type == "confirm") {
                    self.confirm_view.refresh();
                }
                self.current_type = "confirm";
            },
            'tap [data-role="confirm_btn"]': function(ev) {
                var self = this;
                var $cur_btn = $(ev.currentTarget);
                var event_id = $cur_btn.attr("data-event-id");
                if (confirm("是否确认结束")) {
                    self.model.confirm_date(event_id);
                }
            },
            'tap [data-role="to-zone"]': function(ev) {
                var self = this;
                var $panel = $(ev.currentTarget);
                var user_id = $panel.attr("data-date-user-id");
                page_control.navigate_to_page("zone/" + user_id + "/cameraman");
            },
            'tap [data-role="btn_pub_scan"]': function(ev) {
                var self = this;
                var $cur_btn = $(ev.currentTarget);
                if (App.isPaiApp) {
                    App.qrcodescan();
                }
            },
            //出示二维码
            'tap [data-role="btn_pub_be_scan"]': function(ev) {
                var $cur_btn = $(ev.currentTarget);
                var event_id = $cur_btn.attr("data-event-id");
                var enroll_id = $cur_btn.attr("data-enroll-id");
                m_alert.show("加载二维码中...", "loading");
                utility.ajax_request({
                    url: global_config.ajax_url.get_act_ticket_detail,
                    data: {
                        event_id: event_id,
                        enroll_id: enroll_id
                    },
                    success: function(data) {
                        var qr_arr = data.result_data.data;
                        if (qr_arr.length == 0) {
                            m_alert.show("二维码不存在", "error");
                            return;
                        }
                        m_alert.hide({
                            delay: -1
                        });
                        // 放大二维码数据整合
                        var pic_w_h = Math.ceil(utility.get_view_port_width() - 90);
                        //滚动外框宽高
                        var out_height = pic_w_h + 35;
                        for (var i = 0; i < qr_arr.length; i++) {
                            qr_arr[i] = {
                                code: qr_arr[i].code,
                                qr_code: qr_arr[i].qr_code,
                                pic_w_h: pic_w_h,
                                out_height: out_height
                            };
                        }
                        // 数据结构
                        var data = {
                            qr_code_arr: qr_arr,
                            pic_w_h: pic_w_h,
                            out_height: out_height
                        };
                        var html_str = qr_tpl(data);
                        // 放大二维码弹出层
                        var dialog = new Dialog({
                            content: html_str
                        }).show();
                        var pic_view_scroll_obj = new_iscroll(dialog.$("[data-role=qr]"), {
                            lazyLoad: true
                        });
                        pic_view_scroll_obj.refresh();
                    },
                    error: function() {
                        m_alert.show("网络异常", "error");
                    }
                });
            },
            'tap [data-role="cameraman_date_list"]': function(ev) {
                var self = this;
                var $panel = $(ev.currentTarget);
                var from_date_id = $panel.attr("data-date-user-id");
                var item_type = $panel.attr("data-item-type");
                var user_id = $panel.attr("data-date-user-id");
                var _date_id = $panel.attr("data-date-id");
                var date_id = $panel.attr("data-to-date-id");
                var status = $panel.attr("data-date_status");
                if ($(ev.target).attr("data-to-tap") == "end" || $(ev.target).attr("data-to-tap") == "commit") {
                    return;
                }
                console.log(item_type);
                if (status == "wait") {
                    page_control.navigate_to_page("mine/consider_details_camera/" + date_id);
                } else {
                    page_control.navigate_to_page("mine/consider_details_camera/" + date_id);
                }
            },
            'tap [data-role="to_model_card"]': function(ev) {
                var self = this;
                var $panel = $(ev.currentTarget);
                var $target = $(ev.target).attr("data-to-tap");
                if ($target == "list") {
                    return;
                }
                var to_date_id = $panel.attr("data-to-date-id");
                page_control.navigate_to_page("model_card/" + to_date_id);
            },
            'tap [data-role="model_date_list"]': function(ev) {
                var self = this;
                var $panel = $(ev.currentTarget);
                var $target = $(ev.target).attr("data-to-tap");
                var to_date_id = $panel.attr("data-to-date-id");
                var item_type = $panel.attr("data-item-type");
                var enroll_id = $panel.attr("data-enroll-id");
                var date_id = $panel.attr("data-date-id");
                var from_date_id = $panel.attr("data-date-user-id");
                if ($target == "commit" || $target == "commit_text" || $target == "end" || $target == "icon") {
                    return;
                }
                if ($(ev.target).attr("data-enroll-id")) {
                    return;
                }
                page_control.navigate_to_page("mine/consider_details_camera/" + date_id);
            },
            'tap [data-role="btn_commit"]': function(ev) {
                var self = this;
                var $cur_btn = $(ev.currentTarget);
                var from_date_id = $cur_btn.attr("data-from-date-id");
                var to_date_id = $cur_btn.attr("data-to-date-id");
                //约拍事件id
                var date_id = $cur_btn.attr("data-date-id");
                var can_comment = $cur_btn.attr("data-can-comment");
                var to_event;
                var send_id;
                if (utility.user.get("role") == "model") {
                    to_event = "cameraman";
                    send_id = from_date_id;
                } else {
                    to_event = "model";
                    send_id = to_date_id;
                }
                if (can_comment) {
                    page_control.navigate_to_page("comment/" + to_event + "/" + date_id + "/" + send_id);
                }
            }
        },
        _setup_events: function() {
            var self = this;
            self.model.on("before:confirm_date:fetch", function(response, options) {
                m_alert.show("发送中", "loading");
            }).on("success:confirm_date:fetch", function(response, options) {
                var response = response.result_data;
                var msg = response.msg;
                m_alert.hide();
                if (response.code > 0) {
                    m_alert.show(msg, "right", {
                        delay: 2e3
                    });
                    var data = {
                        status: self.current_status,
                        page: 1
                    };
                    //self.model.get_list(data);
                    self.confirm_view.refresh();
                } else {
                    m_alert.show(msg, "error", {
                        delay: 1e3
                    });
                }
            }).on("error:confirm_date:fetch", function(response, options) {
                m_alert.show("网络出错", "right", {
                    delay: 1e3
                });
            }).on("complete:confirm_date:fetch", function(response, options) {});
        },
        setup: function() {
            var self = this;
            self.$container = self.$('[data-role="container"]');
            self.is_cameraman = self.get("templateModel").is_cameraman;
            var model = new container_model();
            //考虑中view
            self.consider_view = new contain_view({
                model: model,
                parentNode: self.$container,
                templateModel: {
                    type_tag: "consider",
                    role: self.get("templateModel").role,
                    is_cameraman: self.is_cameraman
                }
            }).render();
            //确认view
            self.confirm_view = new contain_view({
                model: model,
                parentNode: self.$container,
                templateModel: {
                    type_tag: "confirm",
                    role: self.get("templateModel").role,
                    is_cameraman: self.is_cameraman
                }
            }).render();
            //当前view标记
            self.current_type = self.get("type");
            //首次进入标记
            self.first_time_in_confirm = true;
            self.first_time_in_consider = true;
            if (self.current_type == "consider") {
                self.current_type = "consider";
                self.$('[data-role="considering"]').addClass("cur").siblings().removeClass("cur");
                self.confirm_view.hide();
                self.consider_view.show();
                self.consider_view.get_list();
                self.first_time_in_consider = false;
            } else if (self.current_type == "confirm") {
                self.$('[data-role="agreed"]').addClass("cur").siblings().removeClass("cur");
                self.current_type = "confirm";
                self.confirm_view.show();
                self.consider_view.hide();
                self.confirm_view.get_list();
                self.first_time_in_confirm = false;
            }
            self._setup_events();
        },
        render: function() {
            var self = this;
            View.prototype.render.apply(self);
            self.trigger("render");
            return self;
        }
    });
    module.exports = consider_view;
});

define("pai/vwx0.0.1-beta/mine/consider/tpl/main-debug.handlebars", [ "utility/handlebars/1.3.0/runtime-debug" ], function(require, exports, module) {
    var Handlebars = require("utility/handlebars/1.3.0/runtime-debug");
    var template = Handlebars.template;
    module.exports = template(function(Handlebars, depth0, helpers, partials, data) {
        this.compilerInfo = [ 4, ">= 1.0.0" ];
        helpers = helpers || {};
        for (var key in Handlebars.helpers) {
            helpers[key] = helpers[key] || Handlebars.helpers[key];
        }
        data = data || {};
        var buffer = "", stack1, self = this;
        function program1(depth0, data) {
            return '\r\n                <div class="considering cur" data-role="considering">模特考虑中</div>\r\n                <div class="agreed" data-role="agreed">模特已同意</div>\r\n            ';
        }
        function program3(depth0, data) {
            return '\r\n                <div class="considering cur" data-role="considering">考虑中</div>\r\n                <div class="agreed" data-role="agreed">已同意</div>\r\n            ';
        }
        buffer += '<main role="main" class="consider secondary">\r\n    <!-- <header class="page-header wryh">\r\n        <div class="page-back" data-role="page-back"><i class="icon icon-back-40x40"></i></div>\r\n        约拍邀请\r\n    </header> -->\r\n\r\n    <header class="nav-header mine-nav-header">\r\n        <div class="left-button-wrap" data-role="page-back">\r\n            <a><i class="icon icon-back"></i></a>\r\n        </div>\r\n\r\n        <h3 class="title">约拍订单</h3>\r\n        \r\n        <div class="right-button-wrap">\r\n            <a><i class="icon icon-cog"></i></a>\r\n        </div>\r\n    </header>\r\n    \r\n    <div class="content-body">\r\n        <div class="accept">\r\n            ';
        stack1 = helpers["if"].call(depth0, depth0 && depth0.is_cameraman, {
            hash: {},
            inverse: self.program(3, program3, data),
            fn: self.program(1, program1, data),
            data: data
        });
        if (stack1 || stack1 === 0) {
            buffer += stack1;
        }
        buffer += '\r\n        </div>\r\n        <div class="container" data-role="container">\r\n\r\n        </div>\r\n    </div>\r\n</main>';
        return buffer;
    });
});

/**
 * Created by nolest on 2014/9/24.
 */
define("pai/vwx0.0.1-beta/mine/consider/contain_view-debug", [ "$-debug", "pai/vwx0.0.1-beta/frame/page_control-debug", "utility/backbone/1.1.2/backbone-debug", "pai/vwx0.0.1-beta/frame/ua-debug", "pai/vwx0.0.1-beta/frame/page-debug", "utility/zepto/modules/data/1.1.4/data-debug", "utility/hammer/plugins/jquery.hammer/1.1.3/jquery.hammer-debug", "utility/underscore/1.6.0/underscore-debug", "pai/vwx0.0.1-beta/common/view-debug", "utility/handlebars/1.3.0/runtime-debug", "pai/vwx0.0.1-beta/common/utility-debug", "pai/vwx0.0.1-beta/common/cross_domain_storage-debug", "matcha/cookie/1.0.0/cookie-debug", "pai/vwx0.0.1-beta/common/new_iscroll-debug", "utility/iscroll/4.2.5/iscroll-debug", "pai/vwx0.0.1-beta/common/img-ready-debug", "pai/vwx0.0.1-beta/base/ua-debug", "pai/vwx0.0.1-beta/ui/m_alert/view-debug", "pai/vwx0.0.1-beta/widget/abnormal/view-debug", "pai/vwx0.0.1-beta/widget/load_more/view-debug" ], function(require, exports, module) {
    var $ = require("$-debug");
    var page_control = require("pai/vwx0.0.1-beta/frame/page_control-debug");
    var View = require("pai/vwx0.0.1-beta/common/view-debug");
    var contain_view_tpl = require("pai/vwx0.0.1-beta/mine/consider/tpl/contain_view-debug.handlebars");
    var utility = require("pai/vwx0.0.1-beta/common/utility-debug");
    var Scroll = require("pai/vwx0.0.1-beta/common/new_iscroll-debug");
    var m_alert = require("pai/vwx0.0.1-beta/ui/m_alert/view-debug");
    var invited_card_view = require("pai/vwx0.0.1-beta/mine/consider/tpl/invite-debug.handlebars");
    var abnormal = require("pai/vwx0.0.1-beta/widget/abnormal/view-debug");
    var load_more = require("pai/vwx0.0.1-beta/widget/load_more/view-debug");
    var considerView = View.extend({
        attrs: {
            template: contain_view_tpl
        },
        events: {},
        _setup_events: function() {
            var self = this;
            self.model.on("before:fetch", function() {
                m_alert.show("加载中", "loading", {
                    delay: 1e3
                });
            }).on("success:fetch", function(response, options) {
                //区分获取数据的view
                if (options.data.status == self.get("templateModel").type_tag) {
                    console.log(response);
                    self._render_invited_card(response.result_data);
                    self.fetching = false;
                }
            }).on("error:fetch", function(response, options) {
                m_alert.show("加载超时", "loading", {
                    delay: 1e3
                });
                self.fetching = false;
            }).on("complete:fetch", function(response, options) {});
        },
        _setup_load_more: function() {
            var self = this;
            self.load_more_obj = new load_more({
                templateModel: {
                    text: "上拉加载更多"
                },
                parentNode: self.$load_more
            }).render();
        },
        setup: function() {
            var self = this;
            self.type_tag = self.get("templateModel").type_tag;
            self.$container = self.$("[data-role=" + self.type_tag + "-warp]");
            self.$content_inside = self.$("[data-role=" + self.type_tag + "-content-inside]");
            self.$load_more = self.$("[data-role=" + self.type_tag + "-load_more]");
            var view_port_height = self.reset_viewport_height();
            self.$container.height(view_port_height);
            self.page_count = 1;
            self.fetching = false;
            self._setup_events();
            self._setup_load_more();
            self._setup_scroll();
        },
        render: function() {
            var self = this;
            View.prototype.render.apply(self);
            self.trigger("render");
            return self;
        },
        reset_viewport_height: function() {
            return utility.get_view_port_height("nav") - 40;
        },
        /* 渲染列表
         *
         */
        _render_invited_card: function(data) {
            var self = this;
            self.has_next_page = data.has_next_page;
            self.page_count++;
            self.data_cache = data.list;
            $.each(data.list, function(i, obj) {
                obj.is_cameraman = self.get("is_cameraman");
                console.log(obj);
                /*重写 2014.11.20 nolest
                //modify hudw 2014.11.8
                if(obj.pay_status == 0 && obj.is_cameraman)
                {
                    //待付款
                    obj.status_text = '待付款';
                }
                else if(obj.pay_status == 1)
                {
                    if(obj.date_status == 'wait')
                    {
                        obj.status_text = 'NEW'
                    }
                    else if (obj.date_status == 'confirm')
                    {
                        obj.status_text = ''
                    }
                    else if(obj.date_status == 'cancel')
                    {
                        obj.status_text = '已拒绝'
                    }
                }
                */
                var is_confirm = false;
                if (obj.date_status == "confirm") {
                    is_confirm = true;
                }
                //红色标签
                var is_new = false;
                var is_empty = false;
                console.log(obj.is_new);
                if (obj.lable == "NEW") {
                    is_new = true;
                }
                if (obj.lable == "") {
                    is_empty = true;
                }
                /*
                //已完成的活动的灰色标签
                if(obj.is_end == 1 && obj.is_comment == 1)
                {
                    obj.date_status = 'cancel';
                    obj.status_text = '已完成';
                }
                */
                var data = $.extend(true, {}, obj, {
                    is_cameraman: self.get("templateModel").is_cameraman,
                    is_confirm: is_confirm,
                    is_new: is_new,
                    is_empty: is_empty
                });
                var invited = invited_card_view({
                    data: data
                });
                self.$content_inside.append(invited);
            });
            //无内容时显示背景
            if (self.$content_inside.children().length == 0) {
                self.abnormal_view = new abnormal({
                    templateModel: {
                        content_height: utility.get_view_port_height("all") - 75
                    },
                    parentNode: self.$content_inside
                }).render();
            }
            self.$load_more.find('[data-role="load-more"]').addClass("fn-hide");
            if (self.has_next_page) {
                self.$load_more.find('[data-role="load-more"]').removeClass("fn-hide");
            }
            self._drop_reset();
            self.view_scroll_obj.refresh();
        },
        /* 安装滚动条
         *
         */
        _setup_scroll: function() {
            var self = this;
            var view_scroll_obj = Scroll(self.$container, {});
            view_scroll_obj.on("scrollMoveAfter", function() {
                var _self = this;
                if (_self.maxScrollY - _self.y > 40) {
                    //有下一页时才加载
                    if (self.has_next_page && !self.fetching) {
                        self.fetching = true;
                        self.get_list();
                    }
                }
            });
            self.view_scroll_obj = view_scroll_obj;
            self.view_scroll_obj.on("dropload", function(e) {
                self.refresh();
            });
            self.view_scroll_obj.refresh();
        },
        /* 加载数据
         *
         */
        get_list: function() {
            var self = this;
            var data = {
                status: self.get("templateModel").type_tag,
                role: self.get("templateModel").role,
                page: self.page_count
            };
            self.model.get_more_list(data);
        },
        /*  刷新方法
         *
         */
        refresh: function() {
            var self = this;
            self.page_count = 1;
            self.$content_inside.html("");
            var refresh_data = {
                status: self.get("templateModel").type_tag,
                role: self.get("templateModel").role,
                page: self.page_count
            };
            self.model.get_more_list(refresh_data);
            self.view_scroll_obj.scrollTo(0, 0);
        },
        _drop_reset: function() {
            var self = this;
            return;
            self.view_scroll_obj && self.view_scroll_obj.resetload();
        },
        /*  返回点击数据 大view调用
         *
         */
        search_data: function(id) {
            var self = this;
            var data;
            if (self.data_cache) {
                $.each(self.data_cache, function(i, obj) {
                    if (obj.date_id == id) {
                        data = obj;
                    }
                });
            }
            return data;
        },
        show: function() {
            var self = this;
            self.$el.removeClass("fn-hide");
        },
        hide: function() {
            var self = this;
            self.$el.addClass("fn-hide");
        }
    });
    module.exports = considerView;
});

define("pai/vwx0.0.1-beta/mine/consider/tpl/contain_view-debug.handlebars", [ "utility/handlebars/1.3.0/runtime-debug" ], function(require, exports, module) {
    var Handlebars = require("utility/handlebars/1.3.0/runtime-debug");
    var template = Handlebars.template;
    module.exports = template(function(Handlebars, depth0, helpers, partials, data) {
        this.compilerInfo = [ 4, ">= 1.0.0" ];
        helpers = helpers || {};
        for (var key in Handlebars.helpers) {
            helpers[key] = helpers[key] || Handlebars.helpers[key];
        }
        data = data || {};
        var buffer = "", stack1, helper, functionType = "function", escapeExpression = this.escapeExpression;
        buffer += '<div>\r\n    <div data-role="';
        if (helper = helpers.type_tag) {
            stack1 = helper.call(depth0, {
                hash: {},
                data: data
            });
        } else {
            helper = depth0 && depth0.type_tag;
            stack1 = typeof helper === functionType ? helper.call(depth0, {
                hash: {},
                data: data
            }) : helper;
        }
        buffer += escapeExpression(stack1) + '-warp">\r\n        <div class="warp-box">\r\n            <div class="child-content-inside" data-role="';
        if (helper = helpers.type_tag) {
            stack1 = helper.call(depth0, {
                hash: {},
                data: data
            });
        } else {
            helper = depth0 && depth0.type_tag;
            stack1 = typeof helper === functionType ? helper.call(depth0, {
                hash: {},
                data: data
            }) : helper;
        }
        buffer += escapeExpression(stack1) + '-content-inside">\r\n\r\n            </div>\r\n            <div class="load-more-container" data-role="';
        if (helper = helpers.type_tag) {
            stack1 = helper.call(depth0, {
                hash: {},
                data: data
            });
        } else {
            helper = depth0 && depth0.type_tag;
            stack1 = typeof helper === functionType ? helper.call(depth0, {
                hash: {},
                data: data
            }) : helper;
        }
        buffer += escapeExpression(stack1) + '-load_more"></div>\r\n        </div>\r\n    </div>\r\n</div>';
        return buffer;
    });
});

define("pai/vwx0.0.1-beta/mine/consider/tpl/invite-debug.handlebars", [ "utility/handlebars/1.3.0/runtime-debug" ], function(require, exports, module) {
    var Handlebars = require("utility/handlebars/1.3.0/runtime-debug");
    var template = Handlebars.template;
    module.exports = template(function(Handlebars, depth0, helpers, partials, data) {
        this.compilerInfo = [ 4, ">= 1.0.0" ];
        helpers = helpers || {};
        for (var key in Handlebars.helpers) {
            helpers[key] = helpers[key] || Handlebars.helpers[key];
        }
        data = data || {};
        var stack1, functionType = "function", escapeExpression = this.escapeExpression, self = this;
        function program1(depth0, data) {
            var buffer = "", stack1;
            buffer += '\r\n<div class="child" >\r\n    <div data-role="model_date_list" data-item-type="' + escapeExpression((stack1 = (stack1 = depth0 && depth0.data, 
            stack1 == null || stack1 === false ? stack1 : stack1.item_type), typeof stack1 === functionType ? stack1.apply(depth0) : stack1)) + '" data-date-id="' + escapeExpression((stack1 = (stack1 = depth0 && depth0.data, 
            stack1 == null || stack1 === false ? stack1 : stack1.date_id), typeof stack1 === functionType ? stack1.apply(depth0) : stack1)) + '" data-enroll-id="' + escapeExpression((stack1 = (stack1 = depth0 && depth0.data, 
            stack1 == null || stack1 === false ? stack1 : stack1.enroll_id), typeof stack1 === functionType ? stack1.apply(depth0) : stack1)) + '" data-date-user-id="' + escapeExpression((stack1 = (stack1 = depth0 && depth0.data, 
            stack1 == null || stack1 === false ? stack1 : stack1.from_date_id), typeof stack1 === functionType ? stack1.apply(depth0) : stack1)) + '" data-to-date-id="' + escapeExpression((stack1 = (stack1 = depth0 && depth0.data, 
            stack1 == null || stack1 === false ? stack1 : stack1.to_date_id), typeof stack1 === functionType ? stack1.apply(depth0) : stack1)) + '" data-date_status="' + escapeExpression((stack1 = (stack1 = depth0 && depth0.data, 
            stack1 == null || stack1 === false ? stack1 : stack1.date_status), typeof stack1 === functionType ? stack1.apply(depth0) : stack1)) + '" data-tap="list">\r\n        <div class="title">\r\n            <div class="name">模特：' + escapeExpression((stack1 = (stack1 = depth0 && depth0.data, 
            stack1 == null || stack1 === false ? stack1 : stack1.nickname), typeof stack1 === functionType ? stack1.apply(depth0) : stack1)) + '</div>\r\n            <div class="status">\r\n                <div class="status-in ';
            stack1 = helpers["if"].call(depth0, (stack1 = depth0 && depth0.data, stack1 == null || stack1 === false ? stack1 : stack1.is_new), {
                hash: {},
                inverse: self.program(4, program4, data),
                fn: self.program(2, program2, data),
                data: data
            });
            if (stack1 || stack1 === 0) {
                buffer += stack1;
            }
            buffer += " ";
            stack1 = helpers["if"].call(depth0, (stack1 = depth0 && depth0.data, stack1 == null || stack1 === false ? stack1 : stack1.is_empty), {
                hash: {},
                inverse: self.noop,
                fn: self.program(6, program6, data),
                data: data
            });
            if (stack1 || stack1 === 0) {
                buffer += stack1;
            }
            buffer += '">' + escapeExpression((stack1 = (stack1 = depth0 && depth0.data, stack1 == null || stack1 === false ? stack1 : stack1.lable), 
            typeof stack1 === functionType ? stack1.apply(depth0) : stack1)) + '</div>\r\n                <div class="arrow"><i class="icon icon-r-16x26"></i></div>\r\n            </div>\r\n        </div>\r\n        <div class="details">\r\n            <!-- <div class="img-container">\r\n                <i class="image-img" style="background-image: url(' + escapeExpression((stack1 = (stack1 = depth0 && depth0.data, 
            stack1 == null || stack1 === false ? stack1 : stack1.icon), typeof stack1 === functionType ? stack1.apply(depth0) : stack1)) + ');"></i>\r\n            </div> -->\r\n\r\n            <div class="img-container" data-role="to_model_card" data-date-user-id="' + escapeExpression((stack1 = (stack1 = depth0 && depth0.data, 
            stack1 == null || stack1 === false ? stack1 : stack1.from_date_id), typeof stack1 === functionType ? stack1.apply(depth0) : stack1)) + '" data-to-date-id="' + escapeExpression((stack1 = (stack1 = depth0 && depth0.data, 
            stack1 == null || stack1 === false ? stack1 : stack1.to_date_id), typeof stack1 === functionType ? stack1.apply(depth0) : stack1)) + '" data-to-tap="icon">\r\n            <div class="avatar-size-mod avatar-size-mod-80">\r\n                <span class="icon avatar-size-area "></span>\r\n                <i class="avatar-size-img" style="background-image: url(' + escapeExpression((stack1 = (stack1 = depth0 && depth0.data, 
            stack1 == null || stack1 === false ? stack1 : stack1.icon), typeof stack1 === functionType ? stack1.apply(depth0) : stack1)) + '); background-size:cover"></i>\r\n            </div>\r\n            </div>\r\n            \r\n            <div class="details-container">\r\n                <p class="notice">价格：' + escapeExpression((stack1 = (stack1 = depth0 && depth0.data, 
            stack1 == null || stack1 === false ? stack1 : stack1.total_price_v2), typeof stack1 === functionType ? stack1.apply(depth0) : stack1)) + "</p>\r\n                <!--p>时间：" + escapeExpression((stack1 = (stack1 = depth0 && depth0.data, 
            stack1 == null || stack1 === false ? stack1 : stack1.hour), typeof stack1 === functionType ? stack1.apply(depth0) : stack1)) + "小时</p-->\r\n                <!--p>类型：" + escapeExpression((stack1 = (stack1 = depth0 && depth0.data, 
            stack1 == null || stack1 === false ? stack1 : stack1.date_type), typeof stack1 === functionType ? stack1.apply(depth0) : stack1)) + '</p-->\r\n                <p class="style">风格：' + escapeExpression((stack1 = (stack1 = depth0 && depth0.data, 
            stack1 == null || stack1 === false ? stack1 : stack1.date_style), typeof stack1 === functionType ? stack1.apply(depth0) : stack1)) + "</p>\r\n\r\n                ";
            stack1 = helpers["if"].call(depth0, (stack1 = depth0 && depth0.data, stack1 == null || stack1 === false ? stack1 : stack1.event_ready), {
                hash: {},
                inverse: self.program(13, program13, data),
                fn: self.program(8, program8, data),
                data: data
            });
            if (stack1 || stack1 === 0) {
                buffer += stack1;
            }
            buffer += "\r\n\r\n                ";
            stack1 = helpers["if"].call(depth0, (stack1 = depth0 && depth0.data, stack1 == null || stack1 === false ? stack1 : stack1.event_finish), {
                hash: {},
                inverse: self.program(13, program13, data),
                fn: self.program(15, program15, data),
                data: data
            });
            if (stack1 || stack1 === 0) {
                buffer += stack1;
            }
            buffer += "\r\n\r\n                ";
            stack1 = helpers["if"].call(depth0, (stack1 = depth0 && depth0.data, stack1 == null || stack1 === false ? stack1 : stack1.event_cancel), {
                hash: {},
                inverse: self.program(13, program13, data),
                fn: self.program(13, program13, data),
                data: data
            });
            if (stack1 || stack1 === 0) {
                buffer += stack1;
            }
            buffer += "\r\n        <!--\r\n                ";
            stack1 = helpers["if"].call(depth0, (stack1 = depth0 && depth0.data, stack1 == null || stack1 === false ? stack1 : stack1.is_confirm), {
                hash: {},
                inverse: self.noop,
                fn: self.program(25, program25, data),
                data: data
            });
            if (stack1 || stack1 === 0) {
                buffer += stack1;
            }
            buffer += "\r\n                -->\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n";
            return buffer;
        }
        function program2(depth0, data) {
            return "red";
        }
        function program4(depth0, data) {
            return "gray";
        }
        function program6(depth0, data) {
            return "fn-hide";
        }
        function program8(depth0, data) {
            var buffer = "", stack1;
            buffer += "\r\n                    ";
            stack1 = helpers["if"].call(depth0, (stack1 = depth0 && depth0.data, stack1 == null || stack1 === false ? stack1 : stack1.is_scan), {
                hash: {},
                inverse: self.program(11, program11, data),
                fn: self.program(9, program9, data),
                data: data
            });
            if (stack1 || stack1 === 0) {
                buffer += stack1;
            }
            buffer += "\r\n                ";
            return buffer;
        }
        function program9(depth0, data) {
            return "\r\n                    ";
        }
        function program11(depth0, data) {
            var buffer = "", stack1;
            buffer += '\r\n                        <p class="btn_style">\r\n                            <button class="ui-button ui-button-size-middle ui-button-block ui-button-primary ui-button-size-radius-large auto_width" data-event-id="' + escapeExpression((stack1 = (stack1 = depth0 && depth0.data, 
            stack1 == null || stack1 === false ? stack1 : stack1.event_id), typeof stack1 === functionType ? stack1.apply(depth0) : stack1)) + '" data-enroll-id="' + escapeExpression((stack1 = (stack1 = depth0 && depth0.data, 
            stack1 == null || stack1 === false ? stack1 : stack1.enroll_id), typeof stack1 === functionType ? stack1.apply(depth0) : stack1)) + '" data-to-tap="end" data-role="btn_pub_be_scan">\r\n                                <span class="ui-button-content" data-to-tap="end"><i class="icon icon-btn-icon-bs" data-to-tap="end"></i>出示二维码</span>\r\n                            </button>\r\n                        </p>\r\n                    ';
            return buffer;
        }
        function program13(depth0, data) {
            return "\r\n                ";
        }
        function program15(depth0, data) {
            var buffer = "", stack1;
            buffer += "\r\n                    ";
            stack1 = helpers["if"].call(depth0, (stack1 = depth0 && depth0.data, stack1 == null || stack1 === false ? stack1 : stack1.is_comment), {
                hash: {},
                inverse: self.program(22, program22, data),
                fn: self.program(16, program16, data),
                data: data
            });
            if (stack1 || stack1 === 0) {
                buffer += stack1;
            }
            buffer += "\r\n                ";
            return buffer;
        }
        function program16(depth0, data) {
            var buffer = "", stack1;
            buffer += '\r\n                        <div style="margin-bottom:10px">\r\n                            已评价:\r\n                                <span class="starts">\r\n                                    ';
            stack1 = helpers.each.call(depth0, (stack1 = depth0 && depth0.data, stack1 == null || stack1 === false ? stack1 : stack1.stars_list), {
                hash: {},
                inverse: self.noop,
                fn: self.program(17, program17, data),
                data: data
            });
            if (stack1 || stack1 === 0) {
                buffer += stack1;
            }
            buffer += "\r\n                                </span>\r\n                        </div>\r\n                    ";
            return buffer;
        }
        function program17(depth0, data) {
            var buffer = "", stack1;
            buffer += "\r\n                                        ";
            stack1 = helpers["if"].call(depth0, depth0 && depth0.is_red, {
                hash: {},
                inverse: self.program(20, program20, data),
                fn: self.program(18, program18, data),
                data: data
            });
            if (stack1 || stack1 === 0) {
                buffer += stack1;
            }
            buffer += "\r\n                                    ";
            return buffer;
        }
        function program18(depth0, data) {
            return '\r\n                                            <i class="icon icon-stat-s-y"></i>\r\n                                        ';
        }
        function program20(depth0, data) {
            return '\r\n                                            <i class="icon icon-stat-s-g"></i>\r\n                                        ';
        }
        function program22(depth0, data) {
            var buffer = "", stack1;
            buffer += '\r\n                        <div class="btn-c">\r\n                            <button class="ui-button ui-button-size-middle ui-button-block ui-button-color3 ui-button-size-radius-large auto_width" ';
            stack1 = helpers.unless.call(depth0, (stack1 = depth0 && depth0.data, stack1 == null || stack1 === false ? stack1 : stack1.is_comment), {
                hash: {},
                inverse: self.noop,
                fn: self.program(23, program23, data),
                data: data
            });
            if (stack1 || stack1 === 0) {
                buffer += stack1;
            }
            buffer += ' data-prev-default="1" data-from-date-id="' + escapeExpression((stack1 = (stack1 = depth0 && depth0.data, 
            stack1 == null || stack1 === false ? stack1 : stack1.from_date_id), typeof stack1 === functionType ? stack1.apply(depth0) : stack1)) + '" data-to-date-id="' + escapeExpression((stack1 = (stack1 = depth0 && depth0.data, 
            stack1 == null || stack1 === false ? stack1 : stack1.to_date_id), typeof stack1 === functionType ? stack1.apply(depth0) : stack1)) + '" data-role="btn_commit" data-date-id="' + escapeExpression((stack1 = (stack1 = depth0 && depth0.data, 
            stack1 == null || stack1 === false ? stack1 : stack1.date_id), typeof stack1 === functionType ? stack1.apply(depth0) : stack1)) + '" data-to-tap="commit">\r\n                                <span class="ui-button-content" data-tap="commit_text" data-to-tap="commit"><i class="icon icon-btn-icon-pj" data-to-tap="commit"></i>评价模特</span>\r\n                            </button>\r\n                        </div>\r\n                    ';
            return buffer;
        }
        function program23(depth0, data) {
            return 'data-can-comment="1"';
        }
        function program25(depth0, data) {
            var buffer = "", stack1;
            buffer += "\r\n                    ";
            stack1 = helpers["if"].call(depth0, (stack1 = depth0 && depth0.data, stack1 == null || stack1 === false ? stack1 : stack1.is_end), {
                hash: {},
                inverse: self.program(35, program35, data),
                fn: self.program(26, program26, data),
                data: data
            });
            if (stack1 || stack1 === 0) {
                buffer += stack1;
            }
            buffer += "\r\n                ";
            return buffer;
        }
        function program26(depth0, data) {
            var buffer = "", stack1;
            buffer += "\r\n                        ";
            stack1 = helpers["if"].call(depth0, (stack1 = depth0 && depth0.data, stack1 == null || stack1 === false ? stack1 : stack1.is_comment), {
                hash: {},
                inverse: self.program(33, program33, data),
                fn: self.program(27, program27, data),
                data: data
            });
            if (stack1 || stack1 === 0) {
                buffer += stack1;
            }
            buffer += "\r\n                    ";
            return buffer;
        }
        function program27(depth0, data) {
            var buffer = "", stack1;
            buffer += '\r\n                            <div style="margin-bottom:10px">\r\n                                已评价:\r\n                                <span class="starts">\r\n                                ';
            stack1 = helpers.each.call(depth0, (stack1 = depth0 && depth0.data, stack1 == null || stack1 === false ? stack1 : stack1.stars_list), {
                hash: {},
                inverse: self.noop,
                fn: self.program(28, program28, data),
                data: data
            });
            if (stack1 || stack1 === 0) {
                buffer += stack1;
            }
            buffer += "\r\n                                </span>\r\n                            </div>    \r\n                        ";
            return buffer;
        }
        function program28(depth0, data) {
            var buffer = "", stack1;
            buffer += "\r\n                                    ";
            stack1 = helpers["if"].call(depth0, depth0 && depth0.is_red, {
                hash: {},
                inverse: self.program(31, program31, data),
                fn: self.program(29, program29, data),
                data: data
            });
            if (stack1 || stack1 === 0) {
                buffer += stack1;
            }
            buffer += "\r\n                                ";
            return buffer;
        }
        function program29(depth0, data) {
            return '\r\n                                        <i class="icon icon-stat-s-y"></i>\r\n                                    ';
        }
        function program31(depth0, data) {
            return '\r\n                                        <i class="icon icon-stat-s-g"></i>\r\n                                    ';
        }
        function program33(depth0, data) {
            var buffer = "", stack1;
            buffer += '\r\n                            <div class="btn-c">\r\n                                <button class="ui-button ui-button-size-middle ui-button-block ui-button-color3 ui-button-size-radius-large auto_width" ';
            stack1 = helpers.unless.call(depth0, (stack1 = depth0 && depth0.data, stack1 == null || stack1 === false ? stack1 : stack1.is_comment), {
                hash: {},
                inverse: self.noop,
                fn: self.program(23, program23, data),
                data: data
            });
            if (stack1 || stack1 === 0) {
                buffer += stack1;
            }
            buffer += ' data-prev-default="1" data-from-date-id="' + escapeExpression((stack1 = (stack1 = depth0 && depth0.data, 
            stack1 == null || stack1 === false ? stack1 : stack1.from_date_id), typeof stack1 === functionType ? stack1.apply(depth0) : stack1)) + '" data-to-date-id="' + escapeExpression((stack1 = (stack1 = depth0 && depth0.data, 
            stack1 == null || stack1 === false ? stack1 : stack1.to_date_id), typeof stack1 === functionType ? stack1.apply(depth0) : stack1)) + '" data-role="btn_commit" data-date-id="' + escapeExpression((stack1 = (stack1 = depth0 && depth0.data, 
            stack1 == null || stack1 === false ? stack1 : stack1.date_id), typeof stack1 === functionType ? stack1.apply(depth0) : stack1)) + '" data-to-tap="commit">\r\n                                    <span class="ui-button-content" data-tap="commit_text" data-to-tap="commit"><i class="icon icon-btn-icon-pj" data-to-tap="commit"></i>评价模特</span>\r\n                                </button>\r\n                            </div>\r\n                        ';
            return buffer;
        }
        function program35(depth0, data) {
            var buffer = "", stack1;
            buffer += "\r\n                        ";
            stack1 = helpers["if"].call(depth0, (stack1 = depth0 && depth0.data, stack1 == null || stack1 === false ? stack1 : stack1.is_scan), {
                hash: {},
                inverse: self.program(38, program38, data),
                fn: self.program(36, program36, data),
                data: data
            });
            if (stack1 || stack1 === 0) {
                buffer += stack1;
            }
            buffer += "\r\n                    ";
            return buffer;
        }
        function program36(depth0, data) {
            return "\r\n                        ";
        }
        function program38(depth0, data) {
            var buffer = "", stack1;
            buffer += '\r\n\r\n                            <p class="btn_style">\r\n                                <button class="ui-button ui-button-size-middle ui-button-block ui-button-primary ui-button-size-radius-large auto_width" data-event-id="' + escapeExpression((stack1 = (stack1 = depth0 && depth0.data, 
            stack1 == null || stack1 === false ? stack1 : stack1.event_id), typeof stack1 === functionType ? stack1.apply(depth0) : stack1)) + '" data-enroll-id="' + escapeExpression((stack1 = (stack1 = depth0 && depth0.data, 
            stack1 == null || stack1 === false ? stack1 : stack1.enroll_id), typeof stack1 === functionType ? stack1.apply(depth0) : stack1)) + '" data-to-tap="end" data-role="btn_pub_be_scan">\r\n                                    <span class="ui-button-content" data-to-tap="end"><i class="icon icon-btn-icon-bs" data-to-tap="end"></i>出示二维码</span>\r\n                                </button>\r\n                            </p>\r\n                        ';
            return buffer;
        }
        function program40(depth0, data) {
            var buffer = "", stack1;
            buffer += '\r\n<div class="child">\r\n    <div  data-role="cameraman_date_list"  data-date-id="' + escapeExpression((stack1 = (stack1 = depth0 && depth0.data, 
            stack1 == null || stack1 === false ? stack1 : stack1.date_id), typeof stack1 === functionType ? stack1.apply(depth0) : stack1)) + '" data-date-user-id="' + escapeExpression((stack1 = (stack1 = depth0 && depth0.data, 
            stack1 == null || stack1 === false ? stack1 : stack1.from_date_id), typeof stack1 === functionType ? stack1.apply(depth0) : stack1)) + '" data-item-type="' + escapeExpression((stack1 = (stack1 = depth0 && depth0.data, 
            stack1 == null || stack1 === false ? stack1 : stack1.item_type), typeof stack1 === functionType ? stack1.apply(depth0) : stack1)) + '" data-to-date-id="' + escapeExpression((stack1 = (stack1 = depth0 && depth0.data, 
            stack1 == null || stack1 === false ? stack1 : stack1.date_id), typeof stack1 === functionType ? stack1.apply(depth0) : stack1)) + '" data-date_status="' + escapeExpression((stack1 = (stack1 = depth0 && depth0.data, 
            stack1 == null || stack1 === false ? stack1 : stack1.date_status), typeof stack1 === functionType ? stack1.apply(depth0) : stack1)) + '">\r\n        <div class="title">\r\n            <div class="name">【约拍】摄影师 ' + escapeExpression((stack1 = (stack1 = depth0 && depth0.data, 
            stack1 == null || stack1 === false ? stack1 : stack1.nickname), typeof stack1 === functionType ? stack1.apply(depth0) : stack1)) + '</div>\r\n            <div class="status">\r\n                <div class="status-in ';
            stack1 = helpers["if"].call(depth0, (stack1 = depth0 && depth0.data, stack1 == null || stack1 === false ? stack1 : stack1.is_new), {
                hash: {},
                inverse: self.program(4, program4, data),
                fn: self.program(2, program2, data),
                data: data
            });
            if (stack1 || stack1 === 0) {
                buffer += stack1;
            }
            buffer += " ";
            stack1 = helpers["if"].call(depth0, (stack1 = depth0 && depth0.data, stack1 == null || stack1 === false ? stack1 : stack1.is_empty), {
                hash: {},
                inverse: self.noop,
                fn: self.program(6, program6, data),
                data: data
            });
            if (stack1 || stack1 === 0) {
                buffer += stack1;
            }
            buffer += '">' + escapeExpression((stack1 = (stack1 = depth0 && depth0.data, stack1 == null || stack1 === false ? stack1 : stack1.lable), 
            typeof stack1 === functionType ? stack1.apply(depth0) : stack1)) + '</div>\r\n                <div class="arrow"><i class="icon icon-r-16x26"></i></div>\r\n            </div>\r\n        </div>\r\n        <div class="details">\r\n            <!-- <div class="img-container">\r\n                <i class="image-img" style="background-image: url(\'' + escapeExpression((stack1 = (stack1 = depth0 && depth0.data, 
            stack1 == null || stack1 === false ? stack1 : stack1.icon), typeof stack1 === functionType ? stack1.apply(depth0) : stack1)) + '\');"></i>\r\n            </div> -->\r\n\r\n            <div class="img-container">\r\n            <div class="avatar-size-mod avatar-size-mod-80" data-date-user-id="' + escapeExpression((stack1 = (stack1 = depth0 && depth0.data, 
            stack1 == null || stack1 === false ? stack1 : stack1.from_date_id), typeof stack1 === functionType ? stack1.apply(depth0) : stack1)) + '" data-role="to-zone">\r\n                <span class="icon avatar-size-area "></span>\r\n                <i class="avatar-size-img" style="background-image: url(' + escapeExpression((stack1 = (stack1 = depth0 && depth0.data, 
            stack1 == null || stack1 === false ? stack1 : stack1.icon), typeof stack1 === functionType ? stack1.apply(depth0) : stack1)) + '); background-size:cover"></i>\r\n            </div>\r\n            </div>\r\n\r\n            <div class="details-container">\r\n                <p class="notice">价格：' + escapeExpression((stack1 = (stack1 = depth0 && depth0.data, 
            stack1 == null || stack1 === false ? stack1 : stack1.total_price_v2), typeof stack1 === functionType ? stack1.apply(depth0) : stack1)) + "</p>\r\n                <!--p>时间：" + escapeExpression((stack1 = (stack1 = depth0 && depth0.data, 
            stack1 == null || stack1 === false ? stack1 : stack1.hour), typeof stack1 === functionType ? stack1.apply(depth0) : stack1)) + "小时</p-->\r\n                <!--p>类型：" + escapeExpression((stack1 = (stack1 = depth0 && depth0.data, 
            stack1 == null || stack1 === false ? stack1 : stack1.date_type), typeof stack1 === functionType ? stack1.apply(depth0) : stack1)) + '</p-->\r\n                <p class="style">风格：' + escapeExpression((stack1 = (stack1 = depth0 && depth0.data, 
            stack1 == null || stack1 === false ? stack1 : stack1.date_style), typeof stack1 === functionType ? stack1.apply(depth0) : stack1)) + "</p>\r\n\r\n                ";
            stack1 = helpers["if"].call(depth0, (stack1 = depth0 && depth0.data, stack1 == null || stack1 === false ? stack1 : stack1.event_ready), {
                hash: {},
                inverse: self.program(13, program13, data),
                fn: self.program(41, program41, data),
                data: data
            });
            if (stack1 || stack1 === 0) {
                buffer += stack1;
            }
            buffer += "\r\n\r\n                ";
            stack1 = helpers["if"].call(depth0, (stack1 = depth0 && depth0.data, stack1 == null || stack1 === false ? stack1 : stack1.event_finish), {
                hash: {},
                inverse: self.program(13, program13, data),
                fn: self.program(46, program46, data),
                data: data
            });
            if (stack1 || stack1 === 0) {
                buffer += stack1;
            }
            buffer += "\r\n\r\n                ";
            stack1 = helpers["if"].call(depth0, (stack1 = depth0 && depth0.data, stack1 == null || stack1 === false ? stack1 : stack1.event_cancel), {
                hash: {},
                inverse: self.program(13, program13, data),
                fn: self.program(13, program13, data),
                data: data
            });
            if (stack1 || stack1 === 0) {
                buffer += stack1;
            }
            buffer += "\r\n\r\n\r\n                <!--\r\n                ";
            stack1 = helpers["if"].call(depth0, (stack1 = depth0 && depth0.data, stack1 == null || stack1 === false ? stack1 : stack1.is_confirm), {
                hash: {},
                inverse: self.noop,
                fn: self.program(53, program53, data),
                data: data
            });
            if (stack1 || stack1 === 0) {
                buffer += stack1;
            }
            buffer += "\r\n                -->\r\n        </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n";
            return buffer;
        }
        function program41(depth0, data) {
            var buffer = "", stack1;
            buffer += '\r\n                    <div class="btn-c" >\r\n                    ';
            stack1 = helpers["if"].call(depth0, (stack1 = depth0 && depth0.data, stack1 == null || stack1 === false ? stack1 : stack1.is_scan), {
                hash: {},
                inverse: self.program(44, program44, data),
                fn: self.program(42, program42, data),
                data: data
            });
            if (stack1 || stack1 === 0) {
                buffer += stack1;
            }
            buffer += "\r\n                    </div>\r\n                ";
            return buffer;
        }
        function program42(depth0, data) {
            var buffer = "", stack1;
            buffer += '\r\n                        <button class="ui-button ui-button-size-middle ui-button-block ui-button-color2 ui-button-size-radius-large auto_width" data-event-id="' + escapeExpression((stack1 = (stack1 = depth0 && depth0.data, 
            stack1 == null || stack1 === false ? stack1 : stack1.event_id), typeof stack1 === functionType ? stack1.apply(depth0) : stack1)) + '" data-role="confirm_btn" data-to-tap="end">\r\n                            <span class="ui-button-content" data-to-tap="end"><i class="icon icon-btn-icon-qr" data-to-tap="end"></i>确认完成</span>\r\n                        </button>\r\n                    ';
            return buffer;
        }
        function program44(depth0, data) {
            return '\r\n                        <button class="ui-button ui-button-size-middle ui-button-block ui-button-primary ui-button-size-radius-large auto_width" data-to-tap="end" data-role="btn_pub_scan">\r\n                            <span class="ui-button-content" data-to-tap="end"><i class="icon icon-btn-icon-sm" data-to-tap="end"></i>扫码签到</span>\r\n                        </button>\r\n                    ';
        }
        function program46(depth0, data) {
            var buffer = "", stack1;
            buffer += "\r\n                    ";
            stack1 = helpers["if"].call(depth0, (stack1 = depth0 && depth0.data, stack1 == null || stack1 === false ? stack1 : stack1.is_comment), {
                hash: {},
                inverse: self.program(50, program50, data),
                fn: self.program(47, program47, data),
                data: data
            });
            if (stack1 || stack1 === 0) {
                buffer += stack1;
            }
            buffer += "\r\n                ";
            return buffer;
        }
        function program47(depth0, data) {
            var buffer = "", stack1;
            buffer += '\r\n                        <div style="margin-bottom:10px">\r\n                            已评价:\r\n                            <span class="starts">\r\n                                ';
            stack1 = helpers.each.call(depth0, (stack1 = depth0 && depth0.data, stack1 == null || stack1 === false ? stack1 : stack1.stars_list), {
                hash: {},
                inverse: self.noop,
                fn: self.program(48, program48, data),
                data: data
            });
            if (stack1 || stack1 === 0) {
                buffer += stack1;
            }
            buffer += "\r\n                            </span>\r\n                        </div>\r\n                    ";
            return buffer;
        }
        function program48(depth0, data) {
            var buffer = "", stack1;
            buffer += "\r\n\r\n                                    ";
            stack1 = helpers["if"].call(depth0, depth0 && depth0.is_red, {
                hash: {},
                inverse: self.program(31, program31, data),
                fn: self.program(29, program29, data),
                data: data
            });
            if (stack1 || stack1 === 0) {
                buffer += stack1;
            }
            buffer += "\r\n\r\n                                ";
            return buffer;
        }
        function program50(depth0, data) {
            var buffer = "", stack1;
            buffer += '\r\n                        <div class="btn-c" >\r\n                            <button class="ui-button ui-button-size-middle ui-button-block ui-button-color3 ui-button-size-radius-large auto_width" ';
            stack1 = helpers.unless.call(depth0, (stack1 = depth0 && depth0.data, stack1 == null || stack1 === false ? stack1 : stack1.is_comment), {
                hash: {},
                inverse: self.noop,
                fn: self.program(51, program51, data),
                data: data
            });
            if (stack1 || stack1 === 0) {
                buffer += stack1;
            }
            buffer += ' data-prev-default="1" data-from-date-id="' + escapeExpression((stack1 = (stack1 = depth0 && depth0.data, 
            stack1 == null || stack1 === false ? stack1 : stack1.from_date_id), typeof stack1 === functionType ? stack1.apply(depth0) : stack1)) + '" data-role="btn_commit" data-date-id="' + escapeExpression((stack1 = (stack1 = depth0 && depth0.data, 
            stack1 == null || stack1 === false ? stack1 : stack1.date_id), typeof stack1 === functionType ? stack1.apply(depth0) : stack1)) + '" data-to-tap="commit">\r\n                                <span class="ui-button-content" data-to-tap="commit"><i class="icon icon-btn-icon-pj" data-to-tap="commit"></i>评价摄影师</span>\r\n                            </button>\r\n                        </div>\r\n                    ';
            return buffer;
        }
        function program51(depth0, data) {
            return ' data-can-comment="1"';
        }
        function program53(depth0, data) {
            var buffer = "", stack1;
            buffer += "\r\n\r\n                    ";
            stack1 = helpers["if"].call(depth0, (stack1 = depth0 && depth0.data, stack1 == null || stack1 === false ? stack1 : stack1.is_end), {
                hash: {},
                inverse: self.program(63, program63, data),
                fn: self.program(54, program54, data),
                data: data
            });
            if (stack1 || stack1 === 0) {
                buffer += stack1;
            }
            buffer += "\r\n                ";
            return buffer;
        }
        function program54(depth0, data) {
            var buffer = "", stack1;
            buffer += "\r\n\r\n                        ";
            stack1 = helpers["if"].call(depth0, (stack1 = depth0 && depth0.data, stack1 == null || stack1 === false ? stack1 : stack1.is_comment), {
                hash: {},
                inverse: self.program(61, program61, data),
                fn: self.program(55, program55, data),
                data: data
            });
            if (stack1 || stack1 === 0) {
                buffer += stack1;
            }
            buffer += "\r\n\r\n\r\n                    ";
            return buffer;
        }
        function program55(depth0, data) {
            var buffer = "", stack1;
            buffer += '\r\n                                <div style="margin-bottom:10px">\r\n                                    已评价:\r\n                                    <span class="starts">\r\n                                    ';
            stack1 = helpers.each.call(depth0, (stack1 = depth0 && depth0.data, stack1 == null || stack1 === false ? stack1 : stack1.stars_list), {
                hash: {},
                inverse: self.noop,
                fn: self.program(56, program56, data),
                data: data
            });
            if (stack1 || stack1 === 0) {
                buffer += stack1;
            }
            buffer += "\r\n                                    </span>\r\n                                </div>    \r\n                        ";
            return buffer;
        }
        function program56(depth0, data) {
            var buffer = "", stack1;
            buffer += " \r\n                                    \r\n                                            ";
            stack1 = helpers["if"].call(depth0, depth0 && depth0.is_red, {
                hash: {},
                inverse: self.program(59, program59, data),
                fn: self.program(57, program57, data),
                data: data
            });
            if (stack1 || stack1 === 0) {
                buffer += stack1;
            }
            buffer += "\r\n                                        \r\n                                    ";
            return buffer;
        }
        function program57(depth0, data) {
            return '\r\n                                                <i class="icon icon-stat-s-y"></i>\r\n                                            ';
        }
        function program59(depth0, data) {
            return '\r\n                                                <i class="icon icon-stat-s-g"></i>\r\n                                            ';
        }
        function program61(depth0, data) {
            var buffer = "", stack1;
            buffer += '\r\n                               \r\n                                <div class="btn-c" >\r\n\r\n\r\n                                    <button class="ui-button ui-button-size-middle ui-button-block ui-button-color3 ui-button-size-radius-large auto_width" ';
            stack1 = helpers.unless.call(depth0, (stack1 = depth0 && depth0.data, stack1 == null || stack1 === false ? stack1 : stack1.is_comment), {
                hash: {},
                inverse: self.noop,
                fn: self.program(51, program51, data),
                data: data
            });
            if (stack1 || stack1 === 0) {
                buffer += stack1;
            }
            buffer += ' data-prev-default="1" data-from-date-id="' + escapeExpression((stack1 = (stack1 = depth0 && depth0.data, 
            stack1 == null || stack1 === false ? stack1 : stack1.from_date_id), typeof stack1 === functionType ? stack1.apply(depth0) : stack1)) + '" data-role="btn_commit" data-date-id="' + escapeExpression((stack1 = (stack1 = depth0 && depth0.data, 
            stack1 == null || stack1 === false ? stack1 : stack1.date_id), typeof stack1 === functionType ? stack1.apply(depth0) : stack1)) + '" data-to-tap="commit">\r\n                                        <span class="ui-button-content" data-to-tap="commit"><i class="icon icon-btn-icon-pj" data-to-tap="commit"></i>评价摄影师</span>\r\n                                    </button>\r\n\r\n\r\n\r\n                                </div>\r\n\r\n                        ';
            return buffer;
        }
        function program63(depth0, data) {
            var buffer = "", stack1;
            buffer += '\r\n\r\n                        <div class="btn-c" >\r\n                            ';
            stack1 = helpers["if"].call(depth0, (stack1 = depth0 && depth0.data, stack1 == null || stack1 === false ? stack1 : stack1.is_scan), {
                hash: {},
                inverse: self.program(66, program66, data),
                fn: self.program(64, program64, data),
                data: data
            });
            if (stack1 || stack1 === 0) {
                buffer += stack1;
            }
            buffer += "\r\n\r\n                        </div>\r\n                    ";
            return buffer;
        }
        function program64(depth0, data) {
            var buffer = "", stack1;
            buffer += '\r\n                                <button class="ui-button ui-button-size-middle ui-button-block ui-button-color2 ui-button-size-radius-large auto_width" data-event-id="' + escapeExpression((stack1 = (stack1 = depth0 && depth0.data, 
            stack1 == null || stack1 === false ? stack1 : stack1.event_id), typeof stack1 === functionType ? stack1.apply(depth0) : stack1)) + '" data-role="confirm_btn" data-to-tap="end">\r\n                                    <span class="ui-button-content" data-to-tap="end"><i class="icon icon-btn-icon-qr" data-to-tap="end"></i>确认完成</span>\r\n                                </button>\r\n                            ';
            return buffer;
        }
        function program66(depth0, data) {
            return '\r\n                                <button class="ui-button ui-button-size-middle ui-button-block ui-button-primary ui-button-size-radius-large auto_width" data-to-tap="end" data-role="btn_pub_scan">\r\n                                    <span class="ui-button-content" data-to-tap="end"><i class="icon icon-btn-icon-sm" data-to-tap="end"></i>扫码签到</span>\r\n                                </button>\r\n                            ';
        }
        stack1 = helpers["if"].call(depth0, (stack1 = depth0 && depth0.data, stack1 == null || stack1 === false ? stack1 : stack1.is_cameraman), {
            hash: {},
            inverse: self.program(40, program40, data),
            fn: self.program(1, program1, data),
            data: data
        });
        if (stack1 || stack1 === 0) {
            return stack1;
        } else {
            return "";
        }
    });
});

/**
 * 加载更多按钮
 * hdw 2014.8.18
 */
define("pai/vwx0.0.1-beta/widget/load_more/view-debug", [ "$-debug", "pai/vwx0.0.1-beta/common/view-debug", "utility/backbone/1.1.2/backbone-debug", "utility/handlebars/1.3.0/runtime-debug", "pai/vwx0.0.1-beta/common/utility-debug", "pai/vwx0.0.1-beta/common/cross_domain_storage-debug", "matcha/cookie/1.0.0/cookie-debug", "utility/underscore/1.6.0/underscore-debug", "pai/vwx0.0.1-beta/frame/ua-debug" ], function(require, exports, module) {
    var $ = require("$-debug");
    var View = require("pai/vwx0.0.1-beta/common/view-debug");
    var utility = require("pai/vwx0.0.1-beta/common/utility-debug");
    var load_more_tpl = require("pai/vwx0.0.1-beta/widget/load_more/tpl/load_more-debug.handlebars");
    module.exports = View.extend({
        attrs: {
            template: load_more_tpl
        },
        events: {},
        setup: function() {
            var self = this;
            self.hide();
        },
        show: function() {
            var self = this;
            self.$el.removeClass("fn-hide");
        },
        hide: function() {
            var self = this;
            self.$el.addClass("fn-hide");
        }
    });
});

define("pai/vwx0.0.1-beta/widget/load_more/tpl/load_more-debug.handlebars", [ "utility/handlebars/1.3.0/runtime-debug" ], function(require, exports, module) {
    var Handlebars = require("utility/handlebars/1.3.0/runtime-debug");
    var template = Handlebars.template;
    module.exports = template(function(Handlebars, depth0, helpers, partials, data) {
        this.compilerInfo = [ 4, ">= 1.0.0" ];
        helpers = helpers || {};
        for (var key in Handlebars.helpers) {
            helpers[key] = helpers[key] || Handlebars.helpers[key];
        }
        data = data || {};
        var buffer = "", stack1, functionType = "function", escapeExpression = this.escapeExpression, self = this;
        function program1(depth0, data) {
            var buffer = "", stack1, helper;
            buffer += "\r\n        <div>";
            if (helper = helpers.text) {
                stack1 = helper.call(depth0, {
                    hash: {},
                    data: data
                });
            } else {
                helper = depth0 && depth0.text;
                stack1 = typeof helper === functionType ? helper.call(depth0, {
                    hash: {},
                    data: data
                }) : helper;
            }
            buffer += escapeExpression(stack1) + "</div>\r\n    ";
            return buffer;
        }
        function program3(depth0, data) {
            return "\r\n        <div>加载更多</div>\r\n    ";
        }
        buffer += '<div class="ui-load-more-btn" data-role="load-more">\r\n    ';
        stack1 = helpers["if"].call(depth0, depth0 && depth0.text, {
            hash: {},
            inverse: self.program(3, program3, data),
            fn: self.program(1, program1, data),
            data: data
        });
        if (stack1 || stack1 === 0) {
            buffer += stack1;
        }
        buffer += "\r\n</div>\r\n";
        return buffer;
    });
});

/**
 * Created by nolest on 2014/9/9.
 */
define("pai/vwx0.0.1-beta/mine/consider/model-debug", [ "pai/vwx0.0.1-beta/common/global_config-debug", "utility/backbone/1.1.2/backbone-debug", "pai/vwx0.0.1-beta/common/utility-debug", "$-debug", "pai/vwx0.0.1-beta/common/cross_domain_storage-debug", "matcha/cookie/1.0.0/cookie-debug", "utility/underscore/1.6.0/underscore-debug", "pai/vwx0.0.1-beta/frame/ua-debug" ], function(require, exports, module) {
    var global_config = require("pai/vwx0.0.1-beta/common/global_config-debug");
    var Backbone = require("utility/backbone/1.1.2/backbone-debug");
    var utility = require("pai/vwx0.0.1-beta/common/utility-debug");
    module.exports = Backbone.Model.extend({
        url: global_config.ajax_url.consider_list,
        "default": {
            date_id: "",
            from_date_id: "",
            to_date_id: "",
            date_status: "",
            date_time: "",
            date_address: "",
            date_type: "",
            date_style: "",
            date_hour: "",
            date_price: "",
            check_id: "",
            event_id: "",
            add_time: "",
            update_time: "",
            pay_status: "",
            cancel_reason: "",
            status_remark: "",
            cameraman_icon: ""
        },
        _setup_events: function() {},
        parse: function(response) {
            if (response.result_data) {
                return response.result_data;
            }
            return response;
        },
        initialize: function() {},
        get_more_list: function(data) {
            var self = this;
            self.fetch({
                url: self.url,
                data: data,
                cache: false,
                beforeSend: function(xhr, options) {
                    self.trigger("before:fetch", xhr, options);
                },
                success: function(model, response, options) {
                    self.trigger("success:fetch", response, options);
                },
                error: function(model, xhr, options) {
                    self.trigger("error:fetch", model, xhr, options);
                },
                complete: function(xhr, status) {
                    self.trigger("complete:fetch", xhr, status);
                }
            });
            return self;
        },
        confirm_date: function(event_id) {
            var self = this;
            self.fetch({
                url: global_config.ajax_url.set_event_end_act,
                data: {
                    event_id: event_id
                },
                cache: false,
                beforeSend: function(xhr, options) {
                    self.trigger("before:confirm_date:fetch", xhr, options);
                },
                success: function(model, response, options) {
                    self.trigger("success:confirm_date:fetch", response, options);
                },
                error: function(model, xhr, options) {
                    self.trigger("error:confirm_date:fetch", model, xhr, options);
                },
                complete: function(xhr, status) {
                    self.trigger("complete:confirm_date:fetch", xhr, status);
                }
            });
        }
    });
});

define("pai/vwx0.0.1-beta/act/security/tpl/big_qr_code-debug.handlebars", [ "utility/handlebars/1.3.0/runtime-debug" ], function(require, exports, module) {
    var Handlebars = require("utility/handlebars/1.3.0/runtime-debug");
    var template = Handlebars.template;
    module.exports = template(function(Handlebars, depth0, helpers, partials, data) {
        this.compilerInfo = [ 4, ">= 1.0.0" ];
        helpers = helpers || {};
        for (var key in Handlebars.helpers) {
            helpers[key] = helpers[key] || Handlebars.helpers[key];
        }
        data = data || {};
        var buffer = "", stack1, helper, functionType = "function", escapeExpression = this.escapeExpression, self = this;
        function program1(depth0, data) {
            var buffer = "", stack1, helper;
            buffer += '\r\n            <div class="number">密码：<em>';
            if (helper = helpers.code) {
                stack1 = helper.call(depth0, {
                    hash: {},
                    data: data
                });
            } else {
                helper = depth0 && depth0.code;
                stack1 = typeof helper === functionType ? helper.call(depth0, {
                    hash: {},
                    data: data
                }) : helper;
            }
            buffer += escapeExpression(stack1) + '</em></div>\r\n            <div class="picture" data-role="picture" style="width:';
            if (helper = helpers.pic_w_h) {
                stack1 = helper.call(depth0, {
                    hash: {},
                    data: data
                });
            } else {
                helper = depth0 && depth0.pic_w_h;
                stack1 = typeof helper === functionType ? helper.call(depth0, {
                    hash: {},
                    data: data
                }) : helper;
            }
            buffer += escapeExpression(stack1) + "px;height:";
            if (helper = helpers.out_height) {
                stack1 = helper.call(depth0, {
                    hash: {},
                    data: data
                });
            } else {
                helper = depth0 && depth0.out_height;
                stack1 = typeof helper === functionType ? helper.call(depth0, {
                    hash: {},
                    data: data
                }) : helper;
            }
            buffer += escapeExpression(stack1) + 'px" data-role="close">\r\n                <img src="';
            if (helper = helpers.qr_code) {
                stack1 = helper.call(depth0, {
                    hash: {},
                    data: data
                });
            } else {
                helper = depth0 && depth0.qr_code;
                stack1 = typeof helper === functionType ? helper.call(depth0, {
                    hash: {},
                    data: data
                }) : helper;
            }
            buffer += escapeExpression(stack1) + '">\r\n            </div>\r\n        ';
            return buffer;
        }
        buffer += '<div class="qr" data-role="qr" style="width:';
        if (helper = helpers.pic_w_h) {
            stack1 = helper.call(depth0, {
                hash: {},
                data: data
            });
        } else {
            helper = depth0 && depth0.pic_w_h;
            stack1 = typeof helper === functionType ? helper.call(depth0, {
                hash: {},
                data: data
            }) : helper;
        }
        buffer += escapeExpression(stack1) + "px;height:";
        if (helper = helpers.out_height) {
            stack1 = helper.call(depth0, {
                hash: {},
                data: data
            });
        } else {
            helper = depth0 && depth0.out_height;
            stack1 = typeof helper === functionType ? helper.call(depth0, {
                hash: {},
                data: data
            }) : helper;
        }
        buffer += escapeExpression(stack1) + 'px">\r\n    <div>\r\n        ';
        stack1 = helpers.each.call(depth0, depth0 && depth0.qr_code_arr, {
            hash: {},
            inverse: self.noop,
            fn: self.program(1, program1, data),
            data: data
        });
        if (stack1 || stack1 === 0) {
            buffer += stack1;
        }
        buffer += "\r\n    </div>\r\n</div>";
        return buffer;
    });
});

/**
 * Created by nolest on 2014/9/10.
 *
 *
 *
 * 约拍订单页
 */
define("pai/vwx0.0.1-beta/mine/consider_details_camera/index-debug", [ "$-debug", "pai/vwx0.0.1-beta/frame/page_control-debug", "utility/backbone/1.1.2/backbone-debug", "pai/vwx0.0.1-beta/frame/ua-debug", "pai/vwx0.0.1-beta/frame/page-debug", "utility/zepto/modules/data/1.1.4/data-debug", "utility/hammer/plugins/jquery.hammer/1.1.3/jquery.hammer-debug", "utility/underscore/1.6.0/underscore-debug", "pai/vwx0.0.1-beta/mine/consider_details_camera/view-debug", "pai/vwx0.0.1-beta/common/view-debug", "utility/handlebars/1.3.0/runtime-debug", "pai/vwx0.0.1-beta/common/utility-debug", "pai/vwx0.0.1-beta/common/cross_domain_storage-debug", "matcha/cookie/1.0.0/cookie-debug", "pai/vwx0.0.1-beta/common/scroll-debug", "utility/iscroll/4.2.5/iscroll-debug", "pai/vwx0.0.1-beta/common/img-ready-debug", "pai/vwx0.0.1-beta/common/global_config-debug", "pai/vwx0.0.1-beta/common/I_APP-debug", "pai/vwx0.0.1-beta/ui/m_alert/view-debug", "pai/vwx0.0.1-beta/ui/dialog/index-debug", "pai/vwx0.0.1-beta/common/template-helpers-debug", "pai/vwx0.0.1-beta/common/I_WX-debug" ], function(require, exports, module) {
    var $ = require("$-debug");
    var page_control = require("pai/vwx0.0.1-beta/frame/page_control-debug");
    var consider_view = require("pai/vwx0.0.1-beta/mine/consider_details_camera/view-debug");
    var global_config = require("pai/vwx0.0.1-beta/common/global_config-debug");
    var utility = require("pai/vwx0.0.1-beta/common/utility-debug");
    page_control.add_page([ function() {
        return {
            title: "约拍详情",
            route: {
                "mine/consider_details_camera/:date_id(/:form)": "mine/consider_details_camera"
            },
            dom_not_cache: true,
            ignore_exist: true,
            transition_type: "slide",
            initialize: function() {},
            page_init: function(page_view, route_params_arr, route_params_obj) {
                var self = this;
                var date_id = route_params_arr[0];
                var date_role_is_model = 0;
                if (utility.user.get("role") == "model") {
                    // 约拍对象是摄影师
                    date_role_is_model = 0;
                } else {
                    // 约拍对象是模特
                    date_role_is_model = 1;
                }
                var is_form_cancel = false;
                if (route_params_arr[1] == "form_cancel") {
                    is_form_cancel = true;
                }
                var from_app = utility.get_url_params(window.location.search, "from_app");
                var view = new consider_view({
                    from_app: utility.int(from_app),
                    is_form_cancel: is_form_cancel,
                    parentNode: self.$el,
                    date_id: date_id,
                    date_role_is_model: date_role_is_model
                }).render();
            },
            page_before_show: function() {},
            page_show: function() {},
            page_before_hide: function() {}
        };
    } ]);
});

/**
 * Created by nolest on 2014/9/10.
 *
 *
 *
 */
define("pai/vwx0.0.1-beta/mine/consider_details_camera/view-debug", [ "$-debug", "pai/vwx0.0.1-beta/frame/page_control-debug", "utility/backbone/1.1.2/backbone-debug", "pai/vwx0.0.1-beta/frame/ua-debug", "pai/vwx0.0.1-beta/frame/page-debug", "utility/zepto/modules/data/1.1.4/data-debug", "utility/hammer/plugins/jquery.hammer/1.1.3/jquery.hammer-debug", "utility/underscore/1.6.0/underscore-debug", "pai/vwx0.0.1-beta/common/view-debug", "utility/handlebars/1.3.0/runtime-debug", "pai/vwx0.0.1-beta/common/utility-debug", "pai/vwx0.0.1-beta/common/cross_domain_storage-debug", "matcha/cookie/1.0.0/cookie-debug", "pai/vwx0.0.1-beta/common/scroll-debug", "utility/iscroll/4.2.5/iscroll-debug", "pai/vwx0.0.1-beta/common/img-ready-debug", "pai/vwx0.0.1-beta/common/global_config-debug", "pai/vwx0.0.1-beta/common/I_APP-debug", "pai/vwx0.0.1-beta/ui/m_alert/view-debug", "pai/vwx0.0.1-beta/ui/dialog/index-debug", "pai/vwx0.0.1-beta/common/template-helpers-debug", "pai/vwx0.0.1-beta/common/I_WX-debug" ], function(require, exports, module) {
    var $ = require("$-debug");
    var page_control = require("pai/vwx0.0.1-beta/frame/page_control-debug");
    var View = require("pai/vwx0.0.1-beta/common/view-debug");
    var consider_details_tpl = require("pai/vwx0.0.1-beta/mine/consider_details_camera/tpl/main-debug.handlebars");
    var items_tpl = require("pai/vwx0.0.1-beta/mine/consider_details_camera/tpl/items-debug.handlebars");
    var utility = require("pai/vwx0.0.1-beta/common/utility-debug");
    var Scroll = require("pai/vwx0.0.1-beta/common/scroll-debug");
    var global_config = require("pai/vwx0.0.1-beta/common/global_config-debug");
    var App = require("pai/vwx0.0.1-beta/common/I_APP-debug");
    var m_alert = require("pai/vwx0.0.1-beta/ui/m_alert/view-debug");
    var qr_tpl = require("pai/vwx0.0.1-beta/act/security/tpl/big_qr_code-debug.handlebars");
    var Dialog = require("pai/vwx0.0.1-beta/ui/dialog/index-debug");
    var footer_tpl = require("pai/vwx0.0.1-beta/mine/consider_details_camera/tpl/footer-debug.handlebars");
    var WeixinApi = require("pai/vwx0.0.1-beta/common/I_WX-debug");
    var dialog = require("pai/vwx0.0.1-beta/ui/dialog/index-debug");
    var consider_view = View.extend({
        attrs: {
            template: consider_details_tpl
        },
        events: {
            swiperight: function() {
                var self = this;
                if (self.get("is_form_cancel")) {
                    page_control.navigate_to_page("mine/consider/can_back_to_mine");
                } else {
                    page_control.back();
                }
            },
            'tap [data-role="comment"]': function(ev) {
                var self = this;
                var $cur_btn = $(ev.currentTarget);
                var from_date_id = $cur_btn.attr("data-from-date-id");
                var to_date_id = $cur_btn.attr("data-to-date-id");
                //约拍事件id
                var date_id = $cur_btn.attr("data-date-id");
                var to_event;
                var send_id;
                if (utility.user.get("role") == "model") {
                    to_event = "cameraman";
                    send_id = from_date_id;
                } else {
                    to_event = "model";
                    send_id = to_date_id;
                }
                page_control.navigate_to_page("comment/" + to_event + "/" + date_id + "/" + send_id);
            },
            //出示二维码
            'tap [data-role="show_ewm"]': function(ev) {
                var self = this;
                var $cur_btn = $(ev.currentTarget);
                var event_id = $cur_btn.attr("data-event-id");
                var enroll_id = $cur_btn.attr("data-enroll-id");
                m_alert.show("加载二维码中...", "loading");
                utility.ajax_request({
                    url: global_config.ajax_url.get_act_ticket_detail,
                    data: {
                        event_id: event_id,
                        enroll_id: enroll_id
                    },
                    success: function(data) {
                        var qr_arr = data.result_data.data;
                        if (!qr_arr || qr_arr.length == 0) {
                            m_alert.show("二维码不存在", "error");
                            return;
                        }
                        m_alert.hide({
                            delay: -1
                        });
                        // 放大二维码数据整合
                        var pic_w_h = Math.ceil(utility.get_view_port_width() - 90);
                        //滚动外框宽高
                        var out_height = pic_w_h + 35;
                        for (var i = 0; i < qr_arr.length; i++) {
                            qr_arr[i] = {
                                code: qr_arr[i].code,
                                qr_code: qr_arr[i].qr_code,
                                pic_w_h: pic_w_h,
                                out_height: out_height
                            };
                        }
                        // 数据结构
                        var data = {
                            qr_code_arr: qr_arr,
                            pic_w_h: pic_w_h,
                            out_height: out_height
                        };
                        var html_str = qr_tpl(data);
                        var interval_num;
                        // 放大二维码弹出层
                        var dialog = new Dialog({
                            content: html_str
                        }).on("after:show", function() {
                            interval_num = setInterval(function() {
                                utility.ajax_request({
                                    url: global_config.ajax_url.get_scan_code,
                                    data: {
                                        code: qr_arr[0].code
                                    },
                                    success: function(data) {
                                        if (data.result_data.data == 1) {
                                            console.log("已扫");
                                            console.log(self.from_app);
                                            if (self.from_app) {
                                                console.log(1);
                                                clearInterval(interval_num);
                                                App.app_back();
                                            } else {
                                                console.log(2);
                                            }
                                        } else if (data.result_data.data == 0) {
                                            console.log("未扫");
                                        }
                                    },
                                    error: function(data) {
                                        console.log("网络超时");
                                    }
                                });
                            }, 1500);
                        }).on("after:hide", function() {
                            clearInterval(interval_num);
                        }).show();
                        var pic_view_scroll_obj = Scroll(dialog.$("[data-role=qr]"), {
                            lazyLoad: true
                        });
                        pic_view_scroll_obj.refresh();
                    },
                    error: function() {
                        m_alert.show("网络异常", "error");
                    }
                });
            },
            'tap [data-role="scan"]': function(ev) {
                var self = this;
                if (App.isPaiApp) {
                    App.qrcodescan({
                        is_nav_page: false,
                        success: function(data) {
                            console.log("qr scan success");
                            App.app_back();
                        }
                    });
                }
            },
            'tap [data-role="agreement"]': function(ev) {
                //接受邀请
                var self = this;
                m_alert.show("提交中...", "loading");
                var $cur_btn = $(ev.currentTarget);
                var date_id = $cur_btn.attr("data-date-id");
                var data = {
                    date_id: date_id,
                    status: "confirm",
                    user_id: utility.user.get("user_id")
                };
                utility.ajax_request({
                    url: global_config.ajax_url.accept_invite,
                    data: data,
                    success: function(data) {
                        m_alert.show("提交成功", "right");
                        if (self.from_app) {
                            App.app_back();
                        } else {
                            self._refresh();
                        }
                    },
                    error: function() {
                        m_alert.show("网络异常", "error");
                    }
                });
            },
            /**
             * 拒绝
             */
            'tap [data-role="refuse"]': function() {
                //拒绝邀请
                var self = this;
                page_control.navigate_to_page("mine/consider_details_model/refuse", self.data_cache);
            },
            'tap [data-role="confirm"]': function(ev) {
                var self = this;
                m_alert.show("提交中...", "loading");
                var $cur_btn = $(ev.currentTarget);
                var event_id = $cur_btn.attr("data-event-id");
                if (confirm("是否确认结束")) {
                    utility.ajax_request({
                        url: global_config.ajax_url.set_event_end_act,
                        data: {
                            event_id: event_id
                        },
                        cache: false,
                        success: function(data) {
                            m_alert.show("提交成功", "right");
                            if (self.from_app) {
                                App.app_back();
                            } else {
                                self._refresh();
                            }
                        },
                        error: function() {
                            m_alert.show("网络异常", "error");
                        }
                    });
                }
            },
            "tap [data-role=page-back]": function(ev) {
                var self = this;
                if (self.get("is_form_cancel")) {
                    page_control.navigate_to_page("mine/consider/can_back_to_mine");
                } else {
                    page_control.back();
                }
            },
            'tap [data-role="nav-to-zone"]': function(ev) {
                return;
                var $cur_btn = $(ev.currentTarget);
                var user_id = $cur_btn.attr("data-user-id");
                page_control.navigate_to_page("zone/" + user_id + "/cameraman");
            },
            'tap [data-role="cam-dead"]': function(ev) {
                var self = this;
                var $tap = $(ev.currentTarget);
                if (self.get("date_role_is_model")) {
                    var user_id = $tap.attr("data-to_date_id");
                    page_control.navigate_to_page("model_card/" + user_id);
                } else {
                    var user_id = $tap.attr("data-from_date_id");
                    page_control.navigate_to_page("zone/" + user_id + "/cameraman");
                }
            },
            'tap [data-role="date_cancel"]': function() {
                var self = this;
                if (self.cancel_wait) {
                    page_control.navigate_to_page("mine/date_cancel_reason/" + self.date_id + "/cancel_wait");
                } else {
                    page_control.navigate_to_page("mine/date_cancel_reason/" + self.date_id);
                }
            },
            'tap [data-role="btn_talk"]': function() {
                var self = this;
                //模特发起私聊摄影师
                console.log("模特发起私聊摄影师");
                var data = {
                    senderid: utility.login_id,
                    receiverid: self.cameraman_id,
                    sendername: utility.user.get("nickname"),
                    receivername: self.cameraman_nickname,
                    sendericon: utility.user.get("user_icon"),
                    receivericon: self.cameraman_user_icon
                };
                console.log(data);
                if (!App.isPaiApp) {
                    console.warn("no App");
                    return;
                }
                App.chat(data);
            },
            'tap [data-role="msg"]': function() {
                var self = this;
                //摄影师发起私聊模特
                console.log("摄影师发起私聊模特");
                if (WeixinApi.isWexXin()) {
                    console.log("is weixin");
                    self.dialog_down_app.show();
                } else {
                    console.log("not weixin");
                    self.dialog_down_app.show();
                }
                return;
                var data = {
                    senderid: utility.login_id,
                    receiverid: self.model_id,
                    sendername: utility.user.get("nickname"),
                    receivername: self.model_nickname,
                    sendericon: utility.user.get("user_icon"),
                    receivericon: self.model_user_icon
                };
                console.log(data);
                if (!App.isPaiApp) {
                    console.warn("no App");
                    return;
                }
                App.chat(data);
            },
            'tap [data-role="force_refund"]': function() {
                if (confirm("你好，选择强制退款，系统将会把约拍费用的70%的金额退还到你的钱包，另外30%将给予模特作为补偿，请再次确认。")) {
                    //强制退款
                    var self = this;
                    m_alert.show("提交中...", "loading");
                    utility.ajax_request({
                        url: global_config.ajax_url.force_refund,
                        type: "POST",
                        data: {
                            date_id: self.get("date_id")
                        },
                        cache: true,
                        beforeSend: function(xhr, options) {
                            self.trigger("before:force_refund", xhr, options);
                        },
                        success: function(response, options) {
                            self.trigger("success:force_refund", response, options);
                        },
                        error: function(xhr, options) {
                            self.trigger("error:force_refund", xhr, options);
                        },
                        complete: function(xhr, status) {
                            self.trigger("complete:force_refund", xhr, status);
                        }
                    });
                }
            },
            'tap [data-role="agree"]': function() {
                //同意取消
                var self = this;
                m_alert.show("提交中...", "loading");
                utility.ajax_request({
                    url: global_config.ajax_url.update_agree_status,
                    type: "POST",
                    data: {
                        date_id: self.get("date_id"),
                        agree_status: "agree"
                    },
                    cache: true,
                    beforeSend: function(xhr, options) {
                        self.trigger("before:agree", xhr, options);
                    },
                    success: function(response, options) {
                        self.trigger("success:agree", response, options);
                    },
                    error: function(xhr, options) {
                        self.trigger("error:agree", xhr, options);
                    },
                    complete: function(xhr, status) {
                        self.trigger("complete:agree", xhr, status);
                    }
                });
            },
            'tap [data-role="not_agree"]': function() {
                //不同意取消
                var self = this;
                m_alert.show("提交中...", "loading");
                utility.ajax_request({
                    url: global_config.ajax_url.update_agree_status,
                    type: "POST",
                    data: {
                        date_id: self.get("date_id"),
                        agree_status: "disagree"
                    },
                    cache: true,
                    beforeSend: function(xhr, options) {
                        self.trigger("before:disagree", xhr, options);
                    },
                    success: function(response, options) {
                        self.trigger("success:disagree", response, options);
                    },
                    error: function(xhr, options) {
                        self.trigger("error:disagree", xhr, options);
                    },
                    complete: function(xhr, status) {
                        self.trigger("complete:disagree", xhr, status);
                    }
                });
            },
            'tap [data-role="step_container"]': function() {
                var self = this;
            }
        },
        _setup_events: function() {
            var self = this;
            self.on("render", function() {
                self._setup_scroll();
            });
            utility.user.on("before:get_date_by_date_id:fetch", function() {
                m_alert.show("加载中...", "loading", {
                    delay: -1
                });
            }).on("success:get_date_by_date_id:fetch", function(response) {
                m_alert.hide({
                    delay: -1
                });
                var params = response.result_data;
                // modify hudw 2014.12.26
                // 对于订单的权限进行处理，500代表没有登录权限，404代表不存在的订单
                if (params.code == 500) {
                    m_alert.show(params.msg, "right");
                    setTimeout(function() {
                        page_control.navigate_to_page(global_config.default_index_route);
                    }, 2400);
                    return;
                } else if (params.code == 404) {
                    m_alert.show(params.msg, "right");
                    setTimeout(function() {
                        page_control.navigate_to_page(global_config.default_index_route);
                    }, 2400);
                    return;
                }
                self._render_items(response.result_data.data);
            }).on("error:get_date_by_date_id:fetch", function() {
                m_alert.show("网络异常", "error");
            });
            //拒绝事件
            self.on("success:force_refund", function(response, options) {
                var msg = response.result_data.msg;
                var code = response.result_data.data;
                if (code == 1) {
                    m_alert.show(msg, "right");
                    if (self.from_app) {
                        App.app_back();
                    } else {
                        self._refresh();
                    }
                } else {
                    m_alert.show(msg, "error");
                }
            }).on("error:force_refund", function(response, options) {
                m_alert.show("提交失败，请重试", "error");
            }).on("complete:force_refund", function(response, options) {});
            //同意事件
            self.on("success:agree", function(response, options) {
                var msg = response.result_data.msg;
                var code = response.result_data.data;
                if (code == 1) {
                    m_alert.show(msg, "right");
                    if (self.from_app) {
                        App.app_back();
                    } else {
                        self._refresh();
                    }
                } else {
                    m_alert.show(msg, "error");
                }
            }).on("error:agree", function(response, options) {
                m_alert.show("提交失败，请重试", "error");
            }).on("complete:agree", function(response, options) {});
            //不同意事件
            self.on("success:disagree", function(response, options) {
                var msg = response.result_data.msg;
                var code = response.result_data.data;
                if (code == 1) {
                    m_alert.show(msg, "right");
                    if (self.from_app) {
                        App.app_back();
                    } else {
                        self._refresh();
                    }
                } else {
                    m_alert.show(msg, "error");
                }
            }).on("error:disagree", function(response, options) {
                m_alert.show("提交失败，请重试", "error");
            }).on("complete:disagree", function(response, options) {});
        },
        _drop_reset: function() {
            var self = this;
            self.view_scroll_obj && self.view_scroll_obj.resetload();
        },
        _setup_scroll: function() {
            var self = this;
            var view_scroll_obj = Scroll(self.$container, {
                is_hide_dropdown: false
            });
            self.view_scroll_obj = view_scroll_obj;
            self.view_scroll_obj.on("dropload", function(e) {
                self._refresh();
            });
        },
        _refresh: function() {
            var self = this;
            self.$('[data-role="date_cancel"]').addClass("fn-hide");
            self.$('[data-role="date_cancel_notice"]').addClass("fn-hide");
            self.$('[data-role="btn_talk_container"]').addClass("fn-hide");
            utility.user.get_date_by_date_id(self.get("date_id"));
            var view_port_height = self.reset_viewport_height() + 1;
            self.$container.height(view_port_height);
            self.view_scroll_obj.refresh();
        },
        _render_items: function(data) {
            var self = this;
            var has_btn = data.show_button_status || data.show_cancel_button_status;
            self.data_cache = data;
            data = $.extend(true, {}, data, {
                total_price: data.date_price * data.date_hour,
                date_role_is_model: self.get("date_role_is_model"),
                from_app: self.from_app,
                has_btn: has_btn
            });
            var html_str = items_tpl(data);
            var footer_str = footer_tpl(data);
            self.$list_container.html(html_str);
            self.date_id = data.date_id;
            self.model_nickname = data.model_nickname;
            self.model_user_icon = data.model_user_icon;
            self.cameraman_nickname = data.cameraman_nickname;
            self.cameraman_user_icon = data.cameraman_user_icon;
            self.cameraman_id = data.from_date_id;
            self.model_id = data.to_date_id;
            //摄影师申请退款按钮
            if (data.show_submit_refund_button == 1 && utility.user.get("role") == "cameraman") {
                self.$('[data-role="date_cancel"]').removeClass("fn-hide");
                self.$('[data-role="date_cancel_notice"]').removeClass("fn-hide");
            }
            //模特同意前退款 设置参数
            if (data.show_submit_refund_button == 1 && data.date_status == "wait" && data.pay_status == "1" && !self.from_app && utility.user.get("role") == "cameraman") {
                self.cancel_wait = true;
            }
            if (data.show_button_status || data.show_cancel_button_status) {
                var view_port_height = self.reset_viewport_height();
                self.$container.height(view_port_height - 50);
                self.view_scroll_obj.refresh();
            }
            if (data.cancel_status == 1 && data.cancel_log && data.cancel_log.length == 1 && utility.user.get("role") == "model" && !self.from_app) {
                //列表中的私聊一下按钮
                self.$('[data-role="btn_talk_container"]').removeClass("fn-hide");
                var view_port_height = self.reset_viewport_height();
                self.$container.height(view_port_height - 50);
                self.view_scroll_obj.refresh();
            }
            self.$footer_container.html(footer_str);
            if (self.from_app) {
                self.$('[data-role="btn_talk_container"]').addClass("fn-hide");
                self.$('[data-role="msg"]').addClass("fn-hide");
            }
            self.view_scroll_obj.refresh();
            self._drop_reset();
        },
        setup: function() {
            var self = this;
            self.$container = self.$('[data-role="content-body"]');
            self.$list_container = self.$('[data-role="list"]');
            self.$footer_container = self.$('[data-role="footer-contain"]');
            self.from_app = self.get("from_app");
            self._setup_events();
            utility.user.get_date_by_date_id(self.get("date_id"));
            console.log(self.get("date_role_is_model"));
            self.setup_dialog_down_app();
        },
        setup_dialog_down_app: function() {
            var self = this;
            // 已注册过的提示层安装 hudw 2014.11.21
            self.dialog_down_app = new dialog({
                content: '<p class="wx_card_notice">如需与模特私聊，请下载APP</p><button class="ui-button ui-button-primary ui-button-size-middle ui-button-block wx_card_login_btn"  data-role="button" data-name="wx_card_download_btn"><span class="ui-button-content">下载APP</span></button>'
            });
            self.dialog_down_app.on("tap:button:wx_card_download_btn", function() {
                this.hide();
                window.location.href = "http://app.yueus.com/";
            });
        },
        render: function() {
            var self = this;
            var view_port_height = self.reset_viewport_height() + 1;
            self.$container.height(view_port_height);
            View.prototype.render.apply(self);
            self.trigger("render");
            return self;
        },
        reset_viewport_height: function() {
            return utility.get_view_port_height("nav");
        }
    });
    module.exports = consider_view;
});

define("pai/vwx0.0.1-beta/mine/consider_details_camera/tpl/main-debug.handlebars", [ "utility/handlebars/1.3.0/runtime-debug" ], function(require, exports, module) {
    var Handlebars = require("utility/handlebars/1.3.0/runtime-debug");
    var template = Handlebars.template;
    module.exports = template(function(Handlebars, depth0, helpers, partials, data) {
        this.compilerInfo = [ 4, ">= 1.0.0" ];
        helpers = helpers || {};
        for (var key in Handlebars.helpers) {
            helpers[key] = helpers[key] || Handlebars.helpers[key];
        }
        data = data || {};
        return '<main role="main" class="consider_details_camera">\r\n    <header class="nav-header consider_details_camera-nav-header">\r\n        <div class="left-button-wrap" data-role="page-back">\r\n            <a><i class="icon icon-back"></i></a>\r\n        </div>\r\n\r\n        <h3 class="title">约拍详情</h3>\r\n\r\n        <div class="right-button-wrap">\r\n            <a><i class="icon icon-cog"></i></a>\r\n        </div>\r\n        <div class="tap fn-hide" data-role="date_cancel">申请退款</div>\r\n    </header>\r\n\r\n    <div class="content-body">\r\n        <div class="inside" data-role="content-body">\r\n            <div>\r\n                <div class="yuepai-info-mod" data-role="list">\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class="footer-contain" data-role="footer-contain"></div>\r\n    </div>\r\n</main>';
    });
});

define("pai/vwx0.0.1-beta/mine/consider_details_camera/tpl/items-debug.handlebars", [ "utility/handlebars/1.3.0/runtime-debug" ], function(require, exports, module) {
    var Handlebars = require("utility/handlebars/1.3.0/runtime-debug");
    var template = Handlebars.template;
    module.exports = template(function(Handlebars, depth0, helpers, partials, data) {
        this.compilerInfo = [ 4, ">= 1.0.0" ];
        helpers = helpers || {};
        for (var key in Handlebars.helpers) {
            helpers[key] = helpers[key] || Handlebars.helpers[key];
        }
        data = data || {};
        var buffer = "", stack1, helper, functionType = "function", escapeExpression = this.escapeExpression, self = this;
        function program1(depth0, data) {
            var buffer = "", stack1, helper;
            buffer += '\r\n    <div class="top_notice"><span class="notice">';
            if (helper = helpers.top_title) {
                stack1 = helper.call(depth0, {
                    hash: {},
                    data: data
                });
            } else {
                helper = depth0 && depth0.top_title;
                stack1 = typeof helper === functionType ? helper.call(depth0, {
                    hash: {},
                    data: data
                }) : helper;
            }
            if (stack1 || stack1 === 0) {
                buffer += stack1;
            }
            buffer += '</span><span class="notice_cancel fn-hide">X</span></div>\r\n';
            return buffer;
        }
        function program3(depth0, data) {
            var buffer = "", stack1, helper;
            buffer += '\r\n        <div class="avatar-size-mod avatar-size-mod-50">\r\n            <span class="icon avatar-size-area"></span>\r\n            <i class="avatar-size-img" style="background-image: url(';
            if (helper = helpers.model_user_icon) {
                stack1 = helper.call(depth0, {
                    hash: {},
                    data: data
                });
            } else {
                helper = depth0 && depth0.model_user_icon;
                stack1 = typeof helper === functionType ? helper.call(depth0, {
                    hash: {},
                    data: data
                }) : helper;
            }
            buffer += escapeExpression(stack1) + ');background-size:cover;background-repeat: no-repeat;background-position: 50%;"></i>\r\n        </div>\r\n        <div class="cam-space">\r\n            <div class="cam-right">\r\n                <div class="user-name" data-role="user-name">';
            if (helper = helpers.model_nickname) {
                stack1 = helper.call(depth0, {
                    hash: {},
                    data: data
                });
            } else {
                helper = depth0 && depth0.model_nickname;
                stack1 = typeof helper === functionType ? helper.call(depth0, {
                    hash: {},
                    data: data
                }) : helper;
            }
            buffer += escapeExpression(stack1) + '</div>\r\n                <div class="location">\r\n                    <!--i class="icon icon-place"></i-->\r\n                    <span data-role="location-name">';
            if (helper = helpers.city_name) {
                stack1 = helper.call(depth0, {
                    hash: {},
                    data: data
                });
            } else {
                helper = depth0 && depth0.city_name;
                stack1 = typeof helper === functionType ? helper.call(depth0, {
                    hash: {},
                    data: data
                }) : helper;
            }
            buffer += escapeExpression(stack1) + '</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class="icon icon-r-16x26 arrow"></div>\r\n    ';
            return buffer;
        }
        function program5(depth0, data) {
            var buffer = "", stack1, helper;
            buffer += '\r\n        <div class="avatar-size-mod avatar-size-mod-50">\r\n            <span class="icon avatar-size-area"></span>\r\n            <i class="avatar-size-img" style="background-image: url(';
            if (helper = helpers.cameraman_user_icon) {
                stack1 = helper.call(depth0, {
                    hash: {},
                    data: data
                });
            } else {
                helper = depth0 && depth0.cameraman_user_icon;
                stack1 = typeof helper === functionType ? helper.call(depth0, {
                    hash: {},
                    data: data
                }) : helper;
            }
            buffer += escapeExpression(stack1) + ');background-size:cover;background-repeat: no-repeat;background-position: 50%;"></i>\r\n        </div>\r\n        <div class="cam-space">\r\n            <div class="cam-right">\r\n                <div class="user-name" data-role="user-name">';
            if (helper = helpers.cameraman_nickname) {
                stack1 = helper.call(depth0, {
                    hash: {},
                    data: data
                });
            } else {
                helper = depth0 && depth0.cameraman_nickname;
                stack1 = typeof helper === functionType ? helper.call(depth0, {
                    hash: {},
                    data: data
                }) : helper;
            }
            buffer += escapeExpression(stack1) + '</div>\r\n                <div class="location">\r\n                    <!--i class="icon icon-place"></i-->\r\n                    <span data-role="location-name">';
            if (helper = helpers.city_name) {
                stack1 = helper.call(depth0, {
                    hash: {},
                    data: data
                });
            } else {
                helper = depth0 && depth0.city_name;
                stack1 = typeof helper === functionType ? helper.call(depth0, {
                    hash: {},
                    data: data
                }) : helper;
            }
            buffer += escapeExpression(stack1) + '</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class="icon icon-r-16x26 arrow"></div>\r\n    ';
            return buffer;
        }
        function program7(depth0, data) {
            var buffer = "", stack1;
            buffer += '\r\n    <div class="step_container secondary" data-role="step_container">\r\n        <div class="line"></div>\r\n        <div class="step_side">\r\n            ';
            stack1 = helpers.each.call(depth0, depth0 && depth0.cancel_log, {
                hash: {},
                inverse: self.noop,
                fn: self.program(8, program8, data),
                data: data
            });
            if (stack1 || stack1 === 0) {
                buffer += stack1;
            }
            buffer += "\r\n        </div>\r\n    </div>\r\n";
            return buffer;
        }
        function program8(depth0, data) {
            var buffer = "", stack1, helper;
            buffer += '\r\n                <div class="child">\r\n                    <div class="cirle"></div>\r\n                    <div class="user_icon">\r\n                        <div class="avatar-size-mod avatar-size-mod-32">\r\n                            <!--span class="icon avatar-size-area"></span-->\r\n                            <i class="avatar-size-img radius-af" style="background-image: url(';
            if (helper = helpers.user_icon) {
                stack1 = helper.call(depth0, {
                    hash: {},
                    data: data
                });
            } else {
                helper = depth0 && depth0.user_icon;
                stack1 = typeof helper === functionType ? helper.call(depth0, {
                    hash: {},
                    data: data
                }) : helper;
            }
            buffer += escapeExpression(stack1) + ');background-size:cover;background-repeat: no-repeat;background-position: 50%;"></i>\r\n                        </div>\r\n                    </div>\r\n                    <div class="log_side">\r\n                        <div class="title">';
            if (helper = helpers.text) {
                stack1 = helper.call(depth0, {
                    hash: {},
                    data: data
                });
            } else {
                helper = depth0 && depth0.text;
                stack1 = typeof helper === functionType ? helper.call(depth0, {
                    hash: {},
                    data: data
                }) : helper;
            }
            if (stack1 || stack1 === 0) {
                buffer += stack1;
            }
            buffer += "</div>\r\n                        ";
            stack1 = helpers["if"].call(depth0, depth0 && depth0.reason, {
                hash: {},
                inverse: self.noop,
                fn: self.program(9, program9, data),
                data: data
            });
            if (stack1 || stack1 === 0) {
                buffer += stack1;
            }
            buffer += '\r\n                        <div class="time">';
            if (helper = helpers.add_time) {
                stack1 = helper.call(depth0, {
                    hash: {},
                    data: data
                });
            } else {
                helper = depth0 && depth0.add_time;
                stack1 = typeof helper === functionType ? helper.call(depth0, {
                    hash: {},
                    data: data
                }) : helper;
            }
            buffer += escapeExpression(stack1) + '</div>\r\n                        <div class="btn_talk fn-hide" data-role="btn_talk_container">\r\n                            <button data-role="btn_talk" class="ui-button ui-button-primary ui-button-size-middle ui-button-block ui-button-primary ui-button-size-radius-large">\r\n                                <span class="ui-button-content"><i class="icon icon-siliao-m"></i> 私聊一下</span>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ';
            return buffer;
        }
        function program9(depth0, data) {
            var buffer = "", stack1, helper;
            buffer += '<div class="reason">理由：';
            if (helper = helpers.reason) {
                stack1 = helper.call(depth0, {
                    hash: {},
                    data: data
                });
            } else {
                helper = depth0 && depth0.reason;
                stack1 = typeof helper === functionType ? helper.call(depth0, {
                    hash: {},
                    data: data
                }) : helper;
            }
            buffer += escapeExpression(stack1) + "</div>";
            return buffer;
        }
        stack1 = helpers["if"].call(depth0, depth0 && depth0.top_title, {
            hash: {},
            inverse: self.noop,
            fn: self.program(1, program1, data),
            data: data
        });
        if (stack1 || stack1 === 0) {
            buffer += stack1;
        }
        buffer += '\r\n<!--div class="top_notice fn-hide"><span class="notice">取消约拍提交成功，请静候回复。</span><span class="notice_cancel">X</span></div>\r\n<div class="top_notice fn-hide"><span class="notice">对方已接受取消约拍</span><span class="notice_cancel">X</span></div>\r\n<div class="top_notice fn-hide"><span class="notice">对方拒绝取消约拍</span><span class="notice_cancel">X</span></div>\r\n<div class="top_notice fn-hide"><span class="notice">已退款成功</span><span class="notice_cancel">X</span></div-->\r\n\r\n<div class="cam-head secondary" data-role="cam-dead" data-from_date_id="';
        if (helper = helpers.from_date_id) {
            stack1 = helper.call(depth0, {
                hash: {},
                data: data
            });
        } else {
            helper = depth0 && depth0.from_date_id;
            stack1 = typeof helper === functionType ? helper.call(depth0, {
                hash: {},
                data: data
            }) : helper;
        }
        buffer += escapeExpression(stack1) + '" data-to_date_id="';
        if (helper = helpers.to_date_id) {
            stack1 = helper.call(depth0, {
                hash: {},
                data: data
            });
        } else {
            helper = depth0 && depth0.to_date_id;
            stack1 = typeof helper === functionType ? helper.call(depth0, {
                hash: {},
                data: data
            }) : helper;
        }
        buffer += escapeExpression(stack1) + '">\r\n    <div class="cam-head-inside">\r\n    ';
        stack1 = helpers["if"].call(depth0, depth0 && depth0.date_role_is_model, {
            hash: {},
            inverse: self.program(5, program5, data),
            fn: self.program(3, program3, data),
            data: data
        });
        if (stack1 || stack1 === 0) {
            buffer += stack1;
        }
        buffer += '\r\n    </div>\r\n</div>\r\n\r\n<ul class="list1 secondary">\r\n    <li>\r\n        <div class="l">价格：</div>\r\n        <div class="r">';
        if (helper = helpers.total_price_v2) {
            stack1 = helper.call(depth0, {
                hash: {},
                data: data
            });
        } else {
            helper = depth0 && depth0.total_price_v2;
            stack1 = typeof helper === functionType ? helper.call(depth0, {
                hash: {},
                data: data
            }) : helper;
        }
        buffer += escapeExpression(stack1) + '</div>\r\n    </li>\r\n    <!--li>\r\n        <div class="l">时长：</div>\r\n        <div class="r">';
        if (helper = helpers.date_hour) {
            stack1 = helper.call(depth0, {
                hash: {},
                data: data
            });
        } else {
            helper = depth0 && depth0.date_hour;
            stack1 = typeof helper === functionType ? helper.call(depth0, {
                hash: {},
                data: data
            }) : helper;
        }
        buffer += escapeExpression(stack1) + '小时</div>\r\n    </li-->\r\n    <li>\r\n        <div class="l">到场拍摄人数：</div>\r\n        <div class="r">';
        if (helper = helpers.limit_num) {
            stack1 = helper.call(depth0, {
                hash: {},
                data: data
            });
        } else {
            helper = depth0 && depth0.limit_num;
            stack1 = typeof helper === functionType ? helper.call(depth0, {
                hash: {},
                data: data
            }) : helper;
        }
        buffer += escapeExpression(stack1) + '</div>\r\n    </li>\r\n    <li>\r\n        <div class="l">风格：</div>\r\n        <div class="r">';
        if (helper = helpers.date_style) {
            stack1 = helper.call(depth0, {
                hash: {},
                data: data
            });
        } else {
            helper = depth0 && depth0.date_style;
            stack1 = typeof helper === functionType ? helper.call(depth0, {
                hash: {},
                data: data
            }) : helper;
        }
        buffer += escapeExpression(stack1) + '</div>\r\n    </li>\r\n    <!--li data-role="nav-to-zone" data-user-id="';
        if (helper = helpers.from_date_id) {
            stack1 = helper.call(depth0, {
                hash: {},
                data: data
            });
        } else {
            helper = depth0 && depth0.from_date_id;
            stack1 = typeof helper === functionType ? helper.call(depth0, {
                hash: {},
                data: data
            }) : helper;
        }
        buffer += escapeExpression(stack1) + '">\r\n        <div class="icon icon-r-16x26"></div>\r\n        <div class="l">摄影师：</div>\r\n        <div class="r">';
        if (helper = helpers.cameraman_nickname) {
            stack1 = helper.call(depth0, {
                hash: {},
                data: data
            });
        } else {
            helper = depth0 && depth0.cameraman_nickname;
            stack1 = typeof helper === functionType ? helper.call(depth0, {
                hash: {},
                data: data
            }) : helper;
        }
        buffer += escapeExpression(stack1) + '</div>\r\n    </li-->\r\n</ul>\r\n\r\n<ul class="list2 secondary">\r\n    <li>\r\n        <div class="l">到场拍摄时间：</div>\r\n        <div class="r">';
        if (helper = helpers.date_time) {
            stack1 = helper.call(depth0, {
                hash: {},
                data: data
            });
        } else {
            helper = depth0 && depth0.date_time;
            stack1 = typeof helper === functionType ? helper.call(depth0, {
                hash: {},
                data: data
            }) : helper;
        }
        buffer += escapeExpression(stack1) + '</div>\r\n    </li>\r\n    <li>\r\n        <div class="l">地点：</div>\r\n        <div class="r">';
        if (helper = helpers.date_address) {
            stack1 = helper.call(depth0, {
                hash: {},
                data: data
            });
        } else {
            helper = depth0 && depth0.date_address;
            stack1 = typeof helper === functionType ? helper.call(depth0, {
                hash: {},
                data: data
            }) : helper;
        }
        buffer += escapeExpression(stack1) + '</div>\r\n    </li>\r\n    <!--li>\r\n        <div class="l">时间：</div>\r\n        <div class="r">';
        if (helper = helpers.date_time) {
            stack1 = helper.call(depth0, {
                hash: {},
                data: data
            });
        } else {
            helper = depth0 && depth0.date_time;
            stack1 = typeof helper === functionType ? helper.call(depth0, {
                hash: {},
                data: data
            }) : helper;
        }
        buffer += escapeExpression(stack1) + '</div>\r\n    </li>\r\n    <li>\r\n        <div class="l">类型：</div>\r\n        <div class="r">';
        if (helper = helpers.date_type) {
            stack1 = helper.call(depth0, {
                hash: {},
                data: data
            });
        } else {
            helper = depth0 && depth0.date_type;
            stack1 = typeof helper === functionType ? helper.call(depth0, {
                hash: {},
                data: data
            }) : helper;
        }
        buffer += escapeExpression(stack1) + '</div>\r\n    </li>\r\n    <li>\r\n        <div class="l">地点：</div>\r\n        <div class="r">';
        if (helper = helpers.date_address) {
            stack1 = helper.call(depth0, {
                hash: {},
                data: data
            });
        } else {
            helper = depth0 && depth0.date_address;
            stack1 = typeof helper === functionType ? helper.call(depth0, {
                hash: {},
                data: data
            }) : helper;
        }
        buffer += escapeExpression(stack1) + "</div>\r\n    </li-->\r\n</ul>\r\n";
        stack1 = helpers["if"].call(depth0, depth0 && depth0.cancel_log, {
            hash: {},
            inverse: self.noop,
            fn: self.program(7, program7, data),
            data: data
        });
        if (stack1 || stack1 === 0) {
            buffer += stack1;
        }
        buffer += '\r\n\r\n\r\n<div class="submit_notice fn-hide" data-role="date_cancel_notice">\r\n    <p class="title">温馨提示：</p>\r\n    <p>1、约拍24小时之前取消，直接默认，全额退款。</p>\r\n    <p>2、约拍24小时之内取消，需要获得模特确认。模特12小时内不回复，系统将默认退款。</p>\r\n    <p>3、在约拍24小时之内取消，模特不同意取消的，将退还总价的70%。</p>\r\n</div>\r\n\r\n\r\n';
        return buffer;
    });
});

define("pai/vwx0.0.1-beta/mine/consider_details_camera/tpl/footer-debug.handlebars", [ "utility/handlebars/1.3.0/runtime-debug" ], function(require, exports, module) {
    var Handlebars = require("utility/handlebars/1.3.0/runtime-debug");
    var template = Handlebars.template;
    module.exports = template(function(Handlebars, depth0, helpers, partials, data) {
        this.compilerInfo = [ 4, ">= 1.0.0" ];
        helpers = helpers || {};
        for (var key in Handlebars.helpers) {
            helpers[key] = helpers[key] || Handlebars.helpers[key];
        }
        data = data || {};
        var stack1, functionType = "function", escapeExpression = this.escapeExpression, self = this;
        function program1(depth0, data) {
            var buffer = "", stack1;
            buffer += '\r\n    <div class="btn_footer">\r\n        ';
            stack1 = helpers["if"].call(depth0, depth0 && depth0.show_button_status, {
                hash: {},
                inverse: self.noop,
                fn: self.program(2, program2, data),
                data: data
            });
            if (stack1 || stack1 === 0) {
                buffer += stack1;
            }
            buffer += "\r\n        ";
            stack1 = helpers["if"].call(depth0, depth0 && depth0.show_cancel_button_status, {
                hash: {},
                inverse: self.noop,
                fn: self.program(15, program15, data),
                data: data
            });
            if (stack1 || stack1 === 0) {
                buffer += stack1;
            }
            buffer += "\r\n    </div>\r\n";
            return buffer;
        }
        function program2(depth0, data) {
            var buffer = "", stack1;
            buffer += "\r\n            ";
            stack1 = helpers["if"].call(depth0, depth0 && depth0.show_code_button, {
                hash: {},
                inverse: self.noop,
                fn: self.program(3, program3, data),
                data: data
            });
            if (stack1 || stack1 === 0) {
                buffer += stack1;
            }
            buffer += "\r\n            ";
            stack1 = helpers["if"].call(depth0, depth0 && depth0.show_comment_button, {
                hash: {},
                inverse: self.noop,
                fn: self.program(5, program5, data),
                data: data
            });
            if (stack1 || stack1 === 0) {
                buffer += stack1;
            }
            buffer += "\r\n            ";
            stack1 = helpers["if"].call(depth0, depth0 && depth0.show_accept_button, {
                hash: {},
                inverse: self.noop,
                fn: self.program(7, program7, data),
                data: data
            });
            if (stack1 || stack1 === 0) {
                buffer += stack1;
            }
            buffer += "\r\n            ";
            stack1 = helpers["if"].call(depth0, depth0 && depth0.show_reject_button, {
                hash: {},
                inverse: self.noop,
                fn: self.program(9, program9, data),
                data: data
            });
            if (stack1 || stack1 === 0) {
                buffer += stack1;
            }
            buffer += "\r\n            ";
            stack1 = helpers["if"].call(depth0, depth0 && depth0.show_scan_button, {
                hash: {},
                inverse: self.noop,
                fn: self.program(11, program11, data),
                data: data
            });
            if (stack1 || stack1 === 0) {
                buffer += stack1;
            }
            buffer += "\r\n            ";
            stack1 = helpers["if"].call(depth0, depth0 && depth0.show_event_finsh_button, {
                hash: {},
                inverse: self.noop,
                fn: self.program(13, program13, data),
                data: data
            });
            if (stack1 || stack1 === 0) {
                buffer += stack1;
            }
            buffer += "\r\n        ";
            return buffer;
        }
        function program3(depth0, data) {
            var buffer = "", stack1, helper;
            buffer += '\r\n                <div class="btn" data-role="show_ewm" data-event-id="';
            if (helper = helpers.event_id) {
                stack1 = helper.call(depth0, {
                    hash: {},
                    data: data
                });
            } else {
                helper = depth0 && depth0.event_id;
                stack1 = typeof helper === functionType ? helper.call(depth0, {
                    hash: {},
                    data: data
                }) : helper;
            }
            buffer += escapeExpression(stack1) + '" data-enroll-id="';
            if (helper = helpers.enroll_id) {
                stack1 = helper.call(depth0, {
                    hash: {},
                    data: data
                });
            } else {
                helper = depth0 && depth0.enroll_id;
                stack1 = typeof helper === functionType ? helper.call(depth0, {
                    hash: {},
                    data: data
                }) : helper;
            }
            buffer += escapeExpression(stack1) + '">\r\n                    <button class="ui-button ui-button-primary ui-button-size-middle ui-button-block ui-button-primary ui-button-size-radius-large">\r\n                        <span class="ui-button-content">出示签到券</span>\r\n                    </button>\r\n                </div>\r\n            ';
            return buffer;
        }
        function program5(depth0, data) {
            var buffer = "", stack1, helper;
            buffer += '\r\n                <div class="btn" data-role="comment" data-from-date-id="';
            if (helper = helpers.from_date_id) {
                stack1 = helper.call(depth0, {
                    hash: {},
                    data: data
                });
            } else {
                helper = depth0 && depth0.from_date_id;
                stack1 = typeof helper === functionType ? helper.call(depth0, {
                    hash: {},
                    data: data
                }) : helper;
            }
            buffer += escapeExpression(stack1) + '" data-to-date-id="';
            if (helper = helpers.to_date_id) {
                stack1 = helper.call(depth0, {
                    hash: {},
                    data: data
                });
            } else {
                helper = depth0 && depth0.to_date_id;
                stack1 = typeof helper === functionType ? helper.call(depth0, {
                    hash: {},
                    data: data
                }) : helper;
            }
            buffer += escapeExpression(stack1) + '" data-date-id="';
            if (helper = helpers.date_id) {
                stack1 = helper.call(depth0, {
                    hash: {},
                    data: data
                });
            } else {
                helper = depth0 && depth0.date_id;
                stack1 = typeof helper === functionType ? helper.call(depth0, {
                    hash: {},
                    data: data
                }) : helper;
            }
            buffer += escapeExpression(stack1) + '">\r\n                    <button class="ui-button ui-button-primary ui-button-size-middle ui-button-block ui-button-primary ui-button-size-radius-large">\r\n                        <span class="ui-button-content">评价</span>\r\n                    </button>\r\n                </div>\r\n            ';
            return buffer;
        }
        function program7(depth0, data) {
            var buffer = "", stack1, helper;
            buffer += '\r\n                <div class="btn" data-role="agreement" data-date-id="';
            if (helper = helpers.date_id) {
                stack1 = helper.call(depth0, {
                    hash: {},
                    data: data
                });
            } else {
                helper = depth0 && depth0.date_id;
                stack1 = typeof helper === functionType ? helper.call(depth0, {
                    hash: {},
                    data: data
                }) : helper;
            }
            buffer += escapeExpression(stack1) + '">\r\n                    <button class="ui-button ui-button-primary ui-button-size-middle ui-button-block ui-button-color2 ui-button-size-radius-large">\r\n                        <span class="ui-button-content">同意</span>\r\n                    </button>\r\n                </div>\r\n            ';
            return buffer;
        }
        function program9(depth0, data) {
            return '\r\n                <div class="btn" data-role="refuse">\r\n                    <button class="ui-button ui-button-primary ui-button-size-middle ui-button-block ui-button-color3 ui-button-size-radius-large">\r\n                        <span class="ui-button-content">拒绝</span>\r\n                    </button>\r\n                </div>\r\n            ';
        }
        function program11(depth0, data) {
            return '\r\n                <div class="btn" data-role="scan">\r\n                    <button class="ui-button ui-button-primary ui-button-size-middle ui-button-block ui-button-primary ui-button-size-radius-large">\r\n                        <span class="ui-button-content">扫描签到</span>\r\n                    </button>\r\n                </div>\r\n            ';
        }
        function program13(depth0, data) {
            var buffer = "", stack1, helper;
            buffer += '\r\n                <div class="btn" data-role="confirm" data-event-id="';
            if (helper = helpers.event_id) {
                stack1 = helper.call(depth0, {
                    hash: {},
                    data: data
                });
            } else {
                helper = depth0 && depth0.event_id;
                stack1 = typeof helper === functionType ? helper.call(depth0, {
                    hash: {},
                    data: data
                }) : helper;
            }
            buffer += escapeExpression(stack1) + '">\r\n                    <button class="ui-button ui-button-primary ui-button-size-middle ui-button-block ui-button-color2 ui-button-size-radius-large">\r\n                        <span class="ui-button-content">确认拍摄完成</span>\r\n                    </button>\r\n                </div>\r\n            ';
            return buffer;
        }
        function program15(depth0, data) {
            var buffer = "", stack1;
            buffer += "\r\n            ";
            stack1 = helpers["if"].call(depth0, depth0 && depth0.display_agree_button, {
                hash: {},
                inverse: self.noop,
                fn: self.program(16, program16, data),
                data: data
            });
            if (stack1 || stack1 === 0) {
                buffer += stack1;
            }
            buffer += "\r\n            ";
            stack1 = helpers["if"].call(depth0, depth0 && depth0.display_disagree_button, {
                hash: {},
                inverse: self.noop,
                fn: self.program(18, program18, data),
                data: data
            });
            if (stack1 || stack1 === 0) {
                buffer += stack1;
            }
            buffer += "\r\n            ";
            stack1 = helpers["if"].call(depth0, depth0 && depth0.display_refund_button, {
                hash: {},
                inverse: self.noop,
                fn: self.program(20, program20, data),
                data: data
            });
            if (stack1 || stack1 === 0) {
                buffer += stack1;
            }
            buffer += "\r\n        ";
            return buffer;
        }
        function program16(depth0, data) {
            return '\r\n                <div class="btn" data-role="agree">\r\n                    <button class="ui-button ui-button-primary ui-button-size-middle ui-button-block ui-button-color2 ui-button-size-radius-large">\r\n                        <span class="ui-button-content">同意取消</span>\r\n                    </button>\r\n                </div>\r\n            ';
        }
        function program18(depth0, data) {
            return '\r\n                <div class="btn" data-role="not_agree">\r\n                    <button class="ui-button ui-button-primary ui-button-size-middle ui-button-block ui-button-color3 ui-button-size-radius-large">\r\n                        <span class="ui-button-content">不同意取消</span>\r\n                    </button>\r\n                </div>\r\n            ';
        }
        function program20(depth0, data) {
            return '\r\n                <div class="btn" data-role="force_refund">\r\n                    <button class="ui-button ui-button-primary ui-button-size-middle ui-button-block ui-button-primary ui-button-size-radius-large">\r\n                        <span class="ui-button-content">强制退款</span>\r\n                    </button>\r\n                </div>\r\n                <div class="btn fn-hide" data-role="msg">\r\n                    <button class="ui-button ui-button-primary ui-button-size-middle ui-button-block ui-button-primary ui-button-size-radius-large">\r\n                        <span class="ui-button-content">私聊一下</span>\r\n                    </button>\r\n                </div>\r\n            ';
        }
        stack1 = helpers["if"].call(depth0, depth0 && depth0.has_btn, {
            hash: {},
            inverse: self.noop,
            fn: self.program(1, program1, data),
            data: data
        });
        if (stack1 || stack1 === 0) {
            return stack1;
        } else {
            return "";
        }
    });
});

define("pai/vwx0.0.1-beta/act/security/index-debug", [ "$-debug", "pai/vwx0.0.1-beta/frame/page_control-debug", "utility/backbone/1.1.2/backbone-debug", "pai/vwx0.0.1-beta/frame/ua-debug", "pai/vwx0.0.1-beta/frame/page-debug", "utility/zepto/modules/data/1.1.4/data-debug", "utility/hammer/plugins/jquery.hammer/1.1.3/jquery.hammer-debug", "utility/underscore/1.6.0/underscore-debug", "pai/vwx0.0.1-beta/common/utility-debug", "pai/vwx0.0.1-beta/common/cross_domain_storage-debug", "matcha/cookie/1.0.0/cookie-debug", "pai/vwx0.0.1-beta/act/security/view-debug", "pai/vwx0.0.1-beta/common/view-debug", "utility/handlebars/1.3.0/runtime-debug", "pai/vwx0.0.1-beta/ui/dialog/index-debug", "pai/vwx0.0.1-beta/common/template-helpers-debug", "pai/vwx0.0.1-beta/ui/m_alert/view-debug", "pai/vwx0.0.1-beta/common/scroll-debug", "utility/iscroll/4.2.5/iscroll-debug", "pai/vwx0.0.1-beta/common/img-ready-debug", "pai/vwx0.0.1-beta/widget/abnormal/view-debug", "pai/vwx0.0.1-beta/act/security/collection-debug", "pai/vwx0.0.1-beta/common/global_config-debug", "pai/vwx0.0.1-beta/common/collection-debug" ], function(require, exports, module) {
    var $ = require("$-debug");
    var page_control = require("pai/vwx0.0.1-beta/frame/page_control-debug");
    var utility = require("pai/vwx0.0.1-beta/common/utility-debug");
    var action_security_view = require("pai/vwx0.0.1-beta/act/security/view-debug");
    var action_security_collection = require("pai/vwx0.0.1-beta/act/security/collection-debug");
    page_control.add_page([ function() {
        return {
            title: "我的活动劵",
            route: {
                "act/security": "act/security"
            },
            dom_not_cache: true,
            ignore_exist: true,
            transition_type: "slide",
            page_init: function() {
                self.collection = new action_security_collection();
                this.security_view = new action_security_view({
                    parentNode: this.$el,
                    collection: self.collection
                }).render();
            },
            page_before_show: function() {},
            page_show: function() {},
            page_before_hide: function() {}
        };
    } ]);
});

define("pai/vwx0.0.1-beta/act/security/view-debug", [ "$-debug", "pai/vwx0.0.1-beta/frame/page_control-debug", "utility/backbone/1.1.2/backbone-debug", "pai/vwx0.0.1-beta/frame/ua-debug", "pai/vwx0.0.1-beta/frame/page-debug", "utility/zepto/modules/data/1.1.4/data-debug", "utility/hammer/plugins/jquery.hammer/1.1.3/jquery.hammer-debug", "utility/underscore/1.6.0/underscore-debug", "pai/vwx0.0.1-beta/common/view-debug", "utility/handlebars/1.3.0/runtime-debug", "pai/vwx0.0.1-beta/common/utility-debug", "pai/vwx0.0.1-beta/common/cross_domain_storage-debug", "matcha/cookie/1.0.0/cookie-debug", "pai/vwx0.0.1-beta/ui/dialog/index-debug", "pai/vwx0.0.1-beta/common/template-helpers-debug", "pai/vwx0.0.1-beta/ui/m_alert/view-debug", "pai/vwx0.0.1-beta/common/scroll-debug", "utility/iscroll/4.2.5/iscroll-debug", "pai/vwx0.0.1-beta/common/img-ready-debug", "pai/vwx0.0.1-beta/widget/abnormal/view-debug" ], function(require, exports, module) {
    var $ = require("$-debug");
    var page_control = require("pai/vwx0.0.1-beta/frame/page_control-debug");
    var view = require("pai/vwx0.0.1-beta/common/view-debug");
    var utility = require("pai/vwx0.0.1-beta/common/utility-debug");
    var Dialog = require("pai/vwx0.0.1-beta/ui/dialog/index-debug");
    var tip = require("pai/vwx0.0.1-beta/ui/m_alert/view-debug");
    var Scroll = require("pai/vwx0.0.1-beta/common/scroll-debug");
    var abnormal = require("pai/vwx0.0.1-beta/widget/abnormal/view-debug");
    var mainTpl = require("pai/vwx0.0.1-beta/act/security/tpl/main-debug.handlebars");
    var itemTpl = require("pai/vwx0.0.1-beta/act/security/tpl/item-debug.handlebars");
    var qr_tpl = require("pai/vwx0.0.1-beta/act/security/tpl/big_qr_code-debug.handlebars");
    var action_security_view = view.extend({
        attrs: {
            template: mainTpl
        },
        events: {
            swiperight: function() {
                page_control.back();
            },
            "tap [data-role=page-back]": function(ev) {
                page_control.back();
            },
            "tap [data-role=pay]": function(ev) {
                var self = this;
                self.$phone_number.val();
            },
            "tap [data-role=password]": function(ev) {
                var self = this;
                var $cur_btn = $(ev.currentTarget);
                // 放大二维码数据整合
                var code = $cur_btn.attr("data-code");
                var qr_code = $cur_btn.attr("data-qr-code");
                var pic_w_h = Math.ceil(utility.get_view_port_width() - 90);
                //滚动外框宽高
                var out_height = pic_w_h + 35;
                // 数据结构
                var data = {
                    qr_code_arr: [ {
                        code: code,
                        qr_code: qr_code,
                        pic_w_h: pic_w_h,
                        out_height: out_height
                    } ],
                    pic_w_h: pic_w_h,
                    out_height: out_height
                };
                var html_str = qr_tpl(data);
                // 放大二维码弹出层
                var dialog = new Dialog({
                    content: html_str
                }).show();
                //超过一个二维码才有滚动
                if (data.qr_code_arr.length > 1) {
                    var pic_view_scroll_obj = Scroll(dialog.$("[data-role=qr]"), {
                        lazyLoad: true
                    });
                    pic_view_scroll_obj.refresh();
                }
            }
        },
        /**
         * 事件安装
         * @private
         */
        _setup_events: function() {
            var self = this;
            //            self.listenTo(self.collection, 'all', function() {
            //                // debug 用
            //            });
            self.listenTo(self.collection, "reset", self._reset).listenTo(self.collection, "add", self._addOne).listenTo(self.collection, "before:fetch", function() {
                tip.show("查询中...", "loading", {
                    delay: -1
                });
            }).listenTo(self.collection, "success:fetch", function(response, xhrOptions) {
                self._renderItem(response, xhrOptions);
                if (response.result_data.length == 0 && !self.abnormal_view) {
                    self.abnormal_view = new abnormal({
                        templateModel: {
                            content_height: utility.get_view_port_height("nav") - 20
                        },
                        parentNode: self.$container
                    }).render();
                }
                tip.hide();
            }).listenTo(self.collection, "error:fetch", function(xhr, status) {
                /*tip.show('查询失败请返回重试', 'error', {
                        delay: 800
                    });*/
                tip.show("网络异常", "error");
            }).listenTo(self.collection, "complete:fetch", function(xhr, status) {});
            // 数据刷新
            self.refresh();
            // 视图更新
            self.on("updateList", function(response, xhrOptions) {
                // 后加载才有此项，新发留言为nul
                /*if (!!response) {
                    if (!response.data.hasMore) {
                        self._hideLoadMorBar();
                    }
                }*/
                // 第一次载入时iScroll未生成
                if (!self.view_scroll_obj) {
                    self._setup_scroll();
                    self._drop_reset();
                }
                self._drop_reset();
                self.view_scroll_obj.refresh();
            });
        },
        _renderItem: function(response, xhrOptions) {
            var self = this;
            /*if (xhrOptions.reset === true) {
                method = 'html';
                if(!response.data.list[0]){
                    self.$loadMoreBar.addClass('fn-hide');
                    self.$commentList.removeClass('comment-stream').addClass('stream-empty').html('<p>暂无评论</p>');
                    return;
                }
            }*/
            var renderQueue = self._renderQueue;
            console.log(renderQueue);
            var htmlStr = itemTpl({
                securitys: renderQueue
            });
            self.$security_list.html(htmlStr);
            self.trigger("updateList", response, xhrOptions);
            self._renderQueue = [];
            self.view_scroll_obj.refresh();
        },
        _reset: function() {
            var self = this;
            self.collection.each(self._addOne, self);
        },
        _addOne: function(dataModel) {
            var self = this;
            self._renderQueue.push(dataModel.toJSON());
            return self;
        },
        /**
         * 安装滚动条
         * @private
         */
        _setup_scroll: function() {
            var self = this;
            var view_scroll_obj = Scroll(self.$container, {
                lazyLoad: true,
                is_hide_dropdown: false
            });
            self.view_scroll_obj = view_scroll_obj;
            self.view_scroll_obj.on("dropload", function(e) {
                self.refresh();
            });
        },
        _drop_reset: function() {
            var self = this;
            self.view_scroll_obj && self.view_scroll_obj.resetload();
        },
        setup: function() {
            var self = this;
            self._renderQueue = [];
            self.$container = self.$("[data-role=container]");
            // 滚动容器
            self.$security_list = self.$("[data-role=action-security-list]");
            self.$password = self.$("[data-role=password]");
            // 安装事件
            self._setup_events();
        },
        refresh: function() {
            var self = this;
            self.collection.get_securitys();
        }
    });
    module.exports = action_security_view;
});

define("pai/vwx0.0.1-beta/act/security/tpl/main-debug.handlebars", [ "utility/handlebars/1.3.0/runtime-debug" ], function(require, exports, module) {
    var Handlebars = require("utility/handlebars/1.3.0/runtime-debug");
    var template = Handlebars.template;
    module.exports = template(function(Handlebars, depth0, helpers, partials, data) {
        this.compilerInfo = [ 4, ">= 1.0.0" ];
        helpers = helpers || {};
        for (var key in Handlebars.helpers) {
            helpers[key] = helpers[key] || Handlebars.helpers[key];
        }
        data = data || {};
        return '<main role="main" class="action-security wryh">\r\n<!--     <header class="page-header wryh">\r\n        <div class="page-back" data-role="page-back"><i class="icon icon-back-40x40"></i></div>\r\n        二维码签到券\r\n    </header> -->\r\n\r\n    <header class="nav-header mine-nav-header">\r\n        <div class="left-button-wrap" data-role="page-back">\r\n            <a><i class="icon icon-back"></i></a>\r\n        </div>\r\n\r\n        <h3 class="title">二维码签到券</h3>\r\n        \r\n        <div class="right-button-wrap">\r\n            <a><i class="icon icon-cog"></i></a>\r\n        </div>\r\n    </header>\r\n\r\n\r\n\r\n    <div data-role="container" class="content-body secondary">\r\n        <div class="action-security-content">\r\n            <section class="action-security-list">\r\n                <ul data-role="action-security-list">\r\n                </ul>\r\n            </section>\r\n        </div>\r\n    </div>\r\n</main>';
    });
});

define("pai/vwx0.0.1-beta/act/security/tpl/item-debug.handlebars", [ "utility/handlebars/1.3.0/runtime-debug" ], function(require, exports, module) {
    var Handlebars = require("utility/handlebars/1.3.0/runtime-debug");
    var template = Handlebars.template;
    module.exports = template(function(Handlebars, depth0, helpers, partials, data) {
        this.compilerInfo = [ 4, ">= 1.0.0" ];
        helpers = helpers || {};
        for (var key in Handlebars.helpers) {
            helpers[key] = helpers[key] || Handlebars.helpers[key];
        }
        data = data || {};
        var buffer = "", stack1, functionType = "function", escapeExpression = this.escapeExpression, self = this;
        function program1(depth0, data) {
            var buffer = "", stack1, helper;
            buffer += '\r\n    <li>\r\n        <div class="item">\r\n            <div class="title">\r\n                <div class="icon icon-';
            if (helper = helpers.icon) {
                stack1 = helper.call(depth0, {
                    hash: {},
                    data: data
                });
            } else {
                helper = depth0 && depth0.icon;
                stack1 = typeof helper === functionType ? helper.call(depth0, {
                    hash: {},
                    data: data
                }) : helper;
            }
            buffer += escapeExpression(stack1) + '"></div>\r\n                <div class="text">\r\n                    <h2>';
            if (helper = helpers.title) {
                stack1 = helper.call(depth0, {
                    hash: {},
                    data: data
                });
            } else {
                helper = depth0 && depth0.title;
                stack1 = typeof helper === functionType ? helper.call(depth0, {
                    hash: {},
                    data: data
                }) : helper;
            }
            buffer += escapeExpression(stack1) + "</h2>\r\n                    <h2>活动时间：";
            if (helper = helpers.time) {
                stack1 = helper.call(depth0, {
                    hash: {},
                    data: data
                });
            } else {
                helper = depth0 && depth0.time;
                stack1 = typeof helper === functionType ? helper.call(depth0, {
                    hash: {},
                    data: data
                }) : helper;
            }
            buffer += escapeExpression(stack1) + '</h2>\r\n                </div>\r\n            </div>\r\n            <i class="icon next fn-hide"></i>\r\n        </div>\r\n        <div class="password" >\r\n            ';
            stack1 = helpers.each.call(depth0, depth0 && depth0.ticket, {
                hash: {},
                inverse: self.noop,
                fn: self.program(2, program2, data),
                data: data
            });
            if (stack1 || stack1 === 0) {
                buffer += stack1;
            }
            buffer += "\r\n        </div>\r\n    </li>\r\n";
            return buffer;
        }
        function program2(depth0, data) {
            var buffer = "", stack1, helper;
            buffer += '\r\n                <div class="number">密码：<em>';
            if (helper = helpers.code) {
                stack1 = helper.call(depth0, {
                    hash: {},
                    data: data
                });
            } else {
                helper = depth0 && depth0.code;
                stack1 = typeof helper === functionType ? helper.call(depth0, {
                    hash: {},
                    data: data
                }) : helper;
            }
            buffer += escapeExpression(stack1) + '</em></div>\r\n                <div class="picture" data-role="password" data-code="';
            if (helper = helpers.code) {
                stack1 = helper.call(depth0, {
                    hash: {},
                    data: data
                });
            } else {
                helper = depth0 && depth0.code;
                stack1 = typeof helper === functionType ? helper.call(depth0, {
                    hash: {},
                    data: data
                }) : helper;
            }
            buffer += escapeExpression(stack1) + '" data-qr-code="' + escapeExpression((stack1 = depth0 && depth0.qr_code, 
            typeof stack1 === functionType ? stack1.apply(depth0) : stack1)) + '"><i data-lazyload="' + escapeExpression((stack1 = depth0 && depth0.qr_code, 
            typeof stack1 === functionType ? stack1.apply(depth0) : stack1)) + '" ></i></div>\r\n            ';
            return buffer;
        }
        stack1 = helpers.each.call(depth0, depth0 && depth0.securitys, {
            hash: {},
            inverse: self.noop,
            fn: self.program(1, program1, data),
            data: data
        });
        if (stack1 || stack1 === 0) {
            buffer += stack1;
        }
        buffer += "\r\n";
        return buffer;
    });
});

/**
 *
 */
define("pai/vwx0.0.1-beta/act/security/collection-debug", [ "pai/vwx0.0.1-beta/common/global_config-debug", "pai/vwx0.0.1-beta/common/collection-debug", "$-debug", "utility/backbone/1.1.2/backbone-debug" ], function(require, exports, module) {
    var global_config = require("pai/vwx0.0.1-beta/common/global_config-debug");
    var collection = require("pai/vwx0.0.1-beta/common/collection-debug");
    module.exports = collection.extend({
        url: global_config.ajax_url.get_act_ticket,
        initialize: function(options) {
            var self = this;
            self._setup_events();
        },
        parse: function(response) {
            if (response.result_data) {
                if (response.result_data.list) {
                    return response.result_data.list;
                }
                return response.result_data;
            }
        },
        _setup_events: function() {
            var self = this;
        },
        get_securitys: function(page) {
            var self = this;
            self.fetch({
                remove: page === 1,
                reset: page === 1,
                //data: paramData,
                cache: false,
                beforeSend: function(xhr, xhrOptions) {
                    self.trigger("before:fetch", xhr, xhrOptions);
                },
                complete: function(xhr, status) {
                    self.trigger("complete:fetch", xhr, status);
                },
                success: function(collection, response, options) {
                    self.trigger("success:fetch", response, options);
                },
                error: function(collection, response, options) {
                    self.trigger("error:fetch", response, options);
                }
            });
            return self;
        }
    });
});

/**
 * 登录
 * hudw 2014.9.3
 * @param  {[type]} require
 * @param  {[type]} exports
 * @param  {[type]} module
 * @return {[type]}
 */
define("pai/vwx0.0.1-beta/account/login/index-debug", [ "$-debug", "pai/vwx0.0.1-beta/frame/page_control-debug", "utility/backbone/1.1.2/backbone-debug", "pai/vwx0.0.1-beta/frame/ua-debug", "pai/vwx0.0.1-beta/frame/page-debug", "utility/zepto/modules/data/1.1.4/data-debug", "utility/hammer/plugins/jquery.hammer/1.1.3/jquery.hammer-debug", "utility/underscore/1.6.0/underscore-debug", "pai/vwx0.0.1-beta/common/utility-debug", "pai/vwx0.0.1-beta/common/cross_domain_storage-debug", "matcha/cookie/1.0.0/cookie-debug", "pai/vwx0.0.1-beta/account/login/view-debug", "pai/vwx0.0.1-beta/common/view-debug", "utility/handlebars/1.3.0/runtime-debug", "pai/vwx0.0.1-beta/common/scroll-debug", "utility/iscroll/4.2.5/iscroll-debug", "pai/vwx0.0.1-beta/common/img-ready-debug", "pai/vwx0.0.1-beta/common/global_config-debug", "pai/vwx0.0.1-beta/ui/m_alert/view-debug", "pai/vwx0.0.1-beta/ui/m_select/view-debug", "pai/vwx0.0.1-beta/common/new_iscroll-debug", "pai/vwx0.0.1-beta/base/ua-debug", "pai/vwx0.0.1-beta/common/I_APP-debug", "pai/vwx0.0.1-beta/common/system-debug", "pai/vwx0.0.1-beta/common/I_WX-debug", "pai/vwx0.0.1-beta/mine/model-debug" ], function(require, exports, module) {
    var $ = require("$-debug");
    var page_control = require("pai/vwx0.0.1-beta/frame/page_control-debug");
    var ua = require("pai/vwx0.0.1-beta/frame/ua-debug");
    var utility = require("pai/vwx0.0.1-beta/common/utility-debug");
    var login_view = require("pai/vwx0.0.1-beta/account/login/view-debug");
    var mine = require("pai/vwx0.0.1-beta/mine/model-debug");
    //var guide = require('../../ui/guide/view');
    //var first_guide_tpl = require('../../ui/guide/tpl/guide_model.handlebars');
    var global_config = require("pai/vwx0.0.1-beta/common/global_config-debug");
    var WeixinApi = require("pai/vwx0.0.1-beta/common/I_WX-debug");
    var m_alert = require("pai/vwx0.0.1-beta/ui/m_alert/view-debug");
    page_control.add_page([ function() {
        return {
            title: "登录",
            route: {
                "account/login(/:type)": "account/login"
            },
            transition_type: "slide",
            dom_not_cache: true,
            ignore_exist: true,
            page_init: function(page_view, route_params_arr, route_params_obj) {
                var self = this;
                self.on("success:login:fetch", function(response) {
                    window.location.href = response.result_data.auth_url;
                }).on("error:login:fetch", function() {
                    m_alert.show("请求失败，请重试", "error");
                });
                if (WeixinApi.isWexXin() && !utility.wei_xin.is_authority()) {
                    m_alert.show("请求授权中", "loading");
                    var url = utility.wei_xin.url_head + $(self.el).attr("data-page-url");
                    var url2 = utility.wei_xin.url_head + $(self.el.nextSibling).attr("data-page-url");
                    if (/login/.test(url2) || /reg/.test(url2)) {
                        url2 = utility.wei_xin.url_head + "mine";
                    }
                    console.log("url:" + url);
                    console.log("url2:" + url2);
                    utility.ajax_request({
                        url: global_config.ajax_url.auth_act,
                        type: "POST",
                        data: {
                            url: url,
                            url2: url2,
                            op: "snsapi_base"
                        },
                        cache: false,
                        beforeSend: function(xhr, options) {
                            self.trigger("before:login:fetch", xhr, options);
                        },
                        success: function(response, options) {
                            self.trigger("success:login:fetch", response, options);
                        },
                        error: function(xhr, options) {
                            self.trigger("error:login:fetch", xhr, options);
                        },
                        complete: function(xhr, status) {
                            self.trigger("complete:login:fetch", xhr, status);
                        }
                    });
                    return;
                }
                var type_params = route_params_arr[0];
                var mine_obj = new mine();
                // ios系统增加 手机号码输入
                var is_iphone = ua.isIDevice ? 1 : 0;
                var login_view_obj = new login_view({
                    templateModel: {
                        is_iphone: is_iphone
                    },
                    model: mine_obj,
                    parentNode: self.$el,
                    type_params: type_params
                }).render();
            },
            page_before_show: function() {
                var self = this;
            },
            page_show: function() {},
            page_before_hide: function() {}
        };
    } ]);
});

/**
 * 登录 视图
 * hudw 2014.9.3
 */
define("pai/vwx0.0.1-beta/account/login/view-debug", [ "$-debug", "pai/vwx0.0.1-beta/frame/page_control-debug", "utility/backbone/1.1.2/backbone-debug", "pai/vwx0.0.1-beta/frame/ua-debug", "pai/vwx0.0.1-beta/frame/page-debug", "utility/zepto/modules/data/1.1.4/data-debug", "utility/hammer/plugins/jquery.hammer/1.1.3/jquery.hammer-debug", "utility/underscore/1.6.0/underscore-debug", "pai/vwx0.0.1-beta/common/view-debug", "utility/handlebars/1.3.0/runtime-debug", "pai/vwx0.0.1-beta/common/utility-debug", "pai/vwx0.0.1-beta/common/cross_domain_storage-debug", "matcha/cookie/1.0.0/cookie-debug", "pai/vwx0.0.1-beta/common/scroll-debug", "utility/iscroll/4.2.5/iscroll-debug", "pai/vwx0.0.1-beta/common/img-ready-debug", "pai/vwx0.0.1-beta/common/global_config-debug", "pai/vwx0.0.1-beta/ui/m_alert/view-debug", "pai/vwx0.0.1-beta/ui/m_select/view-debug", "pai/vwx0.0.1-beta/common/new_iscroll-debug", "pai/vwx0.0.1-beta/base/ua-debug", "pai/vwx0.0.1-beta/common/I_APP-debug", "pai/vwx0.0.1-beta/common/system-debug", "pai/vwx0.0.1-beta/common/I_WX-debug" ], function(require, exports, module) {
    var $ = require("$-debug");
    var page_control = require("pai/vwx0.0.1-beta/frame/page_control-debug");
    var View = require("pai/vwx0.0.1-beta/common/view-debug");
    var tpl = require("pai/vwx0.0.1-beta/account/login/tpl/main-debug.handlebars");
    var utility = require("pai/vwx0.0.1-beta/common/utility-debug");
    var Scroll = require("pai/vwx0.0.1-beta/common/scroll-debug");
    var global_config = require("pai/vwx0.0.1-beta/common/global_config-debug");
    var m_alert = require("pai/vwx0.0.1-beta/ui/m_alert/view-debug");
    var m_select = require("pai/vwx0.0.1-beta/ui/m_select/view-debug");
    var App = require("pai/vwx0.0.1-beta/common/I_APP-debug");
    var system = require("pai/vwx0.0.1-beta/common/system-debug");
    var WeixinApi = require("pai/vwx0.0.1-beta/common/I_WX-debug");
    var mine_view = View.extend({
        attrs: {
            template: tpl
        },
        events: {
            "tap [data-role=page-back]": function(ev) {
                page_control.back();
            },
            /**
             * 提交登录
             */
            'tap [data-role="submit-btn"]': function() {
                var self = this;
                var user_name = self.$user_name.val();
                var user_pwd = self.$user_pwd.val();
                // 这里要加验证提示
                self.login(user_name, user_pwd, window._role, window._role ? true : false);
            },
            'tap [data-role="phone"]': function() {
                page_control.navigate_to_page("account/register/login_phone");
            },
            'tap [data-role="nav-to-agreement-login"]': function() {
                var self = this;
                return;
                page_control.navigate_to_page("account/agreement_login");
            },
            'tap [data-role="sso-login"]': function(ev) {
                var platform = $(ev.currentTarget).attr("data-platform");
                if (App.isPaiApp) {
                    App.sso_login({
                        platform: platform
                    }, function(data) {
                        if (data.message) {
                            m_alert.show(data.message, "right", {
                                delay: 1e3
                            });
                        } else {
                            m_alert.show("发送成功,正在登录...", "loading");
                        }
                        if (data.code == "0000") {
                            // 成功
                            system.sso_login({
                                data: {
                                    platform: platform,
                                    uid: data.uid,
                                    token: data.token
                                },
                                success: function(options) {
                                    m_alert.hide();
                                    m_alert.show(options.data.msg, "right", {
                                        delay: 1e3
                                    });
                                },
                                error: function() {
                                    m_alert.hide();
                                }
                            });
                        }
                    });
                }
            },
            'tap [data-role="reg"]': function() {
                var self = this;
                page_control.navigate_to_page("account/register/reg");
            },
            'tap [data-role="forget-pwd"]': function() {
                page_control.navigate_to_page("account/setup/bind/enter_pw/form_setup");
            }
        },
        /**
         * 安装事件
         * @private
         */
        _setup_events: function() {
            var self = this;
            self.on("before:login:fetch", function(response, xhr) {
                m_alert.show("登录中...", "loading");
            }).on("success:login:fetch", function(response, xhr) {
                m_alert.show(response.result_data.msg, "right", {
                    delay: 1e3
                });
                //授权
                if (WeixinApi.isWexXin() && response.result_data.result == 501) {
                    window.location.href = response.result_data.auth_url;
                    return;
                }
                //是模特就跳转到提示页
                if (WeixinApi.isWexXin() && response.result_data.result == 502) {
                    page_control.navigate_to_page("account/login_tips");
                    return;
                }
                // 有角色时
                if (response.result_data.result == 200) {
                    utility.user.update_user(response.result_data.user_info);
                    utility.login_id = response.result_data.user_id;
                    var icon = utility.user.get("user_icon");
                    var params = {
                        pocoid: utility.login_id,
                        username: utility.user.get("nickname"),
                        icon: icon
                    };
                    if (App.isPaiApp) {
                        App.login(params);
                        // 保存设备信息
                        App.save_device();
                    }
                    if (utility.int(self.get("type_params")) == 1) {
                        // 1 代表不可返回
                        page_control.navigate_to_page(global_config.default_index_route);
                    } else if (/user_id_/.test(self.get("type_params"))) {
                        //代表自动登录，带id过来
                        page_control.navigate_to_page("mine");
                    } else {
                        page_control.back();
                    }
                }
            }).on("complete:login:fetch", function(response, xhr) {}).on("error:login:fetch", function(response, xhr) {
                //m_alert.hide();
                m_alert.show("网络异常", "error", {
                    delay: 1e3
                });
            });
        },
        /**
         * 安装滚动条
         * @private
         */
        _setup_scroll: function() {
            var self = this;
            var view_scroll_obj = Scroll(self.$container);
            self.view_scroll_obj = view_scroll_obj;
        },
        login: function(account, password, role, is_new_user) {
            var self = this;
            utility.ajax_request({
                url: global_config.ajax_url.login,
                type: "POST",
                data: {
                    account: account,
                    password: password,
                    role: role || "",
                    is_new_user: is_new_user || ""
                },
                cache: true,
                beforeSend: function(xhr, options) {
                    self.trigger("before:login:fetch", xhr, options);
                },
                success: function(response, options) {
                    self.trigger("success:login:fetch", response, options);
                },
                error: function(xhr, options) {
                    self.trigger("error:login:fetch", xhr, options);
                },
                complete: function(xhr, status) {
                    self.trigger("complete:login:fetch", xhr, status);
                }
            });
        },
        /**
         * 视图初始化入口
         */
        setup: function() {
            var self = this;
            // 配置交互对象
            self.$container = self.$("[data-role=container]");
            // 滚动容器
            self.$user_name = self.$('[data-role="account-name"]');
            self.$user_pwd = self.$('[data-role="account-pwd"]');
            // 安装事件
            self._setup_events();
            var location = window.location;
            if (/has_reg_user_id_/.test(self.get("type_params"))) {
                //代表从注册页面过来登录，并且是已经注册过的账号，带id过来
                self.url_user_id = self.get("type_params").replace(/has_reg_user_id_/, "");
                self.$user_name.val(self.url_user_id);
            } else if (/model_card/.test(self.get("type_params"))) {
                //代表从模特卡页面登录过来
                self.redirect_url = location.origin + "/m/" + window._page_mode + "#find";
            }
        },
        render: function() {
            var self = this;
            // 调用渲染函数
            View.prototype.render.apply(self);
            self.trigger("render");
            return self;
        }
    });
    module.exports = mine_view;
});

define("pai/vwx0.0.1-beta/account/login/tpl/main-debug.handlebars", [ "utility/handlebars/1.3.0/runtime-debug" ], function(require, exports, module) {
    var Handlebars = require("utility/handlebars/1.3.0/runtime-debug");
    var template = Handlebars.template;
    module.exports = template(function(Handlebars, depth0, helpers, partials, data) {
        this.compilerInfo = [ 4, ">= 1.0.0" ];
        helpers = helpers || {};
        for (var key in Handlebars.helpers) {
            helpers[key] = helpers[key] || Handlebars.helpers[key];
        }
        data = data || {};
        var buffer = "", stack1, self = this;
        function program1(depth0, data) {
            var buffer = "";
            return buffer;
        }
        function program3(depth0, data) {
            return 'type="text"';
        }
        buffer += '<main role="main" class="account wryh">\r\n    <!-- <header class="page-header login-header-nav wryh">\r\n        <div class="page-back" data-role="page-back"><i class="icon icon-back-40x40"></i></div>\r\n        登录\r\n    </header> -->\r\n\r\n    <header class="nav-header mine-nav-header">\r\n        <div class="left-button-wrap" data-role="page-back">\r\n            <a><i class="icon icon-back"></i></a>\r\n        </div>\r\n\r\n        <h3 class="title">登录</h3>\r\n        \r\n        <div class="right-button-wrap">\r\n            <a><i class="icon icon-cog"></i></a>\r\n        </div>\r\n    </header>\r\n\r\n\r\n\r\n    <div class="content-body account-login-page" data-role="container">\r\n        <div class="account-container" data-role="container">\r\n            <!-- <ul class="ui-form">\r\n                <li><div class="input-label"><input  type="text" placeholder="手机号" data-role="account-name"></div></li>\r\n                <li><div class="input-label"><input  type="password" placeholder="密码" data-role="account-pwd"></div></li>\r\n            </ul> -->\r\n\r\n            <div class="ui-input-mod mb10" >\r\n                <div class="item">\r\n                    <input type="tel" class="ui-input  ui-input-size-large ui-input-block ui-input-border-bottom-none ui-input-top-left ui-input-top-right" placeholder="手机号" data-role="account-name">\r\n                    <!--';
        stack1 = helpers["if"].call(depth0, depth0 && depth0.is_iphone, {
            hash: {},
            inverse: self.program(3, program3, data),
            fn: self.program(1, program1, data),
            data: data
        });
        if (stack1 || stack1 === 0) {
            buffer += stack1;
        }
        buffer += '-->\r\n                </div>\r\n                <div class="item"><input type="password" class="ui-input  ui-input-size-large ui-input-block ui-input-bottom-left ui-input-bottom-right" placeholder="密码" data-role="account-pwd"></div>\r\n            </div>\r\n\r\n\r\n\r\n            <div class="submit-btn-container">\r\n                <button data-role="submit-btn" class="ui-button ui-button-primary ui-button-size-large ui-button-block">\r\n                    <span class="ui-button-content">登录</span>\r\n                </button>\r\n            </div>\r\n\r\n            <div class="other-login  fn-hide" >\r\n                <!-- <button class="ui-button ui-button-primary ui-button-size-large ui-button-block sinaweibo-login-button" data-role="sso-login" data-platform="sina">\r\n                    <span class="ui-button-content icon-sinaweibo-logo"><i class="icon icon-sina-c"></i> 新浪微博</span>\r\n                </button> -->\r\n\r\n                <button class="ui-button ui-button-primary ui-button-size-large ui-button-block ui-button-color2 fn-hide"  data-role="phone" style="margin-left:0;color:#fff;">\r\n                    <span class="ui-button-content  icon-phone-logo">手机号登录</span>\r\n                </button>\r\n\r\n                <button class="ui-button ui-button-size-large qzone-login-button fn-hide" data-role="qzone">\r\n                    <span class="ui-button-content icon icon-qzone-logo"></span>\r\n                </button>\r\n            </div>\r\n\r\n\r\n            <div class="go-style">\r\n                    <div class="lbox" data-role="forget-pwd" >\r\n                        <button class="ui-button  ui-button-size-middle  ui-button-block ui-button-nocolor">\r\n                            <span class="ui-button-content">忘记密码？</span>\r\n                        </button>\r\n                    </div>\r\n                    <div class="rbox" data-role="reg">\r\n                        <button class="ui-button  ui-button-size-middle  ui-button-block ui-button-nocolor">\r\n                            <span class="ui-button-content">新用户注册</span>\r\n                        </button>\r\n                    </div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n        <div data-role="nav-to-agreement-login" style="position: absolute;bottom:10px;width: 100%;text-align: center;color:#aeaeae;font-size:12px;">\r\n            轻触上面的“登录”按钮，即表示你同意<a href="javascript:;">《用户许可协议》</a>\r\n        </div>\r\n    </div>\r\n</main>';
        return buffer;
    });
});

/**
 * Created by nolest on 2014/9/13.
 *
 *
 * 账单
 */
define("pai/vwx0.0.1-beta/mine/money/bill/index-debug", [ "$-debug", "pai/vwx0.0.1-beta/frame/page_control-debug", "utility/backbone/1.1.2/backbone-debug", "pai/vwx0.0.1-beta/frame/ua-debug", "pai/vwx0.0.1-beta/frame/page-debug", "utility/zepto/modules/data/1.1.4/data-debug", "utility/hammer/plugins/jquery.hammer/1.1.3/jquery.hammer-debug", "utility/underscore/1.6.0/underscore-debug", "pai/vwx0.0.1-beta/mine/money/bill/view-debug", "pai/vwx0.0.1-beta/common/view-debug", "utility/handlebars/1.3.0/runtime-debug", "pai/vwx0.0.1-beta/common/utility-debug", "pai/vwx0.0.1-beta/common/cross_domain_storage-debug", "matcha/cookie/1.0.0/cookie-debug", "pai/vwx0.0.1-beta/common/new_iscroll-debug", "utility/iscroll/4.2.5/iscroll-debug", "pai/vwx0.0.1-beta/common/img-ready-debug", "pai/vwx0.0.1-beta/base/ua-debug", "pai/vwx0.0.1-beta/ui/m_alert/view-debug", "pai/vwx0.0.1-beta/widget/abnormal/view-debug", "pai/vwx0.0.1-beta/mine/money/bill/model-debug", "pai/vwx0.0.1-beta/common/global_config-debug" ], function(require, exports, module) {
    var $ = require("$-debug");
    var page_control = require("pai/vwx0.0.1-beta/frame/page_control-debug");
    var bill_view = require("pai/vwx0.0.1-beta/mine/money/bill/view-debug");
    var bill_model = require("pai/vwx0.0.1-beta/mine/money/bill/model-debug");
    page_control.add_page([ function() {
        return {
            title: "账单",
            route: {
                "mine/money/bill": "mine/money/bill"
            },
            dom_not_cache: false,
            transition_type: "slide",
            initialize: function() {
                var self = this;
                var model = new bill_model();
                var bill_view_obj = new bill_view({
                    model: model,
                    parentNode: self.$el
                }).render();
            },
            page_init: function() {},
            page_before_show: function() {},
            page_show: function() {},
            page_before_hide: function() {}
        };
    } ]);
});

/**
 * Created by nolest on 2014/9/13.
 */
define("pai/vwx0.0.1-beta/mine/money/bill/view-debug", [ "$-debug", "pai/vwx0.0.1-beta/frame/page_control-debug", "utility/backbone/1.1.2/backbone-debug", "pai/vwx0.0.1-beta/frame/ua-debug", "pai/vwx0.0.1-beta/frame/page-debug", "utility/zepto/modules/data/1.1.4/data-debug", "utility/hammer/plugins/jquery.hammer/1.1.3/jquery.hammer-debug", "utility/underscore/1.6.0/underscore-debug", "pai/vwx0.0.1-beta/common/view-debug", "utility/handlebars/1.3.0/runtime-debug", "pai/vwx0.0.1-beta/common/utility-debug", "pai/vwx0.0.1-beta/common/cross_domain_storage-debug", "matcha/cookie/1.0.0/cookie-debug", "pai/vwx0.0.1-beta/common/new_iscroll-debug", "utility/iscroll/4.2.5/iscroll-debug", "pai/vwx0.0.1-beta/common/img-ready-debug", "pai/vwx0.0.1-beta/base/ua-debug", "pai/vwx0.0.1-beta/ui/m_alert/view-debug", "pai/vwx0.0.1-beta/widget/abnormal/view-debug" ], function(require, exports, module) {
    var $ = require("$-debug");
    var page_control = require("pai/vwx0.0.1-beta/frame/page_control-debug");
    var View = require("pai/vwx0.0.1-beta/common/view-debug");
    var bill = require("pai/vwx0.0.1-beta/mine/money/bill/tpl/main-debug.handlebars");
    var utility = require("pai/vwx0.0.1-beta/common/utility-debug");
    var Scroll = require("pai/vwx0.0.1-beta/common/new_iscroll-debug");
    var bill_list_tpl = require("pai/vwx0.0.1-beta/mine/money/bill/tpl/bill-list-debug.handlebars");
    var m_alert = require("pai/vwx0.0.1-beta/ui/m_alert/view-debug");
    var abnormal = require("pai/vwx0.0.1-beta/widget/abnormal/view-debug");
    var bill_view = View.extend({
        attrs: {
            template: bill
        },
        events: {
            swiperight: function() {
                page_control.back();
            },
            "tap [data-role=page-back]": function(ev) {
                page_control.back();
            },
            "tap [data-tap]": function(ev) {
                var self = this;
                var $currentTarget = $(ev.currentTarget);
                $currentTarget.addClass("cur").siblings().removeClass("cur");
                self.currentType = $currentTarget.attr("data-role");
                self.reset_or_not = 1;
                self.single_page_count = 1;
                //清空元素
                self.$('[data-role="bill-bill"]').html("");
                self.$container.find(".warp-box").css("background-color", "");
                self._send_data();
            },
            'tap [data-role="bill-withdrawals"]': function() {
                var self = this;
                //检查是否绑定支付宝
                self.model.check_bind({
                    type: "check_bind"
                });
            }
        },
        _send_data: function() {
            var self = this;
            var data = {
                type: self.currentType,
                page: self.single_page_count
            };
            self.fetching = true;
            m_alert.show("加载中...", "loading", {
                delay: 1e3
            });
            self.model.get_bills(data);
        },
        _setup_events: function() {
            var self = this;
            self.on("render", function() {
                self._setup_scroll();
                self._send_data();
            });
            self.model.on("success:fetch", function(response, options) {
                if (response.result_data.data.length != 0) {
                    self.single_page_count++;
                    self._render_data(self.model.toJSON());
                } else {
                    //m_alert.show('没有数据',{delay:1000})
                    if (self.$bill_bill.children().length == 0) {
                        self.abnormal_view = new abnormal({
                            templateModel: {
                                content_height: utility.get_view_port_height("all") - 75
                            },
                            parentNode: self.$bill_bill
                        }).render();
                        self.reset_bg_color();
                        self.view_scroll_obj.refresh();
                    }
                }
                self.fetching = false;
            }).on("complete:fetch", function(response, options) {}).on("error:fetch", function(response, options) {
                m_alert.show("加载失败", "error");
                self.fetching = false;
            });
            //检查是否绑定支付宝
            self.model.on("before:check_bind:fetch", function(response, options) {
                m_alert.show("加载中...", "loading", {
                    delay: 1e3
                });
            }).on("success:check_bind:fetch", function(response, options) {
                var data = response.result_data;
                var code = data.code;
                switch (code) {
                  case 1:
                    var data = {
                        alipay_account: data.data.third_account
                    };
                    page_control.navigate_to_page("mine/money/withdrawal/1", data);
                    break;

                  case 0:
                    page_control.navigate_to_page("mine/money/bind_alipay");
                    break;

                  case -1:
                    page_control.navigate_to_page("mine/money/bind_alipay");
                    break;

                  case 2:
                    page_control.navigate_to_page("mine/money/bind_alipay");
                    break;
                }
            }).on("error:check_bind:fetch", function() {
                m_alert.show("网络不给力,请返回重试！", "error");
            }).on("complete:check_bind:fetch", function(response, options) {});
        },
        _render_data: function(bill_data) {
            var self = this;
            //"处理中" 绿字处理
            $.each(bill_data.data, function(i, obj) {
                if (bill_data.data[i].status == "处理中") {
                    bill_data.data[i] = $.extend(true, {}, obj, {
                        status_success: true
                    });
                } else {
                    bill_data.data[i] = $.extend(true, {}, obj, {
                        status_success: false
                    });
                }
            });
            var html_str = bill_list_tpl({
                data: bill_data.data,
                page: self.single_page_count
            });
            self.$bill_bill.append(html_str);
            self.reset_bg_color();
            self.view_scroll_obj.refresh();
        },
        _setup_scroll: function() {
            var self = this;
            var view_scroll_obj = Scroll(self.$container);
            self.$container.height(self.reset_viewport_height());
            view_scroll_obj.on("scrollMoveAfter", function() {
                var _self = this;
                var scroll_y = _self.y;
                if (_self.maxScrollY - _self.y < 100 && self.model.get("has_next") && !self.fetching) {
                    self._send_data();
                }
            });
            self.view_scroll_obj = view_scroll_obj;
        },
        setup: function() {
            var self = this;
            self.$container = self.$('[data-role="container"]');
            self.$bill_bill = self.$('[data-role="bill-bill"]');
            self.currentType = "trade";
            self.reset_or_not = 0;
            self.fetching = false;
            self.single_page_count = 1;
            self._setup_events();
        },
        render: function() {
            var self = this;
            View.prototype.render.apply(self);
            self.trigger("render");
            return self;
        },
        reset_viewport_height: function() {
            return utility.get_view_port_height("nav") - 41;
        },
        reset_bg_color: function() {
            var self = this;
            setTimeout(function() {
                self.$container.find(".warp-box").css("background-color", "#fff");
            }, 300);
        }
    });
    module.exports = bill_view;
});

define("pai/vwx0.0.1-beta/mine/money/bill/tpl/main-debug.handlebars", [ "utility/handlebars/1.3.0/runtime-debug" ], function(require, exports, module) {
    var Handlebars = require("utility/handlebars/1.3.0/runtime-debug");
    var template = Handlebars.template;
    module.exports = template(function(Handlebars, depth0, helpers, partials, data) {
        this.compilerInfo = [ 4, ">= 1.0.0" ];
        helpers = helpers || {};
        for (var key in Handlebars.helpers) {
            helpers[key] = helpers[key] || Handlebars.helpers[key];
        }
        data = data || {};
        return '<main role="main" class="bill secondary">\r\n    <header class="nav-header withdrawals-header">\r\n        <div class="left-button-wrap" data-role="page-back">\r\n            <a><i class="icon icon-back"></i></a>\r\n        </div>\r\n        <h3 class="title">账单</h3>\r\n        <div class="right-button-wrap"></div>\r\n        <div class="tap fn-hide" data-role="bill-withdrawals">提现</div>\r\n    </header>\r\n\r\n    <div class="content-body">\r\n        <div class="measure-choosen">\r\n            <ul class="measure-choosen-in">\r\n                <i class="measure-choosen-child cur" data-tap data-role="trade">交易</i>\r\n                <i class="measure-choosen-child" data-tap data-role="recharge">充值</i>\r\n                <i class="measure-choosen-child" data-tap data-role="withdraw">提现</i>\r\n                <i class="measure-choosen-child" data-tap data-role="repay">退款</i>\r\n            </ul>\r\n        </div>\r\n        <div class="bill-container"  >\r\n            <div class="warp-box" data-role="container">\r\n                <div class="bill-bill" data-role="bill-bill">\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</main>';
    });
});

define("pai/vwx0.0.1-beta/mine/money/bill/tpl/bill-list-debug.handlebars", [ "utility/handlebars/1.3.0/runtime-debug" ], function(require, exports, module) {
    var Handlebars = require("utility/handlebars/1.3.0/runtime-debug");
    var template = Handlebars.template;
    module.exports = template(function(Handlebars, depth0, helpers, partials, data) {
        this.compilerInfo = [ 4, ">= 1.0.0" ];
        helpers = helpers || {};
        for (var key in Handlebars.helpers) {
            helpers[key] = helpers[key] || Handlebars.helpers[key];
        }
        data = data || {};
        var stack1, functionType = "function", escapeExpression = this.escapeExpression, self = this;
        function program1(depth0, data) {
            var buffer = "", stack1, helper;
            buffer += '\r\n<div class="child">\r\n    <div class="child-left">\r\n        <div class="subject">';
            if (helper = helpers.subject) {
                stack1 = helper.call(depth0, {
                    hash: {},
                    data: data
                });
            } else {
                helper = depth0 && depth0.subject;
                stack1 = typeof helper === functionType ? helper.call(depth0, {
                    hash: {},
                    data: data
                }) : helper;
            }
            buffer += escapeExpression(stack1) + '</div>\r\n        <div class="add_date">';
            if (helper = helpers.add_date) {
                stack1 = helper.call(depth0, {
                    hash: {},
                    data: data
                });
            } else {
                helper = depth0 && depth0.add_date;
                stack1 = typeof helper === functionType ? helper.call(depth0, {
                    hash: {},
                    data: data
                }) : helper;
            }
            buffer += escapeExpression(stack1) + '</div>\r\n    </div>\r\n    <div class="child-right">\r\n        <div class="amount">';
            stack1 = helpers["if"].call(depth0, depth0 && depth0.flow_type, {
                hash: {},
                inverse: self.program(4, program4, data),
                fn: self.program(2, program2, data),
                data: data
            });
            if (stack1 || stack1 === 0) {
                buffer += stack1;
            }
            if (helper = helpers.amount) {
                stack1 = helper.call(depth0, {
                    hash: {},
                    data: data
                });
            } else {
                helper = depth0 && depth0.amount;
                stack1 = typeof helper === functionType ? helper.call(depth0, {
                    hash: {},
                    data: data
                }) : helper;
            }
            buffer += escapeExpression(stack1) + '</div>\r\n        <div class="status ';
            stack1 = helpers["if"].call(depth0, depth0 && depth0.status_success, {
                hash: {},
                inverse: self.noop,
                fn: self.program(6, program6, data),
                data: data
            });
            if (stack1 || stack1 === 0) {
                buffer += stack1;
            }
            buffer += '">';
            if (helper = helpers.status) {
                stack1 = helper.call(depth0, {
                    hash: {},
                    data: data
                });
            } else {
                helper = depth0 && depth0.status;
                stack1 = typeof helper === functionType ? helper.call(depth0, {
                    hash: {},
                    data: data
                }) : helper;
            }
            buffer += escapeExpression(stack1) + "</div>\r\n    </div>\r\n</div>\r\n";
            return buffer;
        }
        function program2(depth0, data) {
            return "-";
        }
        function program4(depth0, data) {
            return "+";
        }
        function program6(depth0, data) {
            return "success";
        }
        stack1 = helpers.each.call(depth0, depth0 && depth0.data, {
            hash: {},
            inverse: self.noop,
            fn: self.program(1, program1, data),
            data: data
        });
        if (stack1 || stack1 === 0) {
            return stack1;
        } else {
            return "";
        }
    });
});

/**
 * Created by nolest on 2014/9/13.
 */
define("pai/vwx0.0.1-beta/mine/money/bill/model-debug", [ "pai/vwx0.0.1-beta/common/global_config-debug", "utility/backbone/1.1.2/backbone-debug" ], function(require, exports, module) {
    var global_config = require("pai/vwx0.0.1-beta/common/global_config-debug");
    var Backbone = require("utility/backbone/1.1.2/backbone-debug");
    module.exports = Backbone.Model.extend({
        url: global_config.ajax_url.bill_act,
        "default": {},
        _setup_events: function() {},
        parse: function(response) {
            if (response.result_data) {
                return response.result_data;
            }
            return response;
        },
        initialize: function() {
            var self = this;
            self._setup_events();
        },
        get_bills: function(data) {
            var self = this;
            self.fetch({
                url: self.url,
                data: data,
                cache: false,
                beforeSend: function(xhr, options) {
                    self.trigger("before:fetch", xhr, options);
                },
                success: function(collection, response, options) {
                    self.trigger("success:fetch", response, options);
                },
                error: function(collection, response, options) {
                    self.trigger("error:fetch", response, options);
                },
                complete: function(xhr, status) {
                    self.trigger("complete:fetch", xhr, status);
                }
            });
        },
        //检查是否绑定支付宝
        check_bind: function(data) {
            var self = this;
            self.fetch({
                url: global_config.ajax_url.withdraw,
                data: data,
                cache: false,
                beforeSend: function(xhr, options) {
                    self.trigger("before:check_bind:fetch", xhr, options);
                },
                success: function(model, response, options) {
                    self.trigger("success:check_bind:fetch", response, options);
                },
                error: function(model, response, options) {
                    self.trigger("error:check_bind:fetch", response, options);
                },
                complete: function(xhr, status) {
                    self.trigger("complete:check_bind:fetch", xhr, status);
                }
            });
        }
    });
});

/**
 * Created by nolest on 2014/9/13.
 */
define("pai/vwx0.0.1-beta/account/setup/bind/enter_phone/index-debug", [ "$-debug", "pai/vwx0.0.1-beta/frame/page_control-debug", "utility/backbone/1.1.2/backbone-debug", "pai/vwx0.0.1-beta/frame/ua-debug", "pai/vwx0.0.1-beta/frame/page-debug", "utility/zepto/modules/data/1.1.4/data-debug", "utility/hammer/plugins/jquery.hammer/1.1.3/jquery.hammer-debug", "utility/underscore/1.6.0/underscore-debug", "pai/vwx0.0.1-beta/account/setup/bind/enter_phone/view-debug", "pai/vwx0.0.1-beta/common/view-debug", "utility/handlebars/1.3.0/runtime-debug", "pai/vwx0.0.1-beta/common/utility-debug", "pai/vwx0.0.1-beta/common/cross_domain_storage-debug", "matcha/cookie/1.0.0/cookie-debug", "pai/vwx0.0.1-beta/common/scroll-debug", "utility/iscroll/4.2.5/iscroll-debug", "pai/vwx0.0.1-beta/common/img-ready-debug", "pai/vwx0.0.1-beta/ui/m_alert/view-debug", "pai/vwx0.0.1-beta/account/setup/bind/enter_phone/model-debug", "pai/vwx0.0.1-beta/common/global_config-debug" ], function(require, exports, module) {
    var $ = require("$-debug");
    var page_control = require("pai/vwx0.0.1-beta/frame/page_control-debug");
    var enter_phone_view = require("pai/vwx0.0.1-beta/account/setup/bind/enter_phone/view-debug");
    var enter_phone_model = require("pai/vwx0.0.1-beta/account/setup/bind/enter_phone/model-debug");
    page_control.add_page([ function() {
        return {
            title: "设置",
            route: {
                "account/setup/bind/enter_phone/:form(/:form_setup_bind)": "account/setup/bind/enter_phone"
            },
            dom_not_cache: false,
            transition_type: "slide",
            initialize: function() {},
            page_init: function(page_view, route_params_arr, route_params_obj) {
                var self = this;
                var is_form_setup;
                var is_form_login;
                var form_setup_bind = "";
                if (route_params_arr[0] == "form_setup") {
                    is_form_setup = true;
                    is_form_login = false;
                } else if (route_params_arr[0] == "form_login") {
                    is_form_setup = false;
                    is_form_login = true;
                }
                if (route_params_arr[1]) {
                    form_setup_bind = route_params_arr[1];
                }
                var data = {
                    is_form_setup: is_form_setup,
                    is_form_login: is_form_login,
                    form_setup_bind: form_setup_bind
                };
                var model = new enter_phone_model();
                var enter_phone_obj = new enter_phone_view({
                    model: model,
                    parentNode: self.$el,
                    templateModel: data
                }).render();
            },
            page_before_show: function() {},
            page_show: function() {},
            page_before_hide: function() {}
        };
    } ]);
});

/**
 * Created by nolest on 2014/9/13.
 */
define("pai/vwx0.0.1-beta/account/setup/bind/enter_phone/view-debug", [ "$-debug", "pai/vwx0.0.1-beta/frame/page_control-debug", "utility/backbone/1.1.2/backbone-debug", "pai/vwx0.0.1-beta/frame/ua-debug", "pai/vwx0.0.1-beta/frame/page-debug", "utility/zepto/modules/data/1.1.4/data-debug", "utility/hammer/plugins/jquery.hammer/1.1.3/jquery.hammer-debug", "utility/underscore/1.6.0/underscore-debug", "pai/vwx0.0.1-beta/common/view-debug", "utility/handlebars/1.3.0/runtime-debug", "pai/vwx0.0.1-beta/common/utility-debug", "pai/vwx0.0.1-beta/common/cross_domain_storage-debug", "matcha/cookie/1.0.0/cookie-debug", "pai/vwx0.0.1-beta/common/scroll-debug", "utility/iscroll/4.2.5/iscroll-debug", "pai/vwx0.0.1-beta/common/img-ready-debug", "pai/vwx0.0.1-beta/ui/m_alert/view-debug" ], function(require, exports, module) {
    var $ = require("$-debug");
    var page_control = require("pai/vwx0.0.1-beta/frame/page_control-debug");
    var View = require("pai/vwx0.0.1-beta/common/view-debug");
    var enter_phone_tpl = require("pai/vwx0.0.1-beta/account/setup/bind/enter_phone/tpl/main-debug.handlebars");
    var utility = require("pai/vwx0.0.1-beta/common/utility-debug");
    var Scroll = require("pai/vwx0.0.1-beta/common/scroll-debug");
    var m_alert = require("pai/vwx0.0.1-beta/ui/m_alert/view-debug");
    var enter_phone_view = View.extend({
        attrs: {
            template: enter_phone_tpl
        },
        events: {
            swiperight: function() {
                page_control.back();
            },
            "tap [data-role=page-back]": function(ev) {
                page_control.back();
            },
            'tap [data-role="get_code"]': function() {
                var self = this;
                if (self.enter_phone.val() == "") {
                    alert("手机号不对哦");
                    return;
                }
                if (self.from_setup_bind == "from_setup_bind") {
                    if (self.counting) {
                        return;
                    }
                    //从设置来 未绑定手机
                    self._count_down(60);
                    self.model.send_code_request({
                        phone: self.enter_phone.val(),
                        type: "bind_sent_verify_code"
                    });
                } else if (self.get("templateModel").is_form_setup) {
                    if (self.counting) {
                        return;
                    }
                    //从设置来 更改
                    self._count_down(60);
                    self.model.send_code_request({
                        phone: self.enter_phone.val(),
                        type: "change_bind_sent_verify_code"
                    });
                } else if (self.get("templateModel").is_form_login) {
                    if (self.counting) {
                        return;
                    }
                    //从注册
                    self._count_down(60);
                    self.model.send_code_request({
                        phone: self.enter_phone.val(),
                        type: "reg_sent_verify_code"
                    });
                }
            },
            'tap [data-role="btn_save"]': function() {
                //我的-保存
                var self = this;
                if (self.enter_verify_code.val() == "") {
                    alert("验证码不对咧！");
                    return;
                }
                //从设置来更换手机
                self.model.send_bind_request({
                    phone: self.enter_phone.val(),
                    verify_code: self.enter_verify_code.val(),
                    type: "change_bind_phone"
                });
            },
            'tap [data-role="btn_login"]': function() {
                //注册或我的设置来绑定手机 - 下一步
                var self = this;
                if (self.enter_verify_code.val() == "") {
                    alert("验证码不对咧！");
                    return;
                }
                self.pass_data = {
                    phone: self.enter_phone.val(),
                    verify_code: self.enter_verify_code.val()
                };
                if (self.from_setup_bind == "from_setup_bind") {
                    //从设置来绑定手机
                    self.model.send_setup_bind_phone({
                        phone: self.enter_phone.val(),
                        verify_code: self.enter_verify_code.val(),
                        type: "bind_phone"
                    });
                } else {
                    //从注册来绑定手机
                    self.model.send_login_setp_one({
                        phone: self.enter_phone.val(),
                        verify_code: self.enter_verify_code.val(),
                        type: "phone_reg_step_1"
                    });
                }
            }
        },
        _count_down: function(sec) {
            var self = this;
            self.counting = true;
            self.count_down.html(sec);
            self.count_Interval = setInterval(function() {
                sec--;
                if (sec == 0) {
                    self.count_down.html("重新获取");
                    self._stop_count_down();
                    self.counting = false;
                } else {
                    self.count_down.html(sec);
                }
            }, 1e3);
        },
        _stop_count_down: function() {
            var self = this;
            clearInterval(self.count_Interval);
        },
        _setup_events: function() {
            var self = this;
            self.on("render", function() {
                self._setup_scroll();
            });
            self.model.on("success:fetch_code", function(response, options) {
                m_alert.show(response.result_data.msg);
            }).on("success:fetch_bind", function(response, options) {
                if (response.result_data) {
                    m_alert.show(response.result_data.msg);
                    if (response.result_data.code != 0) {
                        page_control.navigate_to_page("mine");
                    }
                }
            }).on("success:fetch_send_login_setp", function(response, options) {
                if (response.result_data) {
                    m_alert.show(response.result_data.msg);
                    if (response.result_data.code != 0) {
                        page_control.navigate_to_page("account/setup/bind/enter_pw/form_login", self.pass_data);
                    }
                }
            }).on("success:send_setup_bind_phone", function(response, options) {
                if (response.result_data) {
                    m_alert.show(response.result_data.msg);
                    if (response.result_data.code != 0) {
                        page_control.navigate_to_page("mine");
                    }
                }
            }).on("complete:fetch_bind", function() {
                m_alert.hide();
            }).on("complete:fetch_send_login_setp", function() {
                m_alert.hide();
            }).on("complete:send_setup_bind_phone", function() {
                m_alert.hide();
            });
        },
        _setup_scroll: function() {
            var self = this;
            var view_scroll_obj = Scroll(self.$container, {
                is_hide_dropdown: true
            });
            self.view_scroll_obj = view_scroll_obj;
        },
        setup: function() {
            var self = this;
            self.$container = self.$('[data-role="container"]');
            self.count_down = self.$('[data-role="get_code"]');
            self.enter_phone = self.$('[data-role="enter_phone"]');
            self.enter_verify_code = self.$('[data-role="verify_code"]');
            self.from_setup_bind = self.get("templateModel").from_setup_bind;
            self.counting = false;
            self._setup_events();
        },
        render: function() {
            var self = this;
            View.prototype.render.apply(self);
            self.trigger("render");
            return self;
        }
    });
    module.exports = enter_phone_view;
});

define("pai/vwx0.0.1-beta/account/setup/bind/enter_phone/tpl/main-debug.handlebars", [ "utility/handlebars/1.3.0/runtime-debug" ], function(require, exports, module) {
    var Handlebars = require("utility/handlebars/1.3.0/runtime-debug");
    var template = Handlebars.template;
    module.exports = template(function(Handlebars, depth0, helpers, partials, data) {
        this.compilerInfo = [ 4, ">= 1.0.0" ];
        helpers = helpers || {};
        for (var key in Handlebars.helpers) {
            helpers[key] = helpers[key] || Handlebars.helpers[key];
        }
        data = data || {};
        var buffer = "", stack1, self = this;
        function program1(depth0, data) {
            return '\r\n    <div class="change-phone-verification" data-role="change-phone-container">\r\n        <ul class="list">\r\n            <li>\r\n                <span class="btn-get" data-role="get_code">获取验证码</span>\r\n                <input type="text" name=" " id=" " class="input-text"  value="" data-role="enter_phone">\r\n            </li>\r\n            <li>\r\n                <input type="text" name=" " id=" " class="input-text"  placeholder="验证码" data-role="verify_code">\r\n            </li>\r\n        </ul>\r\n        <div class="btn" data-role="btn_save">保存设置</div>\r\n        <p class="p1">您将收到一条验证短信，绑定成功后，您可以使用手机号登录。我们不会泄露您的隐私。</p>\r\n    </div>\r\n        ';
        }
        function program3(depth0, data) {
            return '\r\n    <div class="verification-mobile" data-role="verification-mobile-container">\r\n        <ul class="list">\r\n            <li>\r\n                <span class="btn-get" data-role="get_code">获取验证码</span>\r\n                <input type="text" name=" " id=" " class="input-text"  placeholder="请输入手机号码" data-role="enter_phone">\r\n            </li>\r\n            <li>\r\n                <input type="text" name=" " id=" " class="input-text"  placeholder="验证码" data-role="verify_code">\r\n            </li>\r\n        </ul>\r\n        <div class="btn" data-role="btn_login">下一步</div>\r\n        <p class="p1">您将收到一条验证短信，绑定成功后，您可以使用手机号登录。我们不会泄露您的隐私。</p>\r\n    </div>\r\n        ';
        }
        buffer += '<main role="main">\r\n    <header class="nav-header mine-setting-nav-header">\r\n        <div class="left-button-wrap" data-role="page-back">\r\n            <a><i class="icon icon-back"></i></a>\r\n        </div>\r\n\r\n        <h3 class="title">验证手机号</h3>\r\n\r\n        <div class="right-button-wrap">\r\n        </div>\r\n    </header>\r\n<div class="phone_and_pw_change_container" data-role="container">\r\n    <div class="warp-box">\r\n        ';
        stack1 = helpers["if"].call(depth0, depth0 && depth0.is_form_setup, {
            hash: {},
            inverse: self.program(3, program3, data),
            fn: self.program(1, program1, data),
            data: data
        });
        if (stack1 || stack1 === 0) {
            buffer += stack1;
        }
        buffer += "\r\n    </div>\r\n</div>\r\n</main>";
        return buffer;
    });
});

/**
 * Created by nolest on 2014/9/13.
 */
define("pai/vwx0.0.1-beta/account/setup/bind/enter_phone/model-debug", [ "pai/vwx0.0.1-beta/common/global_config-debug", "utility/backbone/1.1.2/backbone-debug" ], function(require, exports, module) {
    var global_config = require("pai/vwx0.0.1-beta/common/global_config-debug");
    var Backbone = require("utility/backbone/1.1.2/backbone-debug");
    module.exports = Backbone.Model.extend({
        url: global_config.ajax_url.bind_act,
        "default": {},
        _setup_events: function() {},
        parse: function(response) {
            if (response.result_data) {
                return response.result_data;
            }
            return response;
        },
        initialize: function() {
            var self = this;
            self._setup_events();
        },
        send_code_request: function(data) {
            var self = this;
            self.fetch({
                url: self.url,
                data: data,
                cache: false,
                beforeSend: function(xhr, options) {
                    self.trigger("before:fetch_code", xhr, options);
                },
                success: function(collection, response, options) {
                    self.trigger("success:fetch_code", response, options);
                },
                error: function(collection, response, options) {
                    self.trigger("error:fetch_code", response, options);
                },
                complete: function(xhr, status) {
                    self.trigger("complete:fetch_code", xhr, status);
                }
            });
        },
        send_bind_request: function(data) {
            var self = this;
            self.fetch({
                url: self.url,
                data: data,
                cache: false,
                beforeSend: function(xhr, options) {
                    self.trigger("before:fetch_bind", xhr, options);
                },
                success: function(collection, response, options) {
                    self.trigger("success:fetch_bind", response, options);
                },
                error: function(collection, response, options) {
                    self.trigger("error:fetch_bind", response, options);
                },
                complete: function(xhr, status) {
                    self.trigger("complete:fetch_bind", xhr, status);
                }
            });
        },
        send_login_setp_one: function(data) {
            var self = this;
            self.fetch({
                url: self.url,
                data: data,
                cache: false,
                beforeSend: function(xhr, options) {
                    self.trigger("before:fetch_send_login_setp", xhr, options);
                },
                success: function(collection, response, options) {
                    self.trigger("success:fetch_send_login_setp", response, options);
                },
                error: function(collection, response, options) {
                    self.trigger("error:fetch_send_login_setp", response, options);
                },
                complete: function(xhr, status) {
                    self.trigger("complete:fetch_send_login_setp", xhr, status);
                }
            });
        },
        send_setup_bind_phone: function(data) {
            //个人中心的设置中绑定手机、不需要提交密码
            var self = this;
            self.fetch({
                url: self.url,
                data: data,
                cache: false,
                beforeSend: function(xhr, options) {
                    self.trigger("before:send_setup_bind_phone", xhr, options);
                },
                success: function(collection, response, options) {
                    self.trigger("success:send_setup_bind_phone", response, options);
                },
                error: function(collection, response, options) {
                    self.trigger("error:send_setup_bind_phone", response, options);
                },
                complete: function(xhr, status) {
                    self.trigger("complete:send_setup_bind_phone", xhr, status);
                }
            });
        }
    });
});

/**
 * Created by nolest on 2014/9/13.
 */
define("pai/vwx0.0.1-beta/account/setup/bind/enter_pw/index-debug", [ "$-debug", "pai/vwx0.0.1-beta/frame/page_control-debug", "utility/backbone/1.1.2/backbone-debug", "pai/vwx0.0.1-beta/frame/ua-debug", "pai/vwx0.0.1-beta/frame/page-debug", "utility/zepto/modules/data/1.1.4/data-debug", "utility/hammer/plugins/jquery.hammer/1.1.3/jquery.hammer-debug", "utility/underscore/1.6.0/underscore-debug", "pai/vwx0.0.1-beta/account/setup/bind/enter_pw/view-debug", "pai/vwx0.0.1-beta/common/view-debug", "utility/handlebars/1.3.0/runtime-debug", "pai/vwx0.0.1-beta/common/utility-debug", "pai/vwx0.0.1-beta/common/cross_domain_storage-debug", "matcha/cookie/1.0.0/cookie-debug", "pai/vwx0.0.1-beta/common/scroll-debug", "utility/iscroll/4.2.5/iscroll-debug", "pai/vwx0.0.1-beta/common/img-ready-debug", "pai/vwx0.0.1-beta/ui/m_alert/view-debug", "pai/vwx0.0.1-beta/account/setup/bind/enter_pw/model-debug", "pai/vwx0.0.1-beta/common/global_config-debug" ], function(require, exports, module) {
    var $ = require("$-debug");
    var page_control = require("pai/vwx0.0.1-beta/frame/page_control-debug");
    var enter_pw_view = require("pai/vwx0.0.1-beta/account/setup/bind/enter_pw/view-debug");
    var enter_pw_model = require("pai/vwx0.0.1-beta/account/setup/bind/enter_pw/model-debug");
    page_control.add_page([ function() {
        return {
            title: "设置",
            route: {
                "account/setup/bind/enter_pw/:form": "account/setup/bind/enter_pw"
            },
            dom_not_cache: true,
            ignore_exist: true,
            transition_type: "slide",
            initialize: function() {},
            page_init: function(page_view, route_params_arr, route_params_obj) {
                var self = this;
                var is_form_setup;
                var is_form_login;
                if (route_params_arr[0] == "form_setup") {
                    is_form_setup = true;
                    is_form_login = false;
                } else if (route_params_arr[0] == "form_login") {
                    is_form_setup = false;
                    is_form_login = true;
                }
                var data = {
                    is_form_setup: is_form_setup,
                    is_form_login: is_form_login
                };
                var model = new enter_pw_model();
                var enter_pw_view_obj = new enter_pw_view({
                    submit_data: route_params_obj,
                    model: model,
                    parentNode: self.$el,
                    templateModel: data
                }).render();
            },
            page_before_show: function() {},
            page_show: function() {},
            page_before_hide: function() {}
        };
    } ]);
});

/**
 * Created by nolest on 2014/9/13.
 */
define("pai/vwx0.0.1-beta/account/setup/bind/enter_pw/view-debug", [ "$-debug", "pai/vwx0.0.1-beta/frame/page_control-debug", "utility/backbone/1.1.2/backbone-debug", "pai/vwx0.0.1-beta/frame/ua-debug", "pai/vwx0.0.1-beta/frame/page-debug", "utility/zepto/modules/data/1.1.4/data-debug", "utility/hammer/plugins/jquery.hammer/1.1.3/jquery.hammer-debug", "utility/underscore/1.6.0/underscore-debug", "pai/vwx0.0.1-beta/common/view-debug", "utility/handlebars/1.3.0/runtime-debug", "pai/vwx0.0.1-beta/common/utility-debug", "pai/vwx0.0.1-beta/common/cross_domain_storage-debug", "matcha/cookie/1.0.0/cookie-debug", "pai/vwx0.0.1-beta/common/scroll-debug", "utility/iscroll/4.2.5/iscroll-debug", "pai/vwx0.0.1-beta/common/img-ready-debug", "pai/vwx0.0.1-beta/ui/m_alert/view-debug" ], function(require, exports, module) {
    var $ = require("$-debug");
    var page_control = require("pai/vwx0.0.1-beta/frame/page_control-debug");
    var View = require("pai/vwx0.0.1-beta/common/view-debug");
    var bind_tpl = require("pai/vwx0.0.1-beta/account/setup/bind/enter_pw/tpl/main-debug.handlebars");
    var utility = require("pai/vwx0.0.1-beta/common/utility-debug");
    var Scroll = require("pai/vwx0.0.1-beta/common/scroll-debug");
    var m_alert = require("pai/vwx0.0.1-beta/ui/m_alert/view-debug");
    var enter_pw_view = View.extend({
        attrs: {
            template: bind_tpl
        },
        events: {
            swiperight: function() {
                page_control.back();
            },
            "tap [data-role=page-back]": function(ev) {
                page_control.back();
            },
            'tap [data-role="finish-reg"]': function() {
                var self = this;
                if (self.pw.val() == "") {
                    alert("请填写密码！");
                    return;
                }
                var data = {
                    role: utility.storage.get("user_role"),
                    type: "phone_reg_step_2",
                    password: self.pw.val()
                };
                var submit = $.extend(true, {}, data, self.get("submit_data"));
                self.model.send_data(submit);
            },
            'tap [data-role="get_code"]': function() {
                var self = this;
                var phone_reg = new RegExp(/^[0-9]{11}$/);
                if (!phone_reg.test(self.phone.val().trim())) {
                    m_alert.show("请正确填写手机号！", "error", {
                        delay: 1e3
                    });
                    return;
                }
                var data = {
                    reset: 1,
                    type: "bind_sent_verify_code",
                    phone: self.phone.val()
                };
                if (self.counting) {
                    return;
                }
                self._count_down(120);
                self.model.get_reset_code(data);
            },
            'tap [data-role="finish-change"]': function() {
                var self = this;
                var pw_cn = new RegExp(/^[\u4E00-\u9FA5]+$/);
                var phone_reg = new RegExp(/^[0-9]{11}$/);
                if (!phone_reg.test(self.phone.val().trim())) {
                    m_alert.show("请正确填写手机号！", "error");
                    return;
                }
                if (self.phone.val().trim() == "") {
                    m_alert.show("手机号不能为空！", "error");
                    return;
                }
                if (self.new_pw.val().trim() == "") {
                    //m_alert.show('请填写新的密码！');
                    m_alert.show("请填写新的密码！", "error", {
                        delay: 1e3
                    });
                    return;
                }
                if (pw_cn.test(self.new_pw.val().trim())) {
                    //m_alert.show('新密码不能含有汉字','error');
                    m_alert.show("新密码不能含有汉字!", "error", {
                        delay: 1e3
                    });
                    return;
                }
                if (self.new_pw.val().trim() == "") {
                    //m_alert.show('新密码不能为空！');
                    m_alert.show("新密码不能为空!", "error", {
                        delay: 1e3
                    });
                    return;
                }
                if (self.new_pw.val().trim().length < 6 || self.new_pw.val().trim().length > 32) {
                    //m_alert.show('密码长度6~32位','error');
                    m_alert.show("密码长度6~32位!", "error", {
                        delay: 1e3
                    });
                    return;
                }
                console.log(utility.user);
                var data = {
                    phone: self.phone.val(),
                    pwd: self.new_pw.val().trim(),
                    verify_code: self.code.val(),
                    type: "reset_pwd"
                };
                self.model.send_change_pw(data);
            }
        },
        _setup_events: function() {
            var self = this;
            self.on("render", function() {
                self._setup_scroll();
            });
            self.model.on("success:fetch", function(response, options) {
                m_alert.show(response.result_data.msg);
                //设置密码成功后导航到热门
                if (response.result_data.code != 0) {
                    page_control.navigate_to_page("hot");
                }
            }).on("complete:fetch", function(response, options) {}).on("success:fetch_change_pw", function(response, options) {
                //m_alert.show(response.result_data.msg,'right');
                var res = response.result_data;
                if (res.code != 0) {
                    m_alert.show(response.result_data.msg, "right");
                    setTimeout(function() {
                        page_control.navigate_to_page("mine");
                    }, 1500);
                } else if (res.code == 0) {
                    m_alert.show(res.msg, "error");
                }
            }).on("error:fetch_change_pw", function(response, options) {
                m_alert.show("提交失败，请重试", "error");
            }).on("complete:error_change_pw", function(response, options) {
                m_alert.show("修改失败，请重试", "error");
            }).on("success:get_reset_code", function(response, options) {
                var res = response.result_data;
                if (res.code == 1) {
                    m_alert.show(res.msg, "right");
                } else if (res.code == 0) {
                    self._stop_count_down();
                    m_alert.show(res.msg, "error");
                }
            }).on("error:get_reset_code", function(response, options) {
                m_alert.show("获取失败，请重试", "error");
                self._stop_count_down();
            });
        },
        _setup_scroll: function() {
            var self = this;
            var view_scroll_obj = Scroll(self.$container, {
                is_hide_dropdown: true
            });
            self.view_scroll_obj = view_scroll_obj;
        },
        _count_down: function(sec) {
            var self = this;
            self.counting = true;
            self.count_btn.html(sec);
            self.count_Interval = setInterval(function() {
                sec--;
                if (sec == 0) {
                    self._stop_count_down();
                } else {
                    self.count_btn.html(sec);
                }
            }, 1e3);
        },
        _stop_count_down: function() {
            var self = this;
            clearInterval(self.count_Interval);
            self.count_btn.html("重新获取");
            self.counting = false;
        },
        setup: function() {
            var self = this;
            self.$container = self.$('[data-role="container"]');
            self.pw = self.$('[data-role="submit_pw"]');
            self.phone = self.$('[data-role="enter_phone"]');
            self.code = self.$('[data-role="enter_code"]');
            self.new_pw = self.$('[data-role="new_pw"]');
            self.count_btn = self.$('[data-role="get_code"]');
            self.counting = false;
            self._setup_events();
        },
        render: function() {
            var self = this;
            View.prototype.render.apply(self);
            self.trigger("render");
            return self;
        }
    });
    module.exports = enter_pw_view;
});

define("pai/vwx0.0.1-beta/account/setup/bind/enter_pw/tpl/main-debug.handlebars", [ "utility/handlebars/1.3.0/runtime-debug" ], function(require, exports, module) {
    var Handlebars = require("utility/handlebars/1.3.0/runtime-debug");
    var template = Handlebars.template;
    module.exports = template(function(Handlebars, depth0, helpers, partials, data) {
        this.compilerInfo = [ 4, ">= 1.0.0" ];
        helpers = helpers || {};
        for (var key in Handlebars.helpers) {
            helpers[key] = helpers[key] || Handlebars.helpers[key];
        }
        data = data || {};
        var buffer = "", stack1, self = this;
        function program1(depth0, data) {
            return '\r\n    <header class="nav-header reset-pw-nav-header">\r\n        <div class="left-button-wrap" data-role="page-back">\r\n            <a><i class="icon icon-back"></i></a>\r\n        </div>\r\n        <h3 class="title">修改密码</h3>\r\n        <div class="right-button-wrap">\r\n        </div>\r\n    </header>\r\n    ';
        }
        function program3(depth0, data) {
            return '\r\n    <header class="nav-header mine-setting-nav-header">\r\n        <div class="left-button-wrap" data-role="page-back">\r\n            <a><i class="icon icon-back"></i></a>\r\n        </div>\r\n\r\n        <h3 class="title">设定密码</h3>\r\n\r\n        <div class="right-button-wrap">\r\n        </div>\r\n    </header>\r\n    ';
        }
        function program5(depth0, data) {
            return '\r\n            <div class="change-password">\r\n                <!-- <ul class="list">\r\n                    <li>\r\n                        <span class="btn-get" data-role="get_code">获取验证码</span>\r\n                        <input type="text" name=" " id=" " class="input-text exp" placeholder="手机号" data-role="enter_phone">\r\n                       \r\n                    </li>\r\n                    <li>\r\n                        <input type="text" name=" " id=" " class="input-text"  placeholder="验证码" data-role="enter_code">\r\n                    </li>\r\n                    <li>\r\n                        <input type="password" name=" " id=" " class="input-text"  placeholder="新密码" data-role="new_pw">\r\n                    </li>\r\n                </ul> -->\r\n\r\n\r\n                <div class="ui-input-mod">\r\n                    <div class="item">\r\n                        <input type="tel" class="ui-input  ui-input-size-large ui-input-block ui-input-border-bottom-none ui-input-top-left ui-input-top-right"  placeholder="手机号" data-role="enter_phone">\r\n                        <div class="pop-tips">\r\n                            <button class="ui-button ui-button-primary ui-button-size-min " data-role="get_code">\r\n                                <span class="ui-button-content">获取验证码</span>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    <div class="item"><input type="text" class="ui-input  ui-input-size-large ui-input-block  ui-input-border-bottom-none ui-input-bottom-left ui-input-bottom-right" placeholder="验证码" data-role="enter_code"></div>\r\n\r\n                    <div class="item"><input type="password" class="ui-input  ui-input-size-large ui-input-block ui-input-bottom-left ui-input-bottom-right"  placeholder="新密码" data-role="new_pw"></div>\r\n                </div>\r\n\r\n\r\n            <!--     <div class="btn" data-role="finish-change">确认修改</div> -->\r\n\r\n                <button style="margin-top:10px" data-role="finish-change" class="ui-button ui-button-primary ui-button-size-large ui-button-block">\r\n                    <span class="ui-button-content">确认修改</span>\r\n                </button>\r\n\r\n            </div>\r\n    ';
        }
        function program7(depth0, data) {
            return '\r\n            <div class="set-password">\r\n               <!--  <ul class="list clearfix">\r\n                    <li>\r\n                        <input type="password" name=" " id=" " class="input-text"  placeholder="密码" data-role="submit_pw">\r\n                    </li>\r\n                </ul> -->\r\n\r\n                <div class="ui-input-mod">\r\n                    <div class="item">\r\n                        <input type="password" class="ui-input  ui-input-size-large ui-input-block  ui-input-top-left ui-input-top-right"  placeholder="密码"   data-role="submit_pw">\r\n                    </div>        \r\n                </div>\r\n\r\n\r\n                <!-- <div class="btn" data-role="finish-reg">完成</div> -->\r\n\r\n                <button  data-role="finish-reg" style="margin-top:10px" data-role="finish-change" class="ui-button ui-button-primary ui-button-size-large ui-button-block">\r\n                    <span class="ui-button-content">完成</span>\r\n                </button>\r\n\r\n\r\n                <p class="p1">该密码将用于您的登录，并保护您的账户安全。</p>\r\n            </div>\r\n    ';
        }
        buffer += '<main role="main">\r\n    ';
        stack1 = helpers["if"].call(depth0, depth0 && depth0.is_form_setup, {
            hash: {},
            inverse: self.program(3, program3, data),
            fn: self.program(1, program1, data),
            data: data
        });
        if (stack1 || stack1 === 0) {
            buffer += stack1;
        }
        buffer += '\r\n    <div data-role="container" class="change-password-container">\r\n        <div class="warp-box">\r\n    ';
        stack1 = helpers["if"].call(depth0, depth0 && depth0.is_form_setup, {
            hash: {},
            inverse: self.program(7, program7, data),
            fn: self.program(5, program5, data),
            data: data
        });
        if (stack1 || stack1 === 0) {
            buffer += stack1;
        }
        buffer += "\r\n        </div>\r\n    </div>\r\n</main>";
        return buffer;
    });
});

/**
 * Created by nolest on 2014/9/13.
 */
define("pai/vwx0.0.1-beta/account/setup/bind/enter_pw/model-debug", [ "pai/vwx0.0.1-beta/common/global_config-debug", "utility/backbone/1.1.2/backbone-debug" ], function(require, exports, module) {
    var global_config = require("pai/vwx0.0.1-beta/common/global_config-debug");
    var Backbone = require("utility/backbone/1.1.2/backbone-debug");
    module.exports = Backbone.Model.extend({
        url: global_config.ajax_url.bind_act,
        "default": {},
        _setup_events: function() {},
        parse: function(response) {
            if (response.result_data) {
                return response.result_data;
            }
            return response;
        },
        initialize: function() {
            var self = this;
            self._setup_events();
        },
        send_data: function(data) {
            var self = this;
            self.fetch({
                url: self.url,
                data: data,
                cache: false,
                beforeSend: function(xhr, options) {
                    self.trigger("before:fetch", xhr, options);
                },
                success: function(collection, response, options) {
                    self.trigger("success:fetch", response, options);
                },
                error: function(collection, response, options) {
                    self.trigger("error:fetch", response, options);
                },
                complete: function(xhr, status) {
                    self.trigger("complete:fetch", xhr, status);
                }
            });
        },
        get_reset_code: function(data) {
            var self = this;
            self.fetch({
                url: global_config.ajax_url.reg,
                data: data,
                cache: false,
                beforeSend: function(xhr, options) {
                    self.trigger("before:get_reset_code", xhr, options);
                },
                success: function(collection, response, options) {
                    self.trigger("success:get_reset_code", response, options);
                },
                error: function(collection, response, options) {
                    self.trigger("error:get_reset_code", response, options);
                },
                complete: function(xhr, status) {
                    self.trigger("complete:get_reset_code", xhr, status);
                }
            });
        },
        send_change_pw: function(data) {
            var self = this;
            self.fetch({
                url: global_config.ajax_url.reg,
                data: data,
                cache: false,
                beforeSend: function(xhr, options) {
                    self.trigger("before:fetch_change_pw", xhr, options);
                },
                success: function(collection, response, options) {
                    self.trigger("success:fetch_change_pw", response, options);
                },
                error: function(collection, response, options) {
                    self.trigger("error:fetch_change_pw", response, options);
                },
                complete: function(xhr, status) {
                    self.trigger("complete:fetch_change_pw", xhr, status);
                }
            });
        }
    });
});

/**
 * Created by nolest on 2014/9/18.
 */
define("pai/vwx0.0.1-beta/account/register/login_phone/index-debug", [ "$-debug", "pai/vwx0.0.1-beta/frame/page_control-debug", "utility/backbone/1.1.2/backbone-debug", "pai/vwx0.0.1-beta/frame/ua-debug", "pai/vwx0.0.1-beta/frame/page-debug", "utility/zepto/modules/data/1.1.4/data-debug", "utility/hammer/plugins/jquery.hammer/1.1.3/jquery.hammer-debug", "utility/underscore/1.6.0/underscore-debug", "pai/vwx0.0.1-beta/account/register/login_phone/view-debug", "pai/vwx0.0.1-beta/common/view-debug", "utility/handlebars/1.3.0/runtime-debug", "pai/vwx0.0.1-beta/common/utility-debug", "pai/vwx0.0.1-beta/common/cross_domain_storage-debug", "matcha/cookie/1.0.0/cookie-debug", "pai/vwx0.0.1-beta/common/scroll-debug", "utility/iscroll/4.2.5/iscroll-debug", "pai/vwx0.0.1-beta/common/img-ready-debug", "pai/vwx0.0.1-beta/ui/m_alert/view-debug", "pai/vwx0.0.1-beta/ui/m_select/view-debug", "pai/vwx0.0.1-beta/common/new_iscroll-debug", "pai/vwx0.0.1-beta/base/ua-debug", "pai/vwx0.0.1-beta/common/I_APP-debug", "pai/vwx0.0.1-beta/common/global_config-debug", "pai/vwx0.0.1-beta/account/register/login_phone/model-debug" ], function(require, exports, module) {
    var $ = require("$-debug");
    var page_control = require("pai/vwx0.0.1-beta/frame/page_control-debug");
    var login_phone_view = require("pai/vwx0.0.1-beta/account/register/login_phone/view-debug");
    var login_phone_model = require("pai/vwx0.0.1-beta/account/register/login_phone/model-debug");
    page_control.add_page([ function() {
        return {
            title: "注册 - 流程1",
            route: {
                "account/register/login_phone": "account/register/login_phone"
            },
            dom_not_cache: true,
            ignore_exist: true,
            transition_type: "slide",
            page_init: function(page_view, route_params_arr, route_params_obj) {
                var self = this;
                var model = new login_phone_model();
                var login_phone_view_obj = new login_phone_view({
                    model: model,
                    parentNode: self.$el
                }).render();
            },
            page_before_show: function() {},
            page_show: function() {},
            page_before_hide: function() {}
        };
    } ]);
});

/**
 * Created by nolest on 2014/9/18.
 */
define("pai/vwx0.0.1-beta/account/register/login_phone/view-debug", [ "$-debug", "pai/vwx0.0.1-beta/frame/page_control-debug", "utility/backbone/1.1.2/backbone-debug", "pai/vwx0.0.1-beta/frame/ua-debug", "pai/vwx0.0.1-beta/frame/page-debug", "utility/zepto/modules/data/1.1.4/data-debug", "utility/hammer/plugins/jquery.hammer/1.1.3/jquery.hammer-debug", "utility/underscore/1.6.0/underscore-debug", "pai/vwx0.0.1-beta/common/view-debug", "utility/handlebars/1.3.0/runtime-debug", "pai/vwx0.0.1-beta/common/utility-debug", "pai/vwx0.0.1-beta/common/cross_domain_storage-debug", "matcha/cookie/1.0.0/cookie-debug", "pai/vwx0.0.1-beta/common/scroll-debug", "utility/iscroll/4.2.5/iscroll-debug", "pai/vwx0.0.1-beta/common/img-ready-debug", "pai/vwx0.0.1-beta/ui/m_alert/view-debug", "pai/vwx0.0.1-beta/ui/m_select/view-debug", "pai/vwx0.0.1-beta/common/new_iscroll-debug", "pai/vwx0.0.1-beta/base/ua-debug", "pai/vwx0.0.1-beta/common/I_APP-debug", "pai/vwx0.0.1-beta/common/global_config-debug" ], function(require, exports, module) {
    var $ = require("$-debug");
    var page_control = require("pai/vwx0.0.1-beta/frame/page_control-debug");
    var View = require("pai/vwx0.0.1-beta/common/view-debug");
    var login_phone_tpl = require("pai/vwx0.0.1-beta/account/register/login_phone/tpl/main-debug.handlebars");
    var utility = require("pai/vwx0.0.1-beta/common/utility-debug");
    var Scroll = require("pai/vwx0.0.1-beta/common/scroll-debug");
    var m_alert = require("pai/vwx0.0.1-beta/ui/m_alert/view-debug");
    var m_select = require("pai/vwx0.0.1-beta/ui/m_select/view-debug");
    var App = require("pai/vwx0.0.1-beta/common/I_APP-debug");
    var login_phone_view = View.extend({
        attrs: {
            template: login_phone_tpl
        },
        events: {
            swiperight: function() {
                page_control.back();
            },
            "tap [data-role=page-back]": function(ev) {
                page_control.back();
            },
            'tap [data-role="get_code"]': function() {
                var self = this;
                //不为数字 || 空 || 字符串中有空格时返回
                if (!parseInt(self.enter_phone.val()) || self.enter_phone.val().trim() == "" || self.enter_phone.val().trim().indexOf(" ") != -1) {
                    m_alert.show("手机号不对哦！", "error");
                    return;
                }
                if (self.counting) {
                    return;
                }
                self._count_down(120);
                self.model.send_code_request({
                    phone: self.enter_phone.val(),
                    type: "bind_sent_verify_code"
                });
            },
            'tap [data-role="btn_login"]': function() {
                var self = this;
                //手机格式
                if (self.enter_phone.val().trim() == "" || self.enter_phone.val().trim().indexOf(" ") != -1) {
                    m_alert.show("手机号不对哦！", "error");
                    return;
                }
                //验证码格式
                if (self.enter_code.val().trim() == "" || self.enter_code.val().trim().indexOf(" ") != -1) {
                    m_alert.show("验证码格式不对哦！", "error");
                    return;
                }
                m_alert.show("提交中...", "loading");
                if (self.can_login) {
                    // 跑登录流程
                    var action_type = "login_by_phone";
                } else {
                    var action_type = "reg_act";
                }
                self.model.send_phone_and_code({
                    phone: self.enter_phone.val(),
                    verify_code: self.enter_code.val(),
                    type: action_type,
                    role: window._role || 0
                });
            }
        },
        _count_down: function(sec) {
            var self = this;
            self.counting = true;
            self.count_btn.html(sec);
            self.count_Interval = setInterval(function() {
                sec--;
                if (sec == 0) {
                    self._stop_count_down();
                } else {
                    self.count_btn.html(sec);
                }
            }, 1e3);
        },
        _stop_count_down: function() {
            var self = this;
            clearInterval(self.count_Interval);
            self.count_btn.html("重新获取");
            self.counting = false;
        },
        _setup_events: function() {
            var self = this;
            self.on("render", function() {
                self._setup_scroll();
            });
            self.model.on("success:fetch_code", function(response, options) {
                var code = self.model.toJSON().code;
                switch (code) {
                  case 0:
                    self._stop_count_down();
                    m_alert.show(self.model.toJSON().msg, "right");
                    break;

                  case 1:
                    // 用于注册
                    self.can_login = false;
                    break;

                  case 2:
                    self.can_login = true;
                    if (response.result_data.user_info) {}
                    break;
                }
            }).on("complete:fetch_code", function(response, options) {}).on("error:fetch_code", function(response, options) {
                m_alert.show(self.model.toJSON().msg, "error");
                self._stop_count_down();
            }).on("success:phone_and_code", function(response, options) {
                var response = response.result_data;
                m_alert.show(response.msg, "right");
                switch (response.code) {
                  // 登录错误
                    case 0:
                    break;

                  case 1:
                    if (self.can_login) {
                        m_alert.show("登录成功", "right");
                        utility.user.update_user(response.data);
                        utility.login_id = response.data.user_id;
                        var icon = response.data.user_icon;
                        var is_go_to_edit = response.is_go_to_edit;
                        var params = {
                            pocoid: utility.login_id,
                            username: utility.user.get("nickname"),
                            icon: icon
                        };
                        if (App.isPaiApp) {
                            App.login(params);
                            // 保存设备信息
                            App.save_device();
                        }
                        // 导航到补充资料
                        if (is_go_to_edit) {
                            if (utility.user.get("role") == "model") {
                                page_control.navigate_to_page("model_date/model_card/" + utility.login_id + "/1");
                            } else {
                                page_control.navigate_to_page("mine/profile/" + utility.login_id + "/1");
                            }
                        } else {
                            page_control.navigate_to_page("mine");
                        }
                    } else {
                        // 跑绑定流程
                        //手机号和密码提交成功
                        page_control.navigate_to_page("account/register/login_pw", options.data);
                    }
                    break;

                  // 选角色
                    case -1:
                    setTimeout(function() {
                        self.select_role.show();
                    }, 1100);
                    break;
                }
            }).on("complete:phone_and_code", function(response, options) {}).on("error:phone_and_code", function(response, options) {
                m_alert.show(self.model.toJSON().msg, "error");
            });
        },
        _setup_scroll: function() {
            var self = this;
            var view_scroll_obj = Scroll(self.$container);
            self.view_scroll_obj = view_scroll_obj;
        },
        setup: function() {
            var self = this;
            self.$container = self.$('[data-role="container"]');
            self.counting = false;
            self.count_btn = self.$('[data-role="get_code"]');
            self.enter_phone = self.$('[data-role="enter_phone"]');
            self.enter_code = self.$('[data-role="verify_code"]');
            self._setup_events();
            self._setup_select_role();
        },
        render: function() {
            var self = this;
            View.prototype.render.apply(self);
            self.trigger("render");
            return self;
        },
        /**
         * 配置角色选择
         * @private
         */
        _setup_select_role: function() {
            var self = this;
            var arr = [ {
                value: "",
                text: "请选择角色",
                selected: true
            }, {
                value: "model",
                text: "模特"
            }, {
                value: "cameraman",
                text: "摄影师"
            } ];
            self.select_role = new m_select({
                templateModel: {
                    options: [ arr ]
                },
                parentNode: self.$el
            }).render();
            self.select_role.on("confirm:success", function(arr) {
                var role = arr[0].value;
                if (!role) {
                    m_alert.show("请选择角色", "right");
                    return;
                }
                if (self.can_login) {
                    // 跑登录流程
                    var action_type = "login_by_phone";
                } else {
                    var action_type = "phone_reg_step_1";
                }
                self.model.send_phone_and_code({
                    phone: self.enter_phone.val(),
                    verify_code: self.enter_code.val(),
                    type: action_type,
                    role: role
                });
            });
        }
    });
    module.exports = login_phone_view;
});

define("pai/vwx0.0.1-beta/account/register/login_phone/tpl/main-debug.handlebars", [ "utility/handlebars/1.3.0/runtime-debug" ], function(require, exports, module) {
    var Handlebars = require("utility/handlebars/1.3.0/runtime-debug");
    var template = Handlebars.template;
    module.exports = template(function(Handlebars, depth0, helpers, partials, data) {
        this.compilerInfo = [ 4, ">= 1.0.0" ];
        helpers = helpers || {};
        for (var key in Handlebars.helpers) {
            helpers[key] = helpers[key] || Handlebars.helpers[key];
        }
        data = data || {};
        return '<main role="main">\r\n    <header class="nav-header mine-setting-nav-header">\r\n        <div class="left-button-wrap" data-role="page-back">\r\n            <a><i class="icon icon-back"></i></a>\r\n        </div>\r\n        <h3 class="title">验证手机号</h3>\r\n        <div class="right-button-wrap">\r\n        </div>\r\n    </header>\r\n    <div class="phone_and_pw_change_container" data-role="container">\r\n        <div class="warp-box">\r\n                <div class="verification-mobile" data-role="verification-mobile-container">\r\n                    <ul class="list">\r\n                        <li>\r\n                            <span class="btn-get" data-role="get_code">获取验证码</span>\r\n                            <input type="text" name=" " id=" " class="input-text"  placeholder="请输入手机号码" data-role="enter_phone">\r\n                        </li>\r\n                        <li>\r\n                            <input type="text" name=" " id=" " class="input-text"  placeholder="验证码" data-role="verify_code">\r\n                        </li>\r\n                    </ul>\r\n               \r\n\r\n                    <div class="btn">\r\n                    <button data-role="btn_login" class="ui-button ui-button-primary ui-button-size-large ui-button-block">\r\n                        <span class="ui-button-content">下一步</span>\r\n                    </button>\r\n                    </div>\r\n\r\n                    <p class="p1">您将收到一条验证短信，绑定成功后，您可以使用手机号登录。我们不会泄露您的隐私。</p>\r\n                </div>\r\n        </div>\r\n    </div>\r\n</main>';
    });
});

/**
 * Created by nolest on 2014/9/18.
 */
define("pai/vwx0.0.1-beta/account/register/login_phone/model-debug", [ "pai/vwx0.0.1-beta/common/global_config-debug", "utility/backbone/1.1.2/backbone-debug" ], function(require, exports, module) {
    var global_config = require("pai/vwx0.0.1-beta/common/global_config-debug");
    var Backbone = require("utility/backbone/1.1.2/backbone-debug");
    module.exports = Backbone.Model.extend({
        url: global_config.ajax_url.bind_act,
        "default": {},
        _setup_events: function() {},
        parse: function(response) {
            if (response.result_data) {
                return response.result_data;
            }
            return response;
        },
        initialize: function() {
            var self = this;
            self._setup_events();
        },
        send_code_request: function(data) {
            var self = this;
            self.fetch({
                url: self.url,
                data: data,
                cache: false,
                beforeSend: function(xhr, options) {
                    self.trigger("before:fetch_code", xhr, options);
                },
                success: function(collection, response, options) {
                    self.trigger("success:fetch_code", response, options);
                },
                error: function(collection, response, options) {
                    self.trigger("error:fetch_code", response, options);
                },
                complete: function(xhr, status) {
                    self.trigger("complete:fetch_code", xhr, status);
                }
            });
        },
        send_phone_and_code: function(data) {
            var self = this;
            self.fetch({
                url: self.url,
                data: data,
                cache: false,
                beforeSend: function(xhr, options) {
                    self.trigger("before:phone_and_code", xhr, options);
                },
                success: function(collection, response, options) {
                    self.trigger("success:phone_and_code", response, options);
                },
                error: function(collection, response, options) {
                    self.trigger("error:phone_and_code", response, options);
                },
                complete: function(xhr, status) {
                    self.trigger("complete:phone_and_code", xhr, status);
                }
            });
        }
    });
});

/**
 * Created by nolest on 2014/9/18.
 */
define("pai/vwx0.0.1-beta/account/register/login_pw/index-debug", [ "$-debug", "pai/vwx0.0.1-beta/frame/page_control-debug", "utility/backbone/1.1.2/backbone-debug", "pai/vwx0.0.1-beta/frame/ua-debug", "pai/vwx0.0.1-beta/frame/page-debug", "utility/zepto/modules/data/1.1.4/data-debug", "utility/hammer/plugins/jquery.hammer/1.1.3/jquery.hammer-debug", "utility/underscore/1.6.0/underscore-debug", "pai/vwx0.0.1-beta/account/register/login_pw/view-debug", "pai/vwx0.0.1-beta/common/view-debug", "utility/handlebars/1.3.0/runtime-debug", "pai/vwx0.0.1-beta/common/utility-debug", "pai/vwx0.0.1-beta/common/cross_domain_storage-debug", "matcha/cookie/1.0.0/cookie-debug", "pai/vwx0.0.1-beta/common/scroll-debug", "utility/iscroll/4.2.5/iscroll-debug", "pai/vwx0.0.1-beta/common/img-ready-debug", "pai/vwx0.0.1-beta/common/I_APP-debug", "pai/vwx0.0.1-beta/common/global_config-debug", "pai/vwx0.0.1-beta/ui/m_alert/view-debug" ], function(require, exports, module) {
    var $ = require("$-debug");
    var page_control = require("pai/vwx0.0.1-beta/frame/page_control-debug");
    var login_pw_view = require("pai/vwx0.0.1-beta/account/register/login_pw/view-debug");
    var utility = require("pai/vwx0.0.1-beta/common/utility-debug");
    var m_alert = require("pai/vwx0.0.1-beta/ui/m_alert/view-debug");
    page_control.add_page([ function() {
        return {
            title: "确定密码",
            route: {
                "account/register/login_pw": "account/register/login_pw"
            },
            dom_not_cache: true,
            ignore_exist: true,
            transition_type: "slide",
            initialize: function() {},
            page_init: function(page_view, route_params_arr, route_params_obj) {
                var self = this;
                if (!utility.auth.is_login() && window._Has_reg) {
                    m_alert.show("您已经注册过了", "right", {
                        delay: 3e3
                    });
                    setTimeout(function() {
                        page_control.back();
                    }, 3e3);
                    return;
                }
                var login_pw_view_obj = new login_pw_view({
                    model: utility.user,
                    parentNode: self.$el,
                    data: route_params_obj
                }).render();
            },
            page_before_show: function() {},
            page_show: function() {},
            page_before_hide: function() {}
        };
    } ]);
});

/**
 * Created by nolest on 2014/9/18.
 */
define("pai/vwx0.0.1-beta/account/register/login_pw/view-debug", [ "$-debug", "pai/vwx0.0.1-beta/frame/page_control-debug", "utility/backbone/1.1.2/backbone-debug", "pai/vwx0.0.1-beta/frame/ua-debug", "pai/vwx0.0.1-beta/frame/page-debug", "utility/zepto/modules/data/1.1.4/data-debug", "utility/hammer/plugins/jquery.hammer/1.1.3/jquery.hammer-debug", "utility/underscore/1.6.0/underscore-debug", "pai/vwx0.0.1-beta/common/view-debug", "utility/handlebars/1.3.0/runtime-debug", "pai/vwx0.0.1-beta/common/utility-debug", "pai/vwx0.0.1-beta/common/cross_domain_storage-debug", "matcha/cookie/1.0.0/cookie-debug", "pai/vwx0.0.1-beta/common/scroll-debug", "utility/iscroll/4.2.5/iscroll-debug", "pai/vwx0.0.1-beta/common/img-ready-debug", "pai/vwx0.0.1-beta/common/I_APP-debug", "pai/vwx0.0.1-beta/common/global_config-debug", "pai/vwx0.0.1-beta/ui/m_alert/view-debug" ], function(require, exports, module) {
    var $ = require("$-debug");
    var page_control = require("pai/vwx0.0.1-beta/frame/page_control-debug");
    var View = require("pai/vwx0.0.1-beta/common/view-debug");
    var login_pw_tpl = require("pai/vwx0.0.1-beta/account/register/login_pw/tpl/main-debug.handlebars");
    var utility = require("pai/vwx0.0.1-beta/common/utility-debug");
    var Scroll = require("pai/vwx0.0.1-beta/common/scroll-debug");
    var App = require("pai/vwx0.0.1-beta/common/I_APP-debug");
    var global_config = require("pai/vwx0.0.1-beta/common/global_config-debug");
    var m_alert = require("pai/vwx0.0.1-beta/ui/m_alert/view-debug");
    var cookie = require("matcha/cookie/1.0.0/cookie-debug");
    var login_pw_view = View.extend({
        attrs: {
            template: login_pw_tpl
        },
        events: {
            swiperight: function() {
                page_control.back();
            },
            "tap [data-role=page-back]": function(ev) {
                page_control.back();
            },
            'tap [data-role="finish-reg"]': function() {
                var self = this;
                var pwd = $.trim(self.pw.val());
                var sec_pwd = $.trim(self.pw_sec.val());
                if (pwd != sec_pwd) {
                    m_alert.show("设置错误，两次输入的密码必须一致", "error");
                    return;
                }
                if (utility.is_empty(pwd) || self.pw.val().length < 6 || self.pw.val().length > 32) {
                    m_alert.show("请输入6~32位密码");
                    return;
                }
                // 跑注册流程
                var params_data = {
                    phone: self.get("data").phone,
                    verify_code: self.get("data").verify_code,
                    pwd: pwd,
                    role: "cameraman",
                    type: "reg_act"
                };
                if (self.reg_ing) {
                    return;
                }
                utility.user.reg(params_data);
            }
        },
        _setup_events: function() {
            var self = this;
            self.on("render", function() {
                self._setup_scroll();
            });
            // 这里表示验证码成功
            utility.user.on("before:reg", function() {
                m_alert.show("账号正在创建中...", "loading", {
                    delay: -1
                });
                self.reg_ing = true;
            }).on("success:reg", function(response, options) {
                self.reg_ing = false;
                m_alert.hide();
                var response = response.result_data;
                var msg = response.msg;
                var code = response.code;
                if (code == 1) {
                    // 注册成功，接着要保存用户信息
                    m_alert.show(msg, "right");
                    var user_info = response.data;
                    utility.user.update_user(user_info);
                    utility.login_id = user_info.user_id;
                    window._Has_reg = true;
                    console.log(cookie.get("yueus_url2"));
                    var yueus_url2 = decodeURIComponent(cookie.get("yueus_url2"));
                    if (yueus_url2) {
                        console.log(yueus_url2);
                        debugger;
                        window.location.href = yueus_url2;
                    } else {
                        page_control.navigate_to_page(global_config.default_index_route);
                    }
                } else {
                    m_alert.show(msg, "error");
                }
            }).on("error:reg", function(response, options) {
                self.reg_ing = false;
                m_alert.show("网络异常", "error");
            });
        },
        _setup_scroll: function() {
            var self = this;
            var view_scroll_obj = Scroll(self.$container, {
                is_hide_dropdown: true
            });
            self.view_scroll_obj = view_scroll_obj;
        },
        setup: function() {
            var self = this;
            self.$container = self.$('[data-role="container"]');
            self.pw = self.$('[data-role="submit_pw"]');
            self.pw_sec = self.$('[data-role="submit_pw_sec"]');
            self.$user_role_group = self.$('[data-role="user-role-container"]');
            self._setup_events();
        },
        render: function() {
            var self = this;
            View.prototype.render.apply(self);
            self.trigger("render");
            return self;
        }
    });
    module.exports = login_pw_view;
});

define("pai/vwx0.0.1-beta/account/register/login_pw/tpl/main-debug.handlebars", [ "utility/handlebars/1.3.0/runtime-debug" ], function(require, exports, module) {
    var Handlebars = require("utility/handlebars/1.3.0/runtime-debug");
    var template = Handlebars.template;
    module.exports = template(function(Handlebars, depth0, helpers, partials, data) {
        this.compilerInfo = [ 4, ">= 1.0.0" ];
        helpers = helpers || {};
        for (var key in Handlebars.helpers) {
            helpers[key] = helpers[key] || Handlebars.helpers[key];
        }
        data = data || {};
        return '<main role="main">\r\n    <header class="nav-header mine-setting-nav-header">\r\n        <div class="left-button-wrap" data-role="page-back">\r\n            <a><i class="icon icon-back"></i></a>\r\n        </div>\r\n        <h3 class="title">设定密码</h3>\r\n        <div class="right-button-wrap">\r\n        </div>\r\n    </header>\r\n    <div data-role="container" class="change-password-container">\r\n        <div class="warp-box">\r\n\r\n            <div class="set-password">\r\n                <ul class="list clearfix">\r\n                    <li>\r\n                        <input type="password" name=" " id=" " class="input-text"  placeholder="密码" data-role="submit_pw">\r\n                    </li>\r\n                </ul>\r\n                <ul class="list clearfix" style="margin-top: 5px;">\r\n                    <li >\r\n                        <input type="password" name=" " id=" " class="input-text"  placeholder="再输入密码" data-role="submit_pw_sec">\r\n                    </li>\r\n                </ul>\r\n                <div class="btn" data-role="finish-reg">完成</div>\r\n                <div data-role="user-role-container" style="width: 100%;margin-top: 10px;"></div>\r\n                <p class="p1">该密码将用于您的登录，并保护您的账户安全。</p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</main>';
    });
});

/**
 * 首页 - 城市选择 基础页面框架
 * 汤圆 2014.8.18
 * @param  {[type]} require 
 * @param  {[type]} exports 
 * @param  {[type]} module  
 * @return {[type]}         
 */
define("pai/vwx0.0.1-beta/comment/index-debug", [ "$-debug", "pai/vwx0.0.1-beta/frame/page_control-debug", "utility/backbone/1.1.2/backbone-debug", "pai/vwx0.0.1-beta/frame/ua-debug", "pai/vwx0.0.1-beta/frame/page-debug", "utility/zepto/modules/data/1.1.4/data-debug", "utility/hammer/plugins/jquery.hammer/1.1.3/jquery.hammer-debug", "utility/underscore/1.6.0/underscore-debug", "pai/vwx0.0.1-beta/comment/view-debug", "pai/vwx0.0.1-beta/common/view-debug", "utility/handlebars/1.3.0/runtime-debug", "pai/vwx0.0.1-beta/common/utility-debug", "pai/vwx0.0.1-beta/common/cross_domain_storage-debug", "matcha/cookie/1.0.0/cookie-debug", "pai/vwx0.0.1-beta/common/template-helpers-debug", "pai/vwx0.0.1-beta/common/new_iscroll-debug", "utility/iscroll/4.2.5/iscroll-debug", "pai/vwx0.0.1-beta/common/img-ready-debug", "pai/vwx0.0.1-beta/base/ua-debug", "pai/vwx0.0.1-beta/common/global_config-debug", "pai/vwx0.0.1-beta/ui/m_alert/view-debug", "pai/vwx0.0.1-beta/common/I_APP-debug" ], function(require, exports, module) {
    var $ = require("$-debug");
    var page_control = require("pai/vwx0.0.1-beta/frame/page_control-debug");
    var comment_view = require("pai/vwx0.0.1-beta/comment/view-debug");
    page_control.add_page([ function() {
        return {
            title: "评价",
            route: {
                "comment/:role/:date_id/:role_id": "comment"
            },
            dom_not_cache: true,
            ignore_exist: true,
            transition_type: "slide",
            initialize: function() {},
            page_init: function(page_view, route_params_arr, route_params_obj) {
                var self = this;
                var role = route_params_arr[0];
                var date_id = route_params_arr[1];
                var role_id = route_params_arr[2];
                var table_id = route_params_obj && route_params_obj.table_id || 0;
                self.comment_view_obj = new comment_view({
                    role: role,
                    date_id: date_id,
                    role_id: role_id,
                    table_id: table_id,
                    parentNode: self.$el
                }).render();
                page_view.view = self.comment_view_obj;
            },
            page_before_show: function() {},
            page_show: function() {},
            page_before_hide: function() {},
            window_change: function(page_view) {
                page_view.view.reset_scroll_height();
            }
        };
    } ]);
});

/**
 * 首页 - 城市选择
 * 汤圆 2014.18.
 */
define("pai/vwx0.0.1-beta/comment/view-debug", [ "$-debug", "pai/vwx0.0.1-beta/frame/page_control-debug", "utility/backbone/1.1.2/backbone-debug", "pai/vwx0.0.1-beta/frame/ua-debug", "pai/vwx0.0.1-beta/frame/page-debug", "utility/zepto/modules/data/1.1.4/data-debug", "utility/hammer/plugins/jquery.hammer/1.1.3/jquery.hammer-debug", "utility/underscore/1.6.0/underscore-debug", "pai/vwx0.0.1-beta/common/view-debug", "utility/handlebars/1.3.0/runtime-debug", "pai/vwx0.0.1-beta/common/utility-debug", "pai/vwx0.0.1-beta/common/cross_domain_storage-debug", "matcha/cookie/1.0.0/cookie-debug", "pai/vwx0.0.1-beta/common/template-helpers-debug", "pai/vwx0.0.1-beta/common/new_iscroll-debug", "utility/iscroll/4.2.5/iscroll-debug", "pai/vwx0.0.1-beta/common/img-ready-debug", "pai/vwx0.0.1-beta/base/ua-debug", "pai/vwx0.0.1-beta/common/global_config-debug", "pai/vwx0.0.1-beta/ui/m_alert/view-debug", "pai/vwx0.0.1-beta/common/I_APP-debug" ], function(require, exports, module) {
    var $ = require("$-debug");
    var page_control = require("pai/vwx0.0.1-beta/frame/page_control-debug");
    var View = require("pai/vwx0.0.1-beta/common/view-debug");
    var comment = require("pai/vwx0.0.1-beta/comment/tpl/main-debug.handlebars");
    var utility = require("pai/vwx0.0.1-beta/common/utility-debug");
    var templateHelpers = require("pai/vwx0.0.1-beta/common/template-helpers-debug");
    var Scroll = require("pai/vwx0.0.1-beta/common/new_iscroll-debug");
    var utility = require("pai/vwx0.0.1-beta/common/utility-debug");
    var cameraman_part = require("pai/vwx0.0.1-beta/comment/tpl/cameraman-debug.handlebars");
    var event_part = require("pai/vwx0.0.1-beta/comment/tpl/event-debug.handlebars");
    var model_part = require("pai/vwx0.0.1-beta/comment/tpl/model-debug.handlebars");
    var global_config = require("pai/vwx0.0.1-beta/common/global_config-debug");
    var m_alert = require("pai/vwx0.0.1-beta/ui/m_alert/view-debug");
    var App = require("pai/vwx0.0.1-beta/common/I_APP-debug");
    var comment_view = View.extend({
        attrs: {
            template: comment
        },
        events: {
            swiperight: function() {
                page_control.back();
            },
            "tap [data-role=date-city]": function(ev) {
                var $current_target = $(ev.currentTarget);
                page_control.back();
            },
            "tap [data-role=page-back]": function(ev) {
                page_control.back();
            },
            "tap [data-role=publish]": function(ev) {
                var self = this;
                switch (self.role) {
                  case "cameraman":
                    self.send_data_cameraman();
                    break;

                  case "model":
                    self.send_data_model();
                    break;

                  case "event":
                    self.send_data_event();
                    break;
                }
            },
            "tap [data-role=btn-total]": function(ev) {
                var self = this;
                self.total = self.get_start(ev, self.$("[data-role=total]"));
            },
            "tap [data-role=rp]": function(ev) {
                var self = this;
                self.rp = self.get_start(ev, self.$("[data-role=rp]"));
            },
            "tap [data-role=time_right]": function(ev) {
                var self = this;
                var $cur_btn = $(ev.currentTarget);
                self.$("[data-role=time_right]").removeClass("current");
                if ($cur_btn.hasClass("current")) {
                    $cur_btn.removeClass("current");
                } else {
                    $cur_btn.addClass("current");
                }
                self.time_right = $cur_btn.attr("data");
            },
            "tap [data-role=data-name]": function(ev) {
                var self = this;
                if (self.config) {
                    $(ev.currentTarget).removeClass("ui-switch-off");
                    $(ev.currentTarget).addClass("ui-switch-on");
                    self.config = false;
                } else {
                    $(ev.currentTarget).addClass("ui-switch-off");
                    $(ev.currentTarget).removeClass("ui-switch-on");
                    self.config = true;
                }
            },
            "tap [data-role=bxl]": function(ev) {
                var self = this;
                self.bxl = self.get_start(ev, self.$("[data-role=bxl]"));
            },
            "tap [data-role=zsx]": function(ev) {
                var self = this;
                var $cur_btn = $(ev.currentTarget);
                self.$("[data-role=zsx]").removeClass("current");
                if ($cur_btn.hasClass("current")) {
                    $cur_btn.removeClass("current");
                } else {
                    $cur_btn.addClass("current");
                }
                self.zsx = $cur_btn.attr("data");
            },
            "tap [data-role=event_zjnl]": function(ev) {
                var self = this;
                self.event_zjnl = self.get_start(ev, self.$("[data-role=event_zjnl]"));
            },
            "tap [data-role=event_mtsp]": function(ev) {
                var self = this;
                self.event_mtsp = self.get_start(ev, self.$("[data-role=event_mtsp]"));
            }
        },
        /**
         * 安装事件
         * @private
         */
        _setup_events: function() {
            var self = this;
            self.on("update_list", function(response, xhr) {
                // 区分当前对象
                var _self = this;
                self._setup_scroll();
                self.view_scroll_obj.refresh();
                // 重置渲染队列
                self._render_queue = [];
            }).once("render", self._render_after, self);
            self._setup_scroll();
            self.view_scroll_obj.refresh();
        },
        /**
         * 安装滚动条
         * @private
         */
        _setup_scroll: function() {
            var self = this;
            var view_scroll_obj = Scroll(self.$container, {
                is_hide_dropdown: true
            });
            self.view_scroll_obj = view_scroll_obj;
        },
        _reset: function() {
            var self = this;
        },
        _add_one: function(model) {
            var self = this;
        },
        /**
         * 渲染城市
         * @param response
         * @param options
         * @private
         */
        _render_city: function(response, xhr) {
            var self = this;
        },
        _render_after: function() {
            var self = this;
        },
        /**
         * 视图初始化入口
         */
        setup: function() {
            var self = this;
            self.role = self.attrs.role;
            self.date_id = self.attrs.date_id;
            self.role_id = self.attrs.role_id;
            self.table_id = self.attrs.table_id;
            // 渲染队列
            // 配置交互对象
            self.$container = self.$("[data-role=container]");
            // 滚动容器
            self.$hot_city_container = self.$("[data-role=hot-city-container]");
            self.$role_html = self.$("[data-role=role-html]");
            self.$title = self.$("[data-role=title]");
            self.$publish = self.$("[data-role=publish]");
            self.$data_txt_val = self.$("[data-role=data-txt]");
            self.$data_name = self.$("[data-role=data-name]");
            self.config = true;
            // 安装事件
            self._setup_events();
            self._role_html();
        },
        _role_html: function() {
            var self = this;
            switch (self.role) {
              case "cameraman":
                self.$role_html.html(cameraman_part);
                self.$title.html("摄影师评价");
                break;

              case "model":
                self.$role_html.html(model_part);
                self.$title.html("模特评价");
                break;

              case "event":
                self.$role_html.html(event_part);
                self.$title.html("活动评价");
                break;
            }
        },
        send_data_cameraman: function() {
            var self = this;
            self.total = self.total ? self.total : 0;
            //总体评价
            self.rp_cameraman = self.rp ? self.rp : 0;
            //rp
            self.data_txt_val = $.trim(self.$data_txt_val.val());
            //评价内容 
            if (self.total == 0) {
                m_alert.show("总体评价还没评分哦！", "error", {
                    delay: 1e3
                });
                return;
            }
            if (self.rp_cameraman == 0) {
                m_alert.show("RP还没评分哦！", "error", {
                    delay: 1e3
                });
                return;
            }
            if (!self.time_right) {
                m_alert.show("还没选择时间观念哦！", "error", {
                    delay: 1e3
                });
                return;
            }
            if (self.data_txt_val == "") {
                m_alert.show("请输入内容哦！", "error", {
                    delay: 1e3
                });
                return;
            }
            if (self.config) {
                self.data_name = 0;
            } else {
                self.data_name = 1;
            }
            var data = {
                date_id: self.date_id,
                model_user_id: utility.user.id,
                cameraman_user_id: self.role_id,
                overall_score: self.total,
                rp_score: self.rp_cameraman,
                time_sense: self.time_right,
                comment: self.data_txt_val,
                is_anonymous: self.data_name
            };
            console.log(data);
            utility.ajax_request({
                url: global_config.ajax_url.add_cameraman_comment,
                type: "POST",
                data: data,
                cache: false,
                beforeSend: function(xhr, options) {
                    m_alert.show("请求发送中...", "loading", {
                        delay: 1e3
                    });
                },
                success: function(data) {
                    if (data.result_data.code == 1) {
                        console.log(444);
                        m_alert.show(data.result_data.msg, "right", {
                            delay: 1e3
                        });
                        if (self.from_app) {
                            App.app_back();
                        } else {
                            page_control.navigate_to_page("comment/list/" + self.role + "/" + self.role_id + "/1");
                        }
                    }
                    if (data.result_data.code == 0) {
                        m_alert.show(data.result_data.msg, "error", {
                            delay: 1e3
                        });
                    }
                },
                error: function(xhr, options) {
                    m_alert.show("请求发送失败，请重试", "error", {
                        delay: 1e3
                    });
                },
                complete: function(xhr, status) {}
            });
        },
        send_data_model: function() {
            var self = this;
            self.total = self.total ? self.total : 0;
            //总体评价
            self.bxl_model = self.bxl ? self.bxl : 0;
            //表现力
            self.data_txt_val = $.trim(self.$data_txt_val.val());
            //评价内容 
            if (self.total == 0) {
                m_alert.show("总体评价还没评分哦！", "error", {
                    delay: 1e3
                });
                return;
            }
            if (self.bxl_model == 0) {
                m_alert.show("表现力还没评分哦！", "error", {
                    delay: 1e3
                });
                return;
            }
            if (!self.zsx) {
                m_alert.show("还没选择真实性哦！", "error", {
                    delay: 1e3
                });
                return;
            }
            if (!self.time_right) {
                m_alert.show("还没选择时间观念哦！", "error", {
                    delay: 1e3
                });
                return;
            }
            if (self.data_txt_val == "") {
                m_alert.show("请输入内容哦！", "error", {
                    delay: 1e3
                });
                return;
            }
            if (self.config) {
                self.data_name = 0;
            } else {
                self.data_name = 1;
            }
            var data = {
                date_id: self.date_id,
                cameraman_user_id: utility.user.id,
                model_user_id: self.role_id,
                overall_score: self.total,
                expressive_score: self.bxl_model,
                truth: self.zsx,
                time_sense: self.time_right,
                comment: self.data_txt_val,
                is_anonymous: self.data_name
            };
            utility.ajax_request({
                url: global_config.ajax_url.add_model_comment,
                type: "POST",
                data: data,
                cache: false,
                beforeSend: function(xhr, options) {
                    m_alert.show("请求发送中...", "loading", {
                        delay: 1e3
                    });
                },
                success: function(data) {
                    console.log(data);
                    if (data.result_data.code == 1) {
                        m_alert.show(data.result_data.msg, "right", {
                            delay: 1e3
                        });
                        page_control.navigate_to_page("comment/list/" + self.role + "/" + self.role_id + "/1");
                    }
                    if (data.result_data.code == 0) {
                        m_alert.show(data.result_data.msg, "error", {
                            delay: 1e3
                        });
                    }
                },
                error: function(xhr, options) {
                    m_alert.show("请求发送失败，请重试", "error", {
                        delay: 1e3
                    });
                },
                complete: function(xhr, status) {}
            });
        },
        send_data_event: function() {
            var self = this;
            self.total = self.total ? self.total : 0;
            //总体评价
            self.event_zjnl = self.event_zjnl ? self.event_zjnl : 0;
            //组织能力
            self.event_mtsp = self.event_mtsp ? self.event_mtsp : 0;
            //模特水平
            self.data_txt_val = $.trim(self.$data_txt_val.val());
            //评价内容 
            if (self.total == 0) {
                m_alert.show("总体评价还没评分哦！", "error", {
                    delay: 1e3
                });
                return;
            }
            if (self.event_zjnl == 0) {
                m_alert.show("组织能力还没评分哦", "error", {
                    delay: 1e3
                });
                return;
            }
            if (self.event_mtsp == 0) {
                m_alert.show("模特水平还没评分哦", "error", {
                    delay: 1e3
                });
                return;
            }
            if (self.data_txt_val == "") {
                m_alert.show("请输入内容哦！", "error", {
                    delay: 1e3
                });
                return;
            }
            if (self.config) {
                self.data_name = 0;
            } else {
                self.data_name = 1;
            }
            var data = {
                event_id: self.date_id,
                user_id: utility.user.id,
                overall_score: self.total,
                organize_score: self.event_zjnl,
                model_score: self.event_mtsp,
                comment: self.data_txt_val,
                is_anonymous: self.data_name,
                table_id: self.table_id
            };
            utility.ajax_request({
                url: global_config.ajax_url.add_event_comment,
                type: "POST",
                data: data,
                cache: false,
                beforeSend: function(xhr, options) {
                    m_alert.show("请求发送中...", "loading", {
                        delay: 1e3
                    });
                },
                success: function(data) {
                    console.log(data);
                    if (data.result_data.code == 1) {
                        m_alert.show(data.result_data.msg, "right", {
                            delay: 1e3
                        });
                        page_control.navigate_to_page("comment/list/" + self.role + "/" + self.date_id + "/1");
                    }
                    if (data.result_data.code == 0) {
                        m_alert.show(data.result_data.msg, "error", {
                            delay: 1e3
                        });
                    }
                },
                error: function(xhr, options) {
                    m_alert.show("请求发送失败，请重试", "error", {
                        delay: 1e3
                    });
                },
                complete: function(xhr, status) {}
            });
        },
        get_start: function(ev, id) {
            var self = this;
            var target = $(ev.target);
            for (var i = 0, len = id.length; i < len; i++) {
                if (i <= target.index()) {
                    id.eq(i).removeClass("icon-start-l-g");
                    id.eq(i).addClass("icon-start-l-y");
                } else {
                    id.eq(i).removeClass("icon-start-l-y");
                    id.eq(i).addClass("icon-start-l-g");
                }
            }
            return target.index() + 1;
        },
        render: function() {
            var self = this;
            // 调用渲染函数
            View.prototype.render.apply(self);
            self.trigger("render");
            return self;
        },
        reset_scroll_height: function() {
            var self = this;
            // 换上了原生的滚动条则不需要计算页面高度，所以这里可以删掉设置高度代码
            // modify by hudw
            self.view_scroll_obj.refresh();
        }
    });
    module.exports = comment_view;
});

define("pai/vwx0.0.1-beta/comment/tpl/main-debug.handlebars", [ "utility/handlebars/1.3.0/runtime-debug" ], function(require, exports, module) {
    var Handlebars = require("utility/handlebars/1.3.0/runtime-debug");
    var template = Handlebars.template;
    module.exports = template(function(Handlebars, depth0, helpers, partials, data) {
        this.compilerInfo = [ 4, ">= 1.0.0" ];
        helpers = helpers || {};
        for (var key in Handlebars.helpers) {
            helpers[key] = helpers[key] || Handlebars.helpers[key];
        }
        data = data || {};
        return '<main role="main" class="location"  >\r\n    \r\n\r\n    <header class="nav-header comment-page-header">\r\n                <div class="left-button-wrap" data-role="page-back">\r\n                    <a><i class="icon icon-back"></i></a>\r\n                </div>\r\n\r\n                <h3 class="title" data-role="title">摄影师评价</h3>\r\n                \r\n                <div class="right-button-wrap">\r\n                </div>\r\n    </header>\r\n\r\n    <div data-role="container" class="content-body"  >\r\n        <div>\r\n                <div class="comment-page">\r\n                    <div class="item-wrap">\r\n                        <div class="item">\r\n                            <div class="wrap-c">\r\n                                <div class="lbox">总体评价：</div>\r\n                                <div class="rbox">\r\n                                    <div class="start"  data-role="btn-total"><i data-role="total" class="icon icon-start-l-g"></i><i data-role="total"  class="icon icon-start-l-g"></i><i  data-role="total" class="icon icon-start-l-g"></i><i  data-role="total" class="icon icon-start-l-g"></i><i data-role="total"  class="icon icon-start-l-g"></i></div>\r\n                                </div>\r\n                            </div>         \r\n                        </div>\r\n                    </div>  \r\n\r\n                    <div class="item-wrap part2">\r\n\r\n                       <div class=""  data-role="role-html"></div> \r\n                       \r\n\r\n                        <div class="input-area">\r\n                                <textarea name=" " data-role="data-txt" id=" " class="textarea-class"  placeholder="亲，活动拍摄愉快吗？（140字内）"></textarea>\r\n                        </div>  \r\n                        <div class="no-name">\r\n                            \r\n                            <div class="switch-container">\r\n                                <span class="ui-switch ui-switch-off"  data-role="data-name">  <!-- ui-switch-on 开关 -->\r\n                                    <input checked="checked" class="ui-switch-checkbox" type="checkbox">\r\n                                    <span class="ui-switch-wrapper">\r\n                                        <span class="ui-switch-background"></span>\r\n                                    </span>\r\n                                    <span class="ui-switch-container">\r\n                                        <span class="ui-switch-handle"></span>\r\n                                    </span>\r\n                                </span>\r\n                            </div>\r\n\r\n                            <span class="txt">匿名评价</span>\r\n                        </div>\r\n                    </div> \r\n\r\n                    <div class="btn" data-role="publish">\r\n                        <button class="ui-button ui-button-primary ui-button-size-large ui-button-block">\r\n                            <span class="ui-button-content">发表评价</span>\r\n                        </button>\r\n                    </div>\r\n\r\n\r\n\r\n\r\n                </div>\r\n            </div>\r\n    </div>\r\n\r\n</main>';
    });
});

define("pai/vwx0.0.1-beta/comment/tpl/cameraman-debug.handlebars", [ "utility/handlebars/1.3.0/runtime-debug" ], function(require, exports, module) {
    var Handlebars = require("utility/handlebars/1.3.0/runtime-debug");
    var template = Handlebars.template;
    module.exports = template(function(Handlebars, depth0, helpers, partials, data) {
        this.compilerInfo = [ 4, ">= 1.0.0" ];
        helpers = helpers || {};
        for (var key in Handlebars.helpers) {
            helpers[key] = helpers[key] || Handlebars.helpers[key];
        }
        data = data || {};
        return ' <div class="item">\r\n    <div class="wrap-c">\r\n        <div class="lbox">RP：</div>\r\n        <div class="rbox">\r\n            <div class="start"><i data-role="rp" class="icon icon-start-l-g"></i><i data-role="rp" class="icon icon-start-l-g"></i><i data-role="rp"  class="icon icon-start-l-g"></i><i data-role="rp"  class="icon icon-start-l-g"></i><i class="icon icon-start-l-g" data-role="rp"></i></div>\r\n        </div>\r\n    </div>         \r\n</div>\r\n\r\n<div class="item">\r\n    <div class="wrap-c">\r\n        <div class="lbox">时间观念：</div>\r\n        <div class="rbox">\r\n            <ul class="up-wrap">\r\n                <li class="" data-role="time_right" data="1"><span class="icon-wrap "><i class="icon icon-up-cancel-m"></i> 准时</span></li>\r\n                <li data-role="time_right" data="2"><span class="icon-wrap"><i class="icon icon-up-cancel-m"></i> 不准时</span></li>\r\n            </ul>        \r\n        </div>\r\n    </div>  \r\n         \r\n</div>';
    });
});

define("pai/vwx0.0.1-beta/comment/tpl/event-debug.handlebars", [ "utility/handlebars/1.3.0/runtime-debug" ], function(require, exports, module) {
    var Handlebars = require("utility/handlebars/1.3.0/runtime-debug");
    var template = Handlebars.template;
    module.exports = template(function(Handlebars, depth0, helpers, partials, data) {
        this.compilerInfo = [ 4, ">= 1.0.0" ];
        helpers = helpers || {};
        for (var key in Handlebars.helpers) {
            helpers[key] = helpers[key] || Handlebars.helpers[key];
        }
        data = data || {};
        return ' <div class="item">\r\n    <div class="wrap-c">\r\n        <div class="lbox">组织能力：</div>\r\n        <div class="rbox">\r\n            <div class="start"><i data-role="event_zjnl" class="icon icon-start-l-g"></i><i data-role="event_zjnl" class="icon icon-start-l-g"></i><i data-role="event_zjnl" class="icon icon-start-l-g"></i><i data-role="event_zjnl" class="icon icon-start-l-g"></i><i  data-role="event_zjnl" class="icon icon-start-l-g"></i></div>\r\n        </div>\r\n    </div>         \r\n</div>\r\n\r\n\r\n <div class="item">\r\n    <div class="wrap-c">\r\n        <div class="lbox">模特水平：</div>\r\n        <div class="rbox">\r\n            <div class="start"><i data-role="event_mtsp" class="icon icon-start-l-g"></i><i data-role="event_mtsp" class="icon icon-start-l-g"></i><i data-role="event_mtsp" class="icon icon-start-l-g"></i><i data-role="event_mtsp" class="icon icon-start-l-g"></i><i  data-role="event_mtsp" class="icon icon-start-l-g"></i></div>\r\n        </div>\r\n    </div>         \r\n</div>\r\n\r\n';
    });
});

define("pai/vwx0.0.1-beta/comment/tpl/model-debug.handlebars", [ "utility/handlebars/1.3.0/runtime-debug" ], function(require, exports, module) {
    var Handlebars = require("utility/handlebars/1.3.0/runtime-debug");
    var template = Handlebars.template;
    module.exports = template(function(Handlebars, depth0, helpers, partials, data) {
        this.compilerInfo = [ 4, ">= 1.0.0" ];
        helpers = helpers || {};
        for (var key in Handlebars.helpers) {
            helpers[key] = helpers[key] || Handlebars.helpers[key];
        }
        data = data || {};
        return ' <div class="item">\r\n    <div class="wrap-c">\r\n        <div class="lbox">表现力：</div>\r\n        <div class="rbox">\r\n            <div class="start"><i class="icon icon-start-l-g" data-role="bxl"></i><i data-role="bxl"  class="icon icon-start-l-g"></i><i data-role="bxl" class="icon icon-start-l-g"></i><i data-role="bxl" class="icon icon-start-l-g"></i><i class="icon icon-start-l-g" data-role="bxl"></i></div>\r\n        </div>\r\n    </div>         \r\n</div>\r\n\r\n<div class="item">\r\n    <div class="wrap-c">\r\n        <div class="lbox">真实性</div>\r\n        <div class="rbox">\r\n            <ul class="up-wrap">\r\n                <li class="" data-role="zsx" data="1"><span class="icon-wrap "><i class="icon icon-up-cancel-m"></i> 真实</span></li>\r\n                <li data-role="zsx" data="2"><span class="icon-wrap"><i class="icon icon-up-cancel-m"></i> 不真实</span></li>\r\n            </ul>        \r\n        </div>\r\n    </div>  \r\n         \r\n</div>\r\n\r\n\r\n<div class="item">\r\n    <div class="wrap-c">\r\n        <div class="lbox">时间观念：</div>\r\n        <div class="rbox">\r\n            <ul class="up-wrap">\r\n                <li class="" data-role="time_right" data="1"><span class="icon-wrap "><i class="icon icon-up-cancel-m"></i> 准时</span></li>\r\n                <li data-role="time_right" data="2"><span class="icon-wrap"><i class="icon icon-up-cancel-m"></i> 不准时</span></li>\r\n            </ul>        \r\n        </div>\r\n    </div>  \r\n         \r\n</div>';
    });
});

/**
 * 首页 - 留言列表
 * 汤圆 
 * @param  {[type]} require 
 * @param  {[type]} exports 
 * @param  {[type]} module  
 * @return {[type]}         
 */
define("pai/vwx0.0.1-beta/comment/list/index-debug", [ "$-debug", "pai/vwx0.0.1-beta/frame/page_control-debug", "utility/backbone/1.1.2/backbone-debug", "pai/vwx0.0.1-beta/frame/ua-debug", "pai/vwx0.0.1-beta/frame/page-debug", "utility/zepto/modules/data/1.1.4/data-debug", "utility/hammer/plugins/jquery.hammer/1.1.3/jquery.hammer-debug", "utility/underscore/1.6.0/underscore-debug", "pai/vwx0.0.1-beta/common/utility-debug", "pai/vwx0.0.1-beta/common/cross_domain_storage-debug", "matcha/cookie/1.0.0/cookie-debug", "pai/vwx0.0.1-beta/comment/list/view-debug", "pai/vwx0.0.1-beta/common/view-debug", "utility/handlebars/1.3.0/runtime-debug", "pai/vwx0.0.1-beta/common/template-helpers-debug", "pai/vwx0.0.1-beta/common/new_iscroll-debug", "utility/iscroll/4.2.5/iscroll-debug", "pai/vwx0.0.1-beta/common/img-ready-debug", "pai/vwx0.0.1-beta/base/ua-debug", "pai/vwx0.0.1-beta/widget/load_more/view-debug", "pai/vwx0.0.1-beta/ui/m_alert/view-debug", "pai/vwx0.0.1-beta/widget/abnormal/view-debug", "pai/vwx0.0.1-beta/common/I_APP-debug", "pai/vwx0.0.1-beta/common/global_config-debug", "pai/vwx0.0.1-beta/comment/list/collection-debug", "pai/vwx0.0.1-beta/comment/list/model-debug", "pai/vwx0.0.1-beta/common/collection-debug" ], function(require, exports, module) {
    var $ = require("$-debug");
    var page_control = require("pai/vwx0.0.1-beta/frame/page_control-debug");
    var utility = require("pai/vwx0.0.1-beta/common/utility-debug");
    var list_view = require("pai/vwx0.0.1-beta/comment/list/view-debug");
    var list_collection = require("pai/vwx0.0.1-beta/comment/list/collection-debug");
    page_control.add_page([ function() {
        return {
            title: "用户评价",
            route: {
                "comment/list/:role/:id(/:is_can_back)": "comment/list"
            },
            dom_not_cache: true,
            ignore_exist: true,
            transition_type: "slide",
            initialize: function() {},
            page_init: function(page_view, route_params_arr, route_params_obj) {
                var self = this;
                var role = route_params_arr[0];
                var id = route_params_arr[1];
                var is_can_back = utility.int(route_params_arr[2]);
                if (is_can_back) {
                    // 设置该状态下Android页面返回禁止
                    utility.set_no_page_back(utility.getHash());
                }
                var from_app = utility.get_url_params(window.location.search, "from_app");
                var collection = new list_collection({
                    role: role,
                    id: id
                });
                var list_view_obj = new list_view({
                    from_app: utility.int(from_app),
                    is_can_back: is_can_back,
                    collection: collection,
                    parentNode: self.$el
                }).render();
            },
            page_before_show: function() {},
            page_show: function() {},
            page_before_hide: function() {}
        };
    } ]);
});

/**
 * 首页 - 留言列表
 * 汤圆
 */
define("pai/vwx0.0.1-beta/comment/list/view-debug", [ "$-debug", "pai/vwx0.0.1-beta/frame/page_control-debug", "utility/backbone/1.1.2/backbone-debug", "pai/vwx0.0.1-beta/frame/ua-debug", "pai/vwx0.0.1-beta/frame/page-debug", "utility/zepto/modules/data/1.1.4/data-debug", "utility/hammer/plugins/jquery.hammer/1.1.3/jquery.hammer-debug", "utility/underscore/1.6.0/underscore-debug", "pai/vwx0.0.1-beta/common/view-debug", "utility/handlebars/1.3.0/runtime-debug", "pai/vwx0.0.1-beta/common/utility-debug", "pai/vwx0.0.1-beta/common/cross_domain_storage-debug", "matcha/cookie/1.0.0/cookie-debug", "pai/vwx0.0.1-beta/common/template-helpers-debug", "pai/vwx0.0.1-beta/common/new_iscroll-debug", "utility/iscroll/4.2.5/iscroll-debug", "pai/vwx0.0.1-beta/common/img-ready-debug", "pai/vwx0.0.1-beta/base/ua-debug", "pai/vwx0.0.1-beta/widget/load_more/view-debug", "pai/vwx0.0.1-beta/ui/m_alert/view-debug", "pai/vwx0.0.1-beta/widget/abnormal/view-debug", "pai/vwx0.0.1-beta/common/I_APP-debug", "pai/vwx0.0.1-beta/common/global_config-debug" ], function(require, exports, module) {
    var $ = require("$-debug");
    var page_control = require("pai/vwx0.0.1-beta/frame/page_control-debug");
    var View = require("pai/vwx0.0.1-beta/common/view-debug");
    var list = require("pai/vwx0.0.1-beta/comment/list/tpl/main-debug.handlebars");
    var utility = require("pai/vwx0.0.1-beta/common/utility-debug");
    var templateHelpers = require("pai/vwx0.0.1-beta/common/template-helpers-debug");
    var Scroll = require("pai/vwx0.0.1-beta/common/new_iscroll-debug");
    var itemTpl = require("pai/vwx0.0.1-beta/comment/list/tpl/item-debug.handlebars");
    var load_more = require("pai/vwx0.0.1-beta/widget/load_more/view-debug");
    var m_alert = require("pai/vwx0.0.1-beta/ui/m_alert/view-debug");
    var abnormal = require("pai/vwx0.0.1-beta/widget/abnormal/view-debug");
    var App = require("pai/vwx0.0.1-beta/common/I_APP-debug");
    var list_view = View.extend({
        attrs: {
            template: list
        },
        events: {
            swiperight: function() {
                var self = this;
                if (self.num == 0) {
                    page_control.back();
                }
            },
            "tap [data-role=page-back]": function(ev) {
                // page_control.navigate_to_page("mine");
                var self = this;
                self.go_back(self.num);
            },
            "tap [data-role=load-more-container-v2]": function(ev) {
                var self = this;
                self.get_more();
            }
        },
        /**
         * 安装事件
         * @private
         */
        _setup_events: function() {
            var self = this;
            self.collection.on("reset", self._reset, self).on("add", self._add_one, self).on("before:fetch", function(response, xhr) {
                self.$load_more_container_v2.find("i").removeClass("fn-hide");
                self.$load_txt.html("加载中...");
                self.$load_more_container_v2.find(".icon-spinner").addClass("ui-loading-animate");
            }).on("success:fetch", function(response, xhr) {
                self.$load_more_container_v2.find(".icon-spinner").removeClass("ui-loading-animate");
                self._render_comment(response, xhr);
                self.$load_txt.html("点击加载更多...");
                self.$load_more_container_v2.find("i").addClass("fn-hide");
            }).on("complete:fetch", function(xhr, status) {});
            self.on("update_list", function(response, xhr) {
                // 区分当前对象
                var _self = this;
                self._setup_scroll();
                self.view_scroll_obj.refresh();
                // 重置渲染队列
                self._render_queue = [];
            }).once("render", self._render_after, self);
            self._setup_scroll();
            self.view_scroll_obj.refresh();
        },
        /**
         * 根据来路判断返回
         * @private
         */
        go_back: function(num) {
            var self = this;
            switch (num) {
              case 0:
                page_control.back();
                break;

              case 1:
                console.log(self.from_app);
                if (self.from_app) {
                    App.app_back();
                } else {
                    page_control.navigate_to_page("mine");
                }
                break;
            }
        },
        /**
         * 安装滚动条
         * @private
         */
        _setup_scroll: function() {
            var self = this;
            var view_scroll_obj = Scroll(self.$container, {});
            self.view_scroll_obj = view_scroll_obj;
        },
        _reset: function() {
            var self = this;
            self.collection.length && self.collection.each(self._add_one, self);
        },
        _add_one: function(model) {
            var self = this;
            self._render_queue.push(model.toJSON());
            return self;
        },
        /**
         * 安装加载更多按钮
         * @private
         */
        // _setup_load_more: function()
        // {
        //     var self = this;
        //     self.load_more_btn = new load_more(
        //     {
        //         parentNode: self.$load_more_container
        //     }).render();
        // },
        // _scroll_check: function()
        // {
        //     var self = this;
        //     if (!self.$load_more_container || !self._visible || !self.collection.has_next_page)
        //     {
        //         return;
        //     }
        //     var pos = self.$load_more_container.position();
        //     if (pos.top < self._viewportHeight)
        //     {
        //         self.get_more();
        //     }
        // },
        _render_comment: function(response, xhr) {
            var self = this;
            var render_queue = self._render_queue;
            // 没有数据的时候，直接return
            if (render_queue.length == 0) {
                self.abnormal_view = new abnormal({
                    templateModel: {
                        content_height: utility.get_view_port_height("all") - 45
                    },
                    parentNode: self.$item_wrap
                }).render();
                //m_alert.show('暂时没有数据！','error',{delay:2000});
                //self.$container.addClass('fn-hide');
                self.$load_more_container_v2.hide();
                return;
            }
            // 判断是否有下一页
            if (self.collection.has_next_page) {
                self.$load_more_container_v2.show();
            } else {
                self.$load_more_container_v2.hide();
            }
            var htmlStr = itemTpl({
                datas: render_queue
            });
            // 判断调用重新加载还是插入方法
            var method = xhr.reset ? "html" : "append";
            self.$item_wrap[method](htmlStr);
            //self.$item_wrap[method](htmlStr);
            //self.trigger('update_list',response,xhr);
            //self.$item_wrap.html(htmlStr);
            //self.trigger('updateList', response, xhrOptions);
            self._render_queue = [];
            self.view_scroll_obj.refresh();
        },
        _render_after: function() {
            var self = this;
            self.collection.get_list(1);
        },
        /**
         * 加载更多
         */
        get_more: function() {
            var self = this;
            var current_page = self.collection.get_current_page();
            self.collection.get_list(++current_page);
        },
        /**
         * 视图初始化入口
         */
        setup: function() {
            var self = this;
            // 渲染队列
            self._render_queue = [];
            // 配置交互对象
            self.$container = self.$("[data-role=container]");
            // 滚动容器
            self.$hot_city_container = self.$("[data-role=hot-city-container]");
            self.$item_wrap = self.$("[data-role=item-data]");
            self.$load_more_container = self.$("[data-role=load-more-container]");
            // 加载更多容器
            self.$load_more_container_v2 = self.$("[data-role=load-more-container-v2]");
            // 加载更多容器
            self.$load_txt = self.$("[data-role=load-txt]");
            self.from_app = self.get("from_app");
            self.num = self.attrs.is_can_back;
            // console.log(self.num);
            // 安装事件
            self._setup_events();
        },
        /**
         * 重新加载数据
         */
        refresh: function() {
            var self = this;
            self.collection.get_list(1);
        },
        render: function() {
            var self = this;
            // 调用渲染函数
            View.prototype.render.apply(self);
            self.trigger("render");
            return self;
        }
    });
    module.exports = list_view;
});

define("pai/vwx0.0.1-beta/comment/list/tpl/main-debug.handlebars", [ "utility/handlebars/1.3.0/runtime-debug" ], function(require, exports, module) {
    var Handlebars = require("utility/handlebars/1.3.0/runtime-debug");
    var template = Handlebars.template;
    module.exports = template(function(Handlebars, depth0, helpers, partials, data) {
        this.compilerInfo = [ 4, ">= 1.0.0" ];
        helpers = helpers || {};
        for (var key in Handlebars.helpers) {
            helpers[key] = helpers[key] || Handlebars.helpers[key];
        }
        data = data || {};
        return '<main role="main" class="">\r\n\r\n    <header class="nav-header comment-page-header">\r\n        <div class="left-button-wrap" data-role="page-back">\r\n            <a ><i class="icon icon-back"></i></a>\r\n        </div>\r\n\r\n        <h3 class="title">用户评价</h3>\r\n        \r\n        <div class="right-button-wrap">\r\n        </div>\r\n    </header>\r\n\r\n    <div data-role="container" class="content-body secondary"   >\r\n        <div>\r\n            <div class="comment-list-page">\r\n                    <div class="item-wrap" data-role="item-data">\r\n                    </div>\r\n\r\n                   <!-- <div class="ui-btn-refresh"  data-role="load-more-container"  >\r\n                        <i class="icon icon-spinner "></i> 加载更多... \r\n                        ui-loading-animate  刷新中加css名\r\n                    </div> -->\r\n\r\n                    <div class="ui-btn-refresh  " data-role="load-more-container-v2">\r\n                        <i class="icon icon-spinner  fn-hide"></i> <span class="load-txt" data-role="load-txt">点击加载更多...</span>  <!-- ui-loading-animate -->\r\n                    </div>\r\n\r\n                    <!-- <div class="space-bottom"></div> -->\r\n\r\n                </div>\r\n        </div>\r\n    </div>\r\n\r\n</main>';
    });
});

define("pai/vwx0.0.1-beta/comment/list/tpl/item-debug.handlebars", [ "utility/handlebars/1.3.0/runtime-debug" ], function(require, exports, module) {
    var Handlebars = require("utility/handlebars/1.3.0/runtime-debug");
    var template = Handlebars.template;
    module.exports = template(function(Handlebars, depth0, helpers, partials, data) {
        this.compilerInfo = [ 4, ">= 1.0.0" ];
        helpers = helpers || {};
        for (var key in Handlebars.helpers) {
            helpers[key] = helpers[key] || Handlebars.helpers[key];
        }
        data = data || {};
        var buffer = "", stack1, self = this, functionType = "function", escapeExpression = this.escapeExpression;
        function program1(depth0, data) {
            var buffer = "", stack1, helper;
            buffer += ' \r\n        <div class="item">\r\n            <div class="box1">\r\n                <div class="lbox fldi">';
            if (helper = helpers.nickname) {
                stack1 = helper.call(depth0, {
                    hash: {},
                    data: data
                });
            } else {
                helper = depth0 && depth0.nickname;
                stack1 = typeof helper === functionType ? helper.call(depth0, {
                    hash: {},
                    data: data
                }) : helper;
            }
            buffer += escapeExpression(stack1) + '</div>\r\n                <div class="rbox fldi">\r\n                    ';
            stack1 = helpers.each.call(depth0, depth0 && depth0.stars_list, {
                hash: {},
                inverse: self.noop,
                fn: self.program(2, program2, data),
                data: data
            });
            if (stack1 || stack1 === 0) {
                buffer += stack1;
            }
            buffer += '\r\n                </div>\r\n            </div>\r\n            <div class="box2">\r\n                ';
            if (helper = helpers.comment) {
                stack1 = helper.call(depth0, {
                    hash: {},
                    data: data
                });
            } else {
                helper = depth0 && depth0.comment;
                stack1 = typeof helper === functionType ? helper.call(depth0, {
                    hash: {},
                    data: data
                }) : helper;
            }
            if (stack1 || stack1 === 0) {
                buffer += stack1;
            }
            buffer += '\r\n            </div>\r\n            <p class="time">';
            if (helper = helpers.add_time) {
                stack1 = helper.call(depth0, {
                    hash: {},
                    data: data
                });
            } else {
                helper = depth0 && depth0.add_time;
                stack1 = typeof helper === functionType ? helper.call(depth0, {
                    hash: {},
                    data: data
                }) : helper;
            }
            buffer += escapeExpression(stack1) + "</p>\r\n        </div>\r\n    ";
            return buffer;
        }
        function program2(depth0, data) {
            var buffer = "", stack1;
            buffer += " \r\n                        ";
            stack1 = helpers["if"].call(depth0, depth0 && depth0.is_red, {
                hash: {},
                inverse: self.program(5, program5, data),
                fn: self.program(3, program3, data),
                data: data
            });
            if (stack1 || stack1 === 0) {
                buffer += stack1;
            }
            buffer += "\r\n                    ";
            return buffer;
        }
        function program3(depth0, data) {
            return '\r\n                            <i class="icon icon-stat-s-y"></i>\r\n                        ';
        }
        function program5(depth0, data) {
            return '\r\n                            <i class="icon icon-stat-s-g"></i>\r\n                        ';
        }
        buffer += "\r\n    ";
        stack1 = helpers.each.call(depth0, depth0 && depth0.datas, {
            hash: {},
            inverse: self.noop,
            fn: self.program(1, program1, data),
            data: data
        });
        if (stack1 || stack1 === 0) {
            buffer += stack1;
        }
        buffer += "\r\n\r\n\r\n\r\n      ";
        return buffer;
    });
});

define("pai/vwx0.0.1-beta/comment/list/collection-debug", [ "pai/vwx0.0.1-beta/common/global_config-debug", "pai/vwx0.0.1-beta/comment/list/model-debug", "utility/backbone/1.1.2/backbone-debug", "pai/vwx0.0.1-beta/common/collection-debug", "$-debug", "pai/vwx0.0.1-beta/ui/m_alert/view-debug", "pai/vwx0.0.1-beta/common/view-debug", "utility/handlebars/1.3.0/runtime-debug", "pai/vwx0.0.1-beta/common/utility-debug", "pai/vwx0.0.1-beta/common/cross_domain_storage-debug", "matcha/cookie/1.0.0/cookie-debug", "utility/underscore/1.6.0/underscore-debug", "pai/vwx0.0.1-beta/frame/ua-debug" ], function(require, exports, module) {
    var global_config = require("pai/vwx0.0.1-beta/common/global_config-debug");
    var model = require("pai/vwx0.0.1-beta/comment/list/model-debug");
    var collection = require("pai/vwx0.0.1-beta/common/collection-debug");
    var m_alert = require("pai/vwx0.0.1-beta/ui/m_alert/view-debug");
    module.exports = collection.extend({
        model: model,
        url: global_config.ajax_url.get_comment,
        has_next_page: false,
        /**
         * 事件安装
         * @private
         */
        _setup_events: function() {
            var self = this;
            self.on("before:fetch", function(xhr, options) {
                if (options.reset) {
                    // 设置页数
                    self.set_current_page(1);
                }
                self._fetch_xhr = xhr;
                self.set_state("sending");
            }).on("success:fetch", function(response, options) {
                /// 更新当前页数
                if (!response.code && !options.reset) {
                    var current_page = self.get_current_page();
                    self.set_current_page(++current_page);
                }
                self.has_next_page = response.result_data.has_next_page;
            }).on("complete:fetch", function(xhr, status) {
                self.set_state("complete");
                delete self._fetch_xhr;
            });
        },
        parse: function(response) {
            if (response.result_data) {
                return response.result_data.list;
            }
            return response;
        },
        initialize: function(options) {
            var self = this;
            self.id = options.id;
            self._setup_events();
            self.role = options.role;
        },
        get_attrs: function() {
            var self = this;
            return self.attrs;
        },
        set_attrs: function(data) {
            var self = this;
            self.attrs = $.extend({}, self.attrs, data);
        },
        /**
         * 获取状态
         */
        get_state: function() {
            var self = this;
            return self._state || false;
        },
        /**
         * 设置状态
         * @param state
         */
        set_state: function(state) {
            var self = this;
            self._state = state;
        },
        /**
         * 获取当前页数
         */
        get_current_page: function() {
            var self = this;
            return this._curren_page || 1;
        },
        /**
         * 设置当前页数
         * @param page
         */
        set_current_page: function(page) {
            var self = this;
            this._curren_page = page;
        },
        /**
         * 获取请求参数
         */
        get_rqs_params: function() {
            var self = this;
            return self._rqs_params || {};
        },
        /**
         * 设置请求参数
         * @param data
         */
        get_list: function(page) {
            var self = this;
            if (self.get_state() == "sending") {
                // 发送中状态不做重复请求
                return;
            }
            if (page < 1) {
                // 非法页数
                throw new Error("page is invalid");
            }
            self.fetch({
                url: self.url,
                remove: page == 1,
                reset: page == 1,
                data: {
                    page: page,
                    type: self.role,
                    type_id: self.id
                },
                cache: false,
                beforeSend: function(xhr, options) {
                    m_alert.show("请求发送中...", "loading", {
                        delay: 1e3
                    });
                    self.trigger("before:fetch", xhr, options);
                },
                success: function(collection, response, options) {
                    self.trigger("success:fetch", response, options);
                },
                error: function(collection, response, options) {
                    m_alert.show("请求发送失败，请重试", "error", {
                        delay: 1e3
                    });
                    self.trigger("error:fetch", response, options);
                },
                complete: function(xhr, status) {
                    self.trigger("complete:fetch", xhr, status);
                }
            });
        }
    });
});

/**
 * 首页 - 留言列表
 * 汤圆 
 */
define("pai/vwx0.0.1-beta/comment/list/model-debug", [ "pai/vwx0.0.1-beta/common/global_config-debug", "utility/backbone/1.1.2/backbone-debug" ], function(require, exports, module) {
    var global_config = require("pai/vwx0.0.1-beta/common/global_config-debug");
    var Backbone = require("utility/backbone/1.1.2/backbone-debug");
    module.exports = Backbone.Model.extend({
        idAttribute: "name",
        "default": {
            name: "",
            start: "",
            content: "",
            time: ""
        },
        /**
         * 安装事件
         * @private
         */
        _setup_events: function() {},
        parse: function(response) {
            if (response.result_data) {
                return response.result_data;
            }
            return response;
        },
        initialize: function() {
            var self = this;
            self._setup_events();
        }
    });
});

/**
 * Created by nolest on 2014/9/28.
 *
 * 积分榜 次数榜
 */
define("pai/vwx0.0.1-beta/rank/index-debug", [ "$-debug", "pai/vwx0.0.1-beta/frame/page_control-debug", "utility/backbone/1.1.2/backbone-debug", "pai/vwx0.0.1-beta/frame/ua-debug", "pai/vwx0.0.1-beta/frame/page-debug", "utility/zepto/modules/data/1.1.4/data-debug", "utility/hammer/plugins/jquery.hammer/1.1.3/jquery.hammer-debug", "utility/underscore/1.6.0/underscore-debug", "pai/vwx0.0.1-beta/rank/view-debug", "pai/vwx0.0.1-beta/common/view-debug", "utility/handlebars/1.3.0/runtime-debug", "pai/vwx0.0.1-beta/common/utility-debug", "pai/vwx0.0.1-beta/common/cross_domain_storage-debug", "matcha/cookie/1.0.0/cookie-debug", "pai/vwx0.0.1-beta/common/new_iscroll-debug", "utility/iscroll/4.2.5/iscroll-debug", "pai/vwx0.0.1-beta/common/img-ready-debug", "pai/vwx0.0.1-beta/base/ua-debug", "pai/vwx0.0.1-beta/ui/m_alert/view-debug", "pai/vwx0.0.1-beta/common/global_config-debug", "pai/vwx0.0.1-beta/rank/model-debug" ], function(require, exports, module) {
    var $ = require("$-debug");
    var page_control = require("pai/vwx0.0.1-beta/frame/page_control-debug");
    var rank_view = require("pai/vwx0.0.1-beta/rank/view-debug");
    var global_config = require("pai/vwx0.0.1-beta/common/global_config-debug");
    var utility = require("pai/vwx0.0.1-beta/common/utility-debug");
    var rank_model = require("pai/vwx0.0.1-beta/rank/model-debug");
    var m_alert = require("pai/vwx0.0.1-beta/ui/m_alert/view-debug");
    page_control.add_page([ function() {
        return {
            title: "模特榜",
            route: {
                "rank/:type": "rank"
            },
            dom_not_cache: true,
            ignore_exist: true,
            transition_type: "slide",
            initialize: function() {},
            page_init: function(page_view, route_params_arr, route_params_obj) {
                var self = this;
                var is_date = false;
                var is_score = false;
                var url;
                if (route_params_arr[0] == "date") {
                    is_date = true;
                    url = global_config.ajax_url.get_model_date_rank_list;
                } else if (route_params_arr[0] == "score") {
                    is_score = true;
                    url = global_config.ajax_url.get_model_score_rank_list;
                }
                var templateModel = {
                    is_date: is_date,
                    is_score: is_score
                };
                var model = new rank_model({
                    url: url
                });
                var view = new rank_view({
                    model: model,
                    parentNode: self.$el,
                    templateModel: templateModel
                }).render();
            },
            page_before_show: function() {},
            page_show: function() {},
            page_before_hide: function() {}
        };
    } ]);
});

/**
 * Created by nolest on 2014/9/28.
 *
 * 模特榜view
 */
define("pai/vwx0.0.1-beta/rank/view-debug", [ "$-debug", "pai/vwx0.0.1-beta/frame/page_control-debug", "utility/backbone/1.1.2/backbone-debug", "pai/vwx0.0.1-beta/frame/ua-debug", "pai/vwx0.0.1-beta/frame/page-debug", "utility/zepto/modules/data/1.1.4/data-debug", "utility/hammer/plugins/jquery.hammer/1.1.3/jquery.hammer-debug", "utility/underscore/1.6.0/underscore-debug", "pai/vwx0.0.1-beta/common/view-debug", "utility/handlebars/1.3.0/runtime-debug", "pai/vwx0.0.1-beta/common/utility-debug", "pai/vwx0.0.1-beta/common/cross_domain_storage-debug", "matcha/cookie/1.0.0/cookie-debug", "pai/vwx0.0.1-beta/common/new_iscroll-debug", "utility/iscroll/4.2.5/iscroll-debug", "pai/vwx0.0.1-beta/common/img-ready-debug", "pai/vwx0.0.1-beta/base/ua-debug", "pai/vwx0.0.1-beta/ui/m_alert/view-debug" ], function(require, exports, module) {
    var $ = require("$-debug");
    var page_control = require("pai/vwx0.0.1-beta/frame/page_control-debug");
    var View = require("pai/vwx0.0.1-beta/common/view-debug");
    var main_tpl = require("pai/vwx0.0.1-beta/rank/tpl/main-debug.handlebars");
    var one_two_three_tpl = require("pai/vwx0.0.1-beta/rank/tpl/one-two-three-debug.handlebars");
    var more_tpl = require("pai/vwx0.0.1-beta/rank/tpl/more-debug.handlebars");
    var utility = require("pai/vwx0.0.1-beta/common/utility-debug");
    var Scroll = require("pai/vwx0.0.1-beta/common/new_iscroll-debug");
    var m_alert = require("pai/vwx0.0.1-beta/ui/m_alert/view-debug");
    var rank_view = View.extend({
        attrs: {
            template: main_tpl
        },
        events: {
            swiperight: function() {
                page_control.back();
            },
            "tap [data-role=page-back]": function(ev) {
                page_control.back();
            },
            'tap [data-role="load_more"]': function() {
                var self = this;
                self.get_more();
            },
            'tap [data-role="li-tap"]': function(ev) {
                var self = this;
                page_control.navigate_to_page("model_card/" + $(ev.currentTarget).attr("data-id"));
            }
        },
        /**
         * 安装事件
         * @private
         */
        _setup_events: function() {
            var self = this;
            self.model.on("before:date:fetch", function() {
                m_alert.show("加载中...", "loading");
            }).on("success:date:fetch", function(response) {
                m_alert.hide({
                    delay: -1
                });
                self.render_info(response);
            }).on("error:date:fetch", function() {
                m_alert.show("获取信息失败", "error", {
                    delay: 1e3
                });
            }).on("complete:date:fetch", function() {});
            self.model.on("before:rank:fetch", function() {
                m_alert.show("加载中...", "loading");
            }).on("success:rank:fetch", function(response) {
                m_alert.hide({
                    delay: -1
                });
            }).on("error:rank:fetch", function() {
                m_alert.show("获取信息失败", "error", {
                    delay: 1e3
                });
            }).on("complete:rank:fetch", function() {});
            self.once("render", function() {
                if (!self.view_scroll_obj) {
                    //主要滚动条
                    self._setup_scroll();
                    self.view_scroll_obj.refresh();
                    return;
                }
                self.view_scroll_obj.refresh();
            });
        },
        render_info: function(response) {
            var self = this;
            self.page_count++;
            if (response.result_data.has_next_page) {
                self.more_btn.removeClass("fn-hide");
            }
            if (!response.result_data.has_next_page) {
                self.more_btn.addClass("fn-hide");
            }
            var length = response.result_data.list.length;
            var list = response.result_data.list;
            //是否首次渲染
            if (self.is_first_load) {
                var list_insert = list.slice(0, 3);
                var list_render = list.slice(3, length);
                //渲染前三个
                $.each(list_insert, function(i, obj) {
                    obj.is_date = self.get("templateModel").is_date;
                    obj.is_score = self.get("templateModel").is_score;
                    obj.index_count = i + 1;
                    var one_html = one_two_three_tpl({
                        data: obj
                    });
                    self.$one_two_three.append(one_html);
                });
                //渲染更多
                $.each(list_render, function(i, obj) {
                    obj.is_date = self.get("templateModel").is_date;
                    obj.is_score = self.get("templateModel").is_score;
                    obj.index_count = self.last_index++;
                    var more_html = more_tpl({
                        data: obj
                    });
                    self.$more.append(more_html);
                });
                self.is_first_load = false;
            } else {
                //渲染更多
                $.each(list, function(i, obj) {
                    obj.is_date = self.get("templateModel").is_date;
                    obj.is_score = self.get("templateModel").is_score;
                    obj.index_count = self.last_index++;
                    var more_html = more_tpl({
                        data: obj
                    });
                    self.$more.append(more_html);
                });
            }
            self.view_scroll_obj.refresh();
        },
        /**
         * 安装滚动条
         * @private
         */
        _setup_scroll: function() {
            var self = this;
            var view_scroll_obj = Scroll(self.$container);
            self.view_scroll_obj = view_scroll_obj;
        },
        /**
         * 视图初始化入口
         */
        setup: function() {
            var self = this;
            //安装事件
            self._setup_events();
            //滚动容器
            self.$container = self.$('[data-role="data-role=container"]');
            //前三
            self.$one_two_three = self.$('[data-role="one-two-three-list"]');
            //更多
            self.$more = self.$('[data-role="more-list"]');
            //更多按钮
            self.more_btn = self.$('[data-role="load_more"]');
            //首次加载标记
            self.is_first_load = true;
            //初始化更多序号
            self.last_index = 4;
            self.page_count = 1;
            self.model.get_rank({
                page: self.page_count
            });
        },
        render: function() {
            var self = this;
            // 调用渲染函数
            View.prototype.render.apply(self);
            self.trigger("render");
            return self;
        },
        get_more: function() {
            var self = this;
            self.model.get_rank(self.page_count);
        },
        /* 刷新方法
         *
         */
        refresh: function() {
            var self = this;
            self.$one_two_three.html("");
            self.$more.html("");
            self.last_index = 4;
            self.page_count = 1;
            self.model.get_rank({
                page: self.page_count
            });
            self.view_scroll_obj.scrollTo(0, 0);
        }
    });
    module.exports = rank_view;
});

define("pai/vwx0.0.1-beta/rank/tpl/main-debug.handlebars", [ "utility/handlebars/1.3.0/runtime-debug" ], function(require, exports, module) {
    var Handlebars = require("utility/handlebars/1.3.0/runtime-debug");
    var template = Handlebars.template;
    module.exports = template(function(Handlebars, depth0, helpers, partials, data) {
        this.compilerInfo = [ 4, ">= 1.0.0" ];
        helpers = helpers || {};
        for (var key in Handlebars.helpers) {
            helpers[key] = helpers[key] || Handlebars.helpers[key];
        }
        data = data || {};
        var buffer = "", stack1, self = this;
        function program1(depth0, data) {
            return '\r\n            <h3 class="title">模特约拍排行</h3>\r\n        ';
        }
        function program3(depth0, data) {
            return '\r\n            <h3 class="title">魅力模特排行</h3>\r\n        ';
        }
        buffer += '<main role="main" class="">\r\n    <header class="nav-header comment-page-header">\r\n        <div class="left-button-wrap" data-role="page-back">\r\n            <a><i class="icon icon-back"></i></a>\r\n        </div>\r\n        ';
        stack1 = helpers["if"].call(depth0, depth0 && depth0.is_date, {
            hash: {},
            inverse: self.noop,
            fn: self.program(1, program1, data),
            data: data
        });
        if (stack1 || stack1 === 0) {
            buffer += stack1;
        }
        buffer += "\r\n        ";
        stack1 = helpers["if"].call(depth0, depth0 && depth0.is_score, {
            hash: {},
            inverse: self.noop,
            fn: self.program(3, program3, data),
            data: data
        });
        if (stack1 || stack1 === 0) {
            buffer += stack1;
        }
        buffer += '\r\n        <div class="right-button-wrap">\r\n        </div>\r\n    </header>\r\n    <div data-role="data-role=container">\r\n        <div class="warp-box">\r\n        <div class="rank">\r\n            <div class="part-three">\r\n                <ul class="list" data-role="one-two-three-list">\r\n\r\n                </ul>\r\n            </div>\r\n            <div class="part-other">\r\n                <ul class="list clearfix" data-role="more-list">\r\n\r\n                </ul>\r\n            </div>\r\n            <div class="more fn-hide" data-role="load_more">查看更多</div>\r\n        </div>\r\n        </div>\r\n    </div>\r\n</main>';
        return buffer;
    });
});

define("pai/vwx0.0.1-beta/rank/tpl/one-two-three-debug.handlebars", [ "utility/handlebars/1.3.0/runtime-debug" ], function(require, exports, module) {
    var Handlebars = require("utility/handlebars/1.3.0/runtime-debug");
    var template = Handlebars.template;
    module.exports = template(function(Handlebars, depth0, helpers, partials, data) {
        this.compilerInfo = [ 4, ">= 1.0.0" ];
        helpers = helpers || {};
        for (var key in Handlebars.helpers) {
            helpers[key] = helpers[key] || Handlebars.helpers[key];
        }
        data = data || {};
        var buffer = "", stack1, functionType = "function", escapeExpression = this.escapeExpression, self = this;
        function program1(depth0, data) {
            var buffer = "", stack1;
            buffer += '\r\n<li data-role="li-tap" data-id="' + escapeExpression((stack1 = (stack1 = depth0 && depth0.data, 
            stack1 == null || stack1 === false ? stack1 : stack1.user_id), typeof stack1 === functionType ? stack1.apply(depth0) : stack1)) + '">\r\n    <div class="avatar-size-top-mod avatar-size-top-mod-' + escapeExpression((stack1 = (stack1 = depth0 && depth0.data, 
            stack1 == null || stack1 === false ? stack1 : stack1.index_count), typeof stack1 === functionType ? stack1.apply(depth0) : stack1)) + '">\r\n        <span class="icon avatar-size-area"></span>\r\n        <i class="avatar-size-img" style="background-image: url(' + escapeExpression((stack1 = (stack1 = depth0 && depth0.data, 
            stack1 == null || stack1 === false ? stack1 : stack1.user_icon), typeof stack1 === functionType ? stack1.apply(depth0) : stack1)) + '); background-size:cover"></i>\r\n    </div>\r\n    <h3>' + escapeExpression((stack1 = (stack1 = depth0 && depth0.data, 
            stack1 == null || stack1 === false ? stack1 : stack1.nickname), typeof stack1 === functionType ? stack1.apply(depth0) : stack1)) + "</h3>\r\n    <p>\r\n        ";
            stack1 = helpers["if"].call(depth0, (stack1 = depth0 && depth0.data, stack1 == null || stack1 === false ? stack1 : stack1.is_date), {
                hash: {},
                inverse: self.noop,
                fn: self.program(2, program2, data),
                data: data
            });
            if (stack1 || stack1 === 0) {
                buffer += stack1;
            }
            buffer += "\r\n        ";
            stack1 = helpers["if"].call(depth0, (stack1 = depth0 && depth0.data, stack1 == null || stack1 === false ? stack1 : stack1.is_score), {
                hash: {},
                inverse: self.noop,
                fn: self.program(4, program4, data),
                data: data
            });
            if (stack1 || stack1 === 0) {
                buffer += stack1;
            }
            buffer += "\r\n    </p>\r\n</li>\r\n";
            return buffer;
        }
        function program2(depth0, data) {
            var buffer = "", stack1;
            buffer += '\r\n            <span class="num">x' + escapeExpression((stack1 = (stack1 = depth0 && depth0.data, 
            stack1 == null || stack1 === false ? stack1 : stack1.num), typeof stack1 === functionType ? stack1.apply(depth0) : stack1)) + '</span>\r\n            <span class="txt">次</span>\r\n        ';
            return buffer;
        }
        function program4(depth0, data) {
            var buffer = "", stack1;
            buffer += '\r\n            <span class="num">' + escapeExpression((stack1 = (stack1 = depth0 && depth0.data, 
            stack1 == null || stack1 === false ? stack1 : stack1.num), typeof stack1 === functionType ? stack1.apply(depth0) : stack1)) + '</span>\r\n            <span class="txt">分</span>\r\n        ';
            return buffer;
        }
        stack1 = helpers["if"].call(depth0, depth0 && depth0.data, {
            hash: {},
            inverse: self.noop,
            fn: self.program(1, program1, data),
            data: data
        });
        if (stack1 || stack1 === 0) {
            buffer += stack1;
        }
        buffer += "\r\n";
        return buffer;
    });
});

define("pai/vwx0.0.1-beta/rank/tpl/more-debug.handlebars", [ "utility/handlebars/1.3.0/runtime-debug" ], function(require, exports, module) {
    var Handlebars = require("utility/handlebars/1.3.0/runtime-debug");
    var template = Handlebars.template;
    module.exports = template(function(Handlebars, depth0, helpers, partials, data) {
        this.compilerInfo = [ 4, ">= 1.0.0" ];
        helpers = helpers || {};
        for (var key in Handlebars.helpers) {
            helpers[key] = helpers[key] || Handlebars.helpers[key];
        }
        data = data || {};
        var stack1, functionType = "function", escapeExpression = this.escapeExpression, self = this;
        function program1(depth0, data) {
            var buffer = "", stack1;
            buffer += '\r\n<li data-role="li-tap" data-id="' + escapeExpression((stack1 = (stack1 = depth0 && depth0.data, 
            stack1 == null || stack1 === false ? stack1 : stack1.user_id), typeof stack1 === functionType ? stack1.apply(depth0) : stack1)) + '">\r\n    <div class="list_container">\r\n        <div class="container_left">\r\n            <div class="lbox">' + escapeExpression((stack1 = (stack1 = depth0 && depth0.data, 
            stack1 == null || stack1 === false ? stack1 : stack1.index_count), typeof stack1 === functionType ? stack1.apply(depth0) : stack1)) + '</div>\r\n            <div class="cbox">\r\n                <div class="avatar-size-mod avatar-size-mod-50">\r\n                    <span class="icon avatar-size-area"></span>\r\n                    <i class="avatar-size-img" style="background-image: url(' + escapeExpression((stack1 = (stack1 = depth0 && depth0.data, 
            stack1 == null || stack1 === false ? stack1 : stack1.user_icon), typeof stack1 === functionType ? stack1.apply(depth0) : stack1)) + '); background-size:cover"></i>\r\n                </div>\r\n                <p class="user_name">' + escapeExpression((stack1 = (stack1 = depth0 && depth0.data, 
            stack1 == null || stack1 === false ? stack1 : stack1.nickname), typeof stack1 === functionType ? stack1.apply(depth0) : stack1)) + '</p>\r\n            </div>\r\n        </div>\r\n        <div class="container_right">\r\n            <div class="rbox">\r\n\r\n                ';
            stack1 = helpers["if"].call(depth0, (stack1 = depth0 && depth0.data, stack1 == null || stack1 === false ? stack1 : stack1.is_date), {
                hash: {},
                inverse: self.noop,
                fn: self.program(2, program2, data),
                data: data
            });
            if (stack1 || stack1 === 0) {
                buffer += stack1;
            }
            buffer += "\r\n                ";
            stack1 = helpers["if"].call(depth0, (stack1 = depth0 && depth0.data, stack1 == null || stack1 === false ? stack1 : stack1.is_score), {
                hash: {},
                inverse: self.noop,
                fn: self.program(4, program4, data),
                data: data
            });
            if (stack1 || stack1 === 0) {
                buffer += stack1;
            }
            buffer += "\r\n            </div>\r\n        </div>\r\n    </div>\r\n</li>\r\n";
            return buffer;
        }
        function program2(depth0, data) {
            var buffer = "", stack1;
            buffer += '\r\n                    <p class="score">x' + escapeExpression((stack1 = (stack1 = depth0 && depth0.data, 
            stack1 == null || stack1 === false ? stack1 : stack1.num), typeof stack1 === functionType ? stack1.apply(depth0) : stack1)) + '</p>\r\n                    <span class="score-txt">次</span>\r\n                ';
            return buffer;
        }
        function program4(depth0, data) {
            var buffer = "", stack1;
            buffer += '\r\n                    <p class="score">' + escapeExpression((stack1 = (stack1 = depth0 && depth0.data, 
            stack1 == null || stack1 === false ? stack1 : stack1.num), typeof stack1 === functionType ? stack1.apply(depth0) : stack1)) + '</p>\r\n                    <span class="score-txt">分</span>\r\n                ';
            return buffer;
        }
        stack1 = helpers["if"].call(depth0, depth0 && depth0.data, {
            hash: {},
            inverse: self.noop,
            fn: self.program(1, program1, data),
            data: data
        });
        if (stack1 || stack1 === 0) {
            return stack1;
        } else {
            return "";
        }
    });
});

/**
 * Created by nolest on 2014/9/28.
 */
define("pai/vwx0.0.1-beta/rank/model-debug", [ "pai/vwx0.0.1-beta/common/global_config-debug", "utility/backbone/1.1.2/backbone-debug", "pai/vwx0.0.1-beta/common/utility-debug", "$-debug", "pai/vwx0.0.1-beta/common/cross_domain_storage-debug", "matcha/cookie/1.0.0/cookie-debug", "utility/underscore/1.6.0/underscore-debug", "pai/vwx0.0.1-beta/frame/ua-debug" ], function(require, exports, module) {
    var global_config = require("pai/vwx0.0.1-beta/common/global_config-debug");
    var Backbone = require("utility/backbone/1.1.2/backbone-debug");
    var utility = require("pai/vwx0.0.1-beta/common/utility-debug");
    module.exports = Backbone.Model.extend({
        _setup_events: function() {},
        parse: function(response) {
            if (response.result_data) {
                return response.result_data;
            }
            return response;
        },
        initialize: function() {},
        get_rank: function(page) {
            var self = this;
            var loc;
            if (utility.storage.get("location").location_id) {
                loc = utility.storage.get("location").location_id;
            } else {
                loc = 0;
            }
            self.fetch({
                url: self.get("url"),
                data: {
                    location_id: loc,
                    page: page
                },
                cache: false,
                beforeSend: function(xhr, options) {
                    self.trigger("before:date:fetch", xhr, options);
                },
                success: function(model, response, options) {
                    self.trigger("success:date:fetch", response, options);
                },
                error: function(model, xhr, options) {
                    self.trigger("error:date:fetch", model, xhr, options);
                },
                complete: function(xhr, status) {
                    self.trigger("complete:date:fetch", xhr, status);
                }
            });
            return self;
        }
    });
});

/**
 * 首页 - 城市选择 基础页面框架
 * 汤圆 2014.8.18
 * @param  {[type]} require 
 * @param  {[type]} exports 
 * @param  {[type]} module  
 * @return {[type]}         
 */
define("pai/vwx0.0.1-beta/model_date/agreement/index-debug", [ "$-debug", "pai/vwx0.0.1-beta/frame/page_control-debug", "utility/backbone/1.1.2/backbone-debug", "pai/vwx0.0.1-beta/frame/ua-debug", "pai/vwx0.0.1-beta/frame/page-debug", "utility/zepto/modules/data/1.1.4/data-debug", "utility/hammer/plugins/jquery.hammer/1.1.3/jquery.hammer-debug", "utility/underscore/1.6.0/underscore-debug", "pai/vwx0.0.1-beta/model_date/agreement/view-debug", "pai/vwx0.0.1-beta/common/view-debug", "utility/handlebars/1.3.0/runtime-debug", "pai/vwx0.0.1-beta/common/utility-debug", "pai/vwx0.0.1-beta/common/cross_domain_storage-debug", "matcha/cookie/1.0.0/cookie-debug", "pai/vwx0.0.1-beta/common/template-helpers-debug", "pai/vwx0.0.1-beta/common/scroll-debug", "utility/iscroll/4.2.5/iscroll-debug", "pai/vwx0.0.1-beta/common/img-ready-debug", "pai/vwx0.0.1-beta/ui/m_alert/view-debug" ], function(require, exports, module) {
    var $ = require("$-debug");
    var page_control = require("pai/vwx0.0.1-beta/frame/page_control-debug");
    var agreement_view = require("pai/vwx0.0.1-beta/model_date/agreement/view-debug");
    var utility = require("pai/vwx0.0.1-beta/common/utility-debug");
    page_control.add_page([ function() {
        return {
            title: "拍摄协议",
            route: {
                "model_date/agreement": "agreement"
            },
            dom_not_cache: false,
            transition_type: "slide",
            initialize: function() {},
            page_init: function(page_view, route_params_arr, route_params_obj) {
                var self = this;
                self.agreement_view_obj = new agreement_view({
                    parentNode: self.$el
                }).render();
            },
            page_before_show: function() {
                var self = this;
            },
            page_show: function() {},
            page_before_hide: function() {}
        };
    } ]);
});

/**
 * 专题最终页
 *
 * hdw 2014.10.27
 */
define("pai/vwx0.0.1-beta/topic/info/index-debug", [ "$-debug", "pai/vwx0.0.1-beta/frame/page_control-debug", "utility/backbone/1.1.2/backbone-debug", "pai/vwx0.0.1-beta/frame/ua-debug", "pai/vwx0.0.1-beta/frame/page-debug", "utility/zepto/modules/data/1.1.4/data-debug", "utility/hammer/plugins/jquery.hammer/1.1.3/jquery.hammer-debug", "utility/underscore/1.6.0/underscore-debug", "pai/vwx0.0.1-beta/topic/info/view-debug", "pai/vwx0.0.1-beta/common/view-debug", "utility/handlebars/1.3.0/runtime-debug", "pai/vwx0.0.1-beta/common/utility-debug", "pai/vwx0.0.1-beta/common/cross_domain_storage-debug", "matcha/cookie/1.0.0/cookie-debug", "pai/vwx0.0.1-beta/common/scroll-debug", "utility/iscroll/4.2.5/iscroll-debug", "pai/vwx0.0.1-beta/common/img-ready-debug", "pai/vwx0.0.1-beta/common/global_config-debug", "pai/vwx0.0.1-beta/topic/model-debug", "pai/vwx0.0.1-beta/ui/m_alert/view-debug" ], function(require, exports, module) {
    var $ = require("$-debug");
    var page_control = require("pai/vwx0.0.1-beta/frame/page_control-debug");
    var topic_view = require("pai/vwx0.0.1-beta/topic/info/view-debug");
    var global_config = require("pai/vwx0.0.1-beta/common/global_config-debug");
    var utility = require("pai/vwx0.0.1-beta/common/utility-debug");
    var model = require("pai/vwx0.0.1-beta/topic/model-debug");
    var m_alert = require("pai/vwx0.0.1-beta/ui/m_alert/view-debug");
    page_control.add_page([ function() {
        return {
            title: "专题列表",
            route: {
                "topic/:topic_id(/:is_preview)": "topic"
            },
            dom_not_cache: true,
            ignore_exist: true,
            transition_type: "slide",
            page_init: function(page_view, route_params_arr, route_params_obj) {
                var self = this;
                var topic_id = route_params_arr[0];
                var is_preview = route_params_arr[1] ? true : false;
                if (topic_id) {
                    var model_obj = new model();
                } else {
                    var model_obj = route_params_obj.model;
                }
                var view = new topic_view({
                    model: model_obj,
                    parentNode: self.$el,
                    topic_id: topic_id,
                    is_preview: is_preview
                }).render();
            },
            page_before_show: function() {},
            page_show: function() {},
            page_before_hide: function() {}
        };
    } ]);
});

/**
 * 主题详情视图
 *
 * hdw 2014.10.27
 */
define("pai/vwx0.0.1-beta/topic/info/view-debug", [ "$-debug", "pai/vwx0.0.1-beta/frame/page_control-debug", "utility/backbone/1.1.2/backbone-debug", "pai/vwx0.0.1-beta/frame/ua-debug", "pai/vwx0.0.1-beta/frame/page-debug", "utility/zepto/modules/data/1.1.4/data-debug", "utility/hammer/plugins/jquery.hammer/1.1.3/jquery.hammer-debug", "utility/underscore/1.6.0/underscore-debug", "pai/vwx0.0.1-beta/common/view-debug", "utility/handlebars/1.3.0/runtime-debug", "pai/vwx0.0.1-beta/common/utility-debug", "pai/vwx0.0.1-beta/common/cross_domain_storage-debug", "matcha/cookie/1.0.0/cookie-debug", "pai/vwx0.0.1-beta/common/scroll-debug", "utility/iscroll/4.2.5/iscroll-debug", "pai/vwx0.0.1-beta/common/img-ready-debug" ], function(require, exports, module) {
    var $ = require("$-debug");
    var page_control = require("pai/vwx0.0.1-beta/frame/page_control-debug");
    var View = require("pai/vwx0.0.1-beta/common/view-debug");
    var info_tpl = require("pai/vwx0.0.1-beta/topic/tpl/info-debug.handlebars");
    var main_info_tpl = require("pai/vwx0.0.1-beta/topic/tpl/main_info-debug.handlebars");
    var utility = require("pai/vwx0.0.1-beta/common/utility-debug");
    var Scroll = require("pai/vwx0.0.1-beta/common/scroll-debug");
    var topic_list_view = View.extend({
        attrs: {
            template: main_info_tpl
        },
        events: {
            swiperight: function() {
                page_control.back();
            },
            "tap [data-role=page-back]": function(ev) {
                page_control.back();
            },
            //导航跳转
            'tap [data-role="nav-page"]': function(ev) {
                var self = this;
                var $cur_btn = $(ev.currentTarget);
                var url_style = $cur_btn.attr("data-url-style");
                var data_url = $cur_btn.attr("data-url");
                var no_jump = $cur_btn.attr("data-no-jump");
                if (no_jump) {
                    if (!utility.user.get("role") == "cameraman") {}
                }
                switch (url_style) {
                  case "inside":
                    page_control.navigate_to_page(data_url);
                    break;

                  case "outside":
                    window.location.href = data_url;
                    break;

                  case "ohter":
                    //
                    break;
                }
            }
        },
        /**
         * 安装事件
         * @private
         */
        _setup_events: function() {
            var self = this;
            self.model.on("before:info:fetch", function(response) {}).on("success:info:fetch", function(response) {
                self._render_topic_info();
            }).on("error:info:fetch", function(response) {});
            self.on("update_list", function() {
                if (!self.$scroll_view_obj) {
                    self._setup_scroll();
                    self.$scroll_view_obj.scrollTo(0, 0);
                    self.$scroll_view_obj.refresh();
                    return;
                }
                self.$scroll_view_obj.refresh();
            });
        },
        _render_topic_info: function() {
            var self = this;
            var data = self.model.toJSON();
            self.$title.html(data.title);
            var html_str = info_tpl(data);
            // 根据reset判断是否分页
            self.$info["html"](html_str);
            self.trigger("update_list");
        },
        _setup_scroll: function() {
            var self = this;
            var view_scroll_obj = Scroll(self.$container, {
                is_hide_dropdown: true
            });
            self.$scroll_view_obj = view_scroll_obj;
        },
        /**
         * 视图初始化入口
         */
        setup: function() {
            var self = this;
            //滚动容器
            self.$container = self.$('[data-role="container"]');
            self.$info = self.$('[data-role="info"]');
            self.$title = self.$('[data-role="title"]');
            //安装事件
            self._setup_events();
            self.refresh();
        },
        render: function() {
            var self = this;
            // 调用渲染函数
            View.prototype.render.apply(self);
            self.trigger("render");
            return self;
        },
        refresh: function() {
            var self = this;
            self.model.get_info(self.get("topic_id"));
        }
    });
    module.exports = topic_list_view;
});

define("pai/vwx0.0.1-beta/topic/tpl/info-debug.handlebars", [ "utility/handlebars/1.3.0/runtime-debug" ], function(require, exports, module) {
    var Handlebars = require("utility/handlebars/1.3.0/runtime-debug");
    var template = Handlebars.template;
    module.exports = template(function(Handlebars, depth0, helpers, partials, data) {
        this.compilerInfo = [ 4, ">= 1.0.0" ];
        helpers = helpers || {};
        for (var key in Handlebars.helpers) {
            helpers[key] = helpers[key] || Handlebars.helpers[key];
        }
        data = data || {};
        var buffer = "", stack1, helper, functionType = "function";
        buffer += '<section class="topic-info-container">\r\n    ';
        if (helper = helpers.content) {
            stack1 = helper.call(depth0, {
                hash: {},
                data: data
            });
        } else {
            helper = depth0 && depth0.content;
            stack1 = typeof helper === functionType ? helper.call(depth0, {
                hash: {},
                data: data
            }) : helper;
        }
        if (stack1 || stack1 === 0) {
            buffer += stack1;
        }
        buffer += "\r\n</section>";
        return buffer;
    });
});

define("pai/vwx0.0.1-beta/topic/tpl/main_info-debug.handlebars", [ "utility/handlebars/1.3.0/runtime-debug" ], function(require, exports, module) {
    var Handlebars = require("utility/handlebars/1.3.0/runtime-debug");
    var template = Handlebars.template;
    module.exports = template(function(Handlebars, depth0, helpers, partials, data) {
        this.compilerInfo = [ 4, ">= 1.0.0" ];
        helpers = helpers || {};
        for (var key in Handlebars.helpers) {
            helpers[key] = helpers[key] || Handlebars.helpers[key];
        }
        data = data || {};
        var buffer = "", stack1, helper, functionType = "function", escapeExpression = this.escapeExpression;
        buffer += '<main role="main" class="secondary">\r\n    <header class="nav-header comment-page-header">\r\n        <div class="left-button-wrap" data-role="page-back">\r\n            <a><i class="icon icon-back"></i></a>\r\n        </div>\r\n        <h3 class="title txt-long-cut" data-role="title">';
        if (helper = helpers.title) {
            stack1 = helper.call(depth0, {
                hash: {},
                data: data
            });
        } else {
            helper = depth0 && depth0.title;
            stack1 = typeof helper === functionType ? helper.call(depth0, {
                hash: {},
                data: data
            }) : helper;
        }
        buffer += escapeExpression(stack1) + '</h3>\r\n        <div class="right-button-wrap">\r\n        </div>\r\n    </header>\r\n    \r\n    <div data-role="container">\r\n        <div class="topic-end-page" data-role="info">\r\n\r\n        </div>\r\n    </div>\r\n</main>\r\n';
        return buffer;
    });
});

/**
 * 主题 模型
 * hudw 2014.10.27
 */
define("pai/vwx0.0.1-beta/topic/model-debug", [ "pai/vwx0.0.1-beta/common/global_config-debug", "utility/backbone/1.1.2/backbone-debug" ], function(require, exports, module) {
    var global_config = require("pai/vwx0.0.1-beta/common/global_config-debug");
    var Backbone = require("utility/backbone/1.1.2/backbone-debug");
    module.exports = Backbone.Model.extend({
        "default": {},
        /**
         * 安装事件
         * @private
         */
        _setup_events: function() {
            var self = this;
        },
        /**
         * 转换数据格式
         * @param response
         * @returns {*}
         */
        parse: function(response) {
            if (response.result_data) {
                return response.result_data.data;
            }
            return response;
        },
        initialize: function() {
            var self = this;
            self._setup_events();
        },
        /**
         * 获取主题详细页
         */
        get_info: function(topic_id) {
            var self = this;
            self.fetch({
                url: global_config.ajax_url.get_topic_info,
                data: {
                    id: topic_id
                },
                cache: true,
                beforeSend: function(xhr, options) {
                    self.trigger("before:info:fetch", xhr, options);
                },
                success: function(collection, response, options) {
                    self.trigger("success:info:fetch", response, options);
                },
                error: function(collection, response, options) {
                    self.trigger("error:info:fetch", response, options);
                },
                complete: function(xhr, status) {
                    self.trigger("complete:info:fetch", xhr, status);
                }
            });
        }
    });
});

/**
 * 举报页
 * hdw 2014.10.28
 */
define("pai/vwx0.0.1-beta/report/index-debug", [ "$-debug", "pai/vwx0.0.1-beta/frame/page_control-debug", "utility/backbone/1.1.2/backbone-debug", "pai/vwx0.0.1-beta/frame/ua-debug", "pai/vwx0.0.1-beta/frame/page-debug", "utility/zepto/modules/data/1.1.4/data-debug", "utility/hammer/plugins/jquery.hammer/1.1.3/jquery.hammer-debug", "utility/underscore/1.6.0/underscore-debug", "pai/vwx0.0.1-beta/report/view-debug", "pai/vwx0.0.1-beta/common/view-debug", "utility/handlebars/1.3.0/runtime-debug", "pai/vwx0.0.1-beta/common/utility-debug", "pai/vwx0.0.1-beta/common/cross_domain_storage-debug", "matcha/cookie/1.0.0/cookie-debug", "pai/vwx0.0.1-beta/common/scroll-debug", "utility/iscroll/4.2.5/iscroll-debug", "pai/vwx0.0.1-beta/common/img-ready-debug", "pai/vwx0.0.1-beta/widget/choosen_group/view-debug", "pai/vwx0.0.1-beta/ui/m_alert/view-debug", "pai/vwx0.0.1-beta/common/global_config-debug", "pai/vwx0.0.1-beta/report/model-debug" ], function(require, exports, module) {
    var $ = require("$-debug");
    var page_control = require("pai/vwx0.0.1-beta/frame/page_control-debug");
    var report_view = require("pai/vwx0.0.1-beta/report/view-debug");
    var global_config = require("pai/vwx0.0.1-beta/common/global_config-debug");
    var utility = require("pai/vwx0.0.1-beta/common/utility-debug");
    var report_model = require("pai/vwx0.0.1-beta/report/model-debug");
    var m_alert = require("pai/vwx0.0.1-beta/ui/m_alert/view-debug");
    page_control.add_page([ function() {
        return {
            title: "约拍邀请",
            route: {
                "report/:report_id": "report"
            },
            transition_type: "slide",
            initialize: function() {},
            page_init: function(page_view, route_params_arr, route_params_obj) {
                var self = this;
                var model = new report_model();
                var view = new report_view({
                    report_id: route_params_arr[0],
                    model: model,
                    parentNode: self.$el
                }).render();
            },
            page_before_show: function() {},
            page_show: function() {},
            page_before_hide: function() {}
        };
    } ]);
});

/**
 * Created by 汤圆 2014.11.19
 */
define("pai/vwx0.0.1-beta/report/view-debug", [ "$-debug", "pai/vwx0.0.1-beta/frame/page_control-debug", "utility/backbone/1.1.2/backbone-debug", "pai/vwx0.0.1-beta/frame/ua-debug", "pai/vwx0.0.1-beta/frame/page-debug", "utility/zepto/modules/data/1.1.4/data-debug", "utility/hammer/plugins/jquery.hammer/1.1.3/jquery.hammer-debug", "utility/underscore/1.6.0/underscore-debug", "pai/vwx0.0.1-beta/common/view-debug", "utility/handlebars/1.3.0/runtime-debug", "pai/vwx0.0.1-beta/common/utility-debug", "pai/vwx0.0.1-beta/common/cross_domain_storage-debug", "matcha/cookie/1.0.0/cookie-debug", "pai/vwx0.0.1-beta/common/scroll-debug", "utility/iscroll/4.2.5/iscroll-debug", "pai/vwx0.0.1-beta/common/img-ready-debug", "pai/vwx0.0.1-beta/widget/choosen_group/view-debug", "pai/vwx0.0.1-beta/ui/m_alert/view-debug" ], function(require, exports, module) {
    var $ = require("$-debug");
    var page_control = require("pai/vwx0.0.1-beta/frame/page_control-debug");
    var View = require("pai/vwx0.0.1-beta/common/view-debug");
    var refuse_tpl = require("pai/vwx0.0.1-beta/report/tpl/main-debug.handlebars");
    var utility = require("pai/vwx0.0.1-beta/common/utility-debug");
    var Scroll = require("pai/vwx0.0.1-beta/common/scroll-debug");
    var choosen_group_view = require("pai/vwx0.0.1-beta/widget/choosen_group/view-debug");
    var m_alert = require("pai/vwx0.0.1-beta/ui/m_alert/view-debug");
    var item_tpl = require("pai/vwx0.0.1-beta/report/tpl/item-debug.handlebars");
    var receive_view = View.extend({
        attrs: {
            template: refuse_tpl
        },
        events: {
            swiperight: function() {
                page_control.back();
            },
            //手机手势返回        
            "tap [data-role=page-back]": function(ev) {
                page_control.back();
            },
            "tap [data-role=item]": function(ev) {
                var self = this;
                var $cur_btn = $(ev.currentTarget);
                $cur_btn.addClass("cur").siblings().removeClass("cur");
                self.sec_data_txt = $cur_btn.find(".txt").html();
            },
            'tap [data-role="btn"]': function(ev) {
                var self = this;
                var detail = self.$('[data-role="cancel_remark"]').val().trim();
                if (!utility.login_id) {
                    m_alert.show("尚未登录", "error", {
                        delay: 1e3
                    });
                    page_control.navigate_to_page("account/login");
                    return;
                }
                if (!self.sec_data_txt && detail == "") {
                    m_alert.show("请完善投诉信息", "error");
                    return;
                }
                var send_data_txt = encodeURIComponent(self.sec_data_txt) + "\n" + encodeURIComponent(detail);
                // 收集数据 
                var data = {
                    data: send_data_txt,
                    by_informer: self.get("report_id")
                };
                self.model.send_report(data);
            }
        },
        _setup_events: function() {
            var self = this;
            self.model.on("before:fetch", function(response, options) {
                m_alert.show("加载中...", "loading", {
                    delay: 1e3
                });
            }).on("success:fetch", function(response, options) {
                var data = response.result_data;
                if (data.code == 1) {
                    m_alert.show("举报成功！", "right", {
                        delay: 1e3
                    });
                    page_control.back();
                } else {
                    m_alert.show("举报失败，请返回重试!", "loading", {
                        delay: 1e3
                    });
                }
            }).on("error:fetch", function() {
                m_alert.show("网络不给力,请返回重试！", "error");
            }).on("complete:fetch", function(response, options) {});
        },
        _setup_scroll: function() {
            var self = this;
            var view_scroll_obj = Scroll(self.$container, {
                is_hide_dropdown: true
            });
            self.view_scroll_obj = view_scroll_obj;
            self.view_scroll_obj.refresh();
        },
        //渲染模板
        render_item: function() {
            var self = this;
            var list = [ {
                text: "垃圾营销",
                "data-id": "item_0"
            }, {
                text: "淫秽色情",
                "data-id": "item_1"
            }, {
                text: "不实内容",
                "data-id": "item_2"
            }, {
                text: "敏感信息",
                "data-id": "item_3"
            }, {
                text: "虚假中奖",
                "data-id": "item_4"
            }, {
                text: "抄袭内容",
                "data-id": "item_5"
            } ];
            self.item_list = item_tpl({
                data: list
            });
            self.$item_list.html(self.item_list);
        },
        setup: function() {
            var self = this;
            self.$container = self.$('[data-role="yuepai-refuse"]');
            self.$choosen_group = self.$('[data-role="choosen_group"]');
            self.$item_list = self.$('[data-role="item-list"]');
            self._setup_events();
            self._setup_scroll();
            self.render_item();
        },
        render: function() {
            var self = this;
            View.prototype.render.apply(self);
            self.trigger("render");
            return self;
        },
        reset_viewport_height: function() {
            return utility.get_view_port_height("nav") - 24;
        }
    });
    module.exports = receive_view;
});

define("pai/vwx0.0.1-beta/report/tpl/main-debug.handlebars", [ "utility/handlebars/1.3.0/runtime-debug" ], function(require, exports, module) {
    var Handlebars = require("utility/handlebars/1.3.0/runtime-debug");
    var template = Handlebars.template;
    module.exports = template(function(Handlebars, depth0, helpers, partials, data) {
        this.compilerInfo = [ 4, ">= 1.0.0" ];
        helpers = helpers || {};
        for (var key in Handlebars.helpers) {
            helpers[key] = helpers[key] || Handlebars.helpers[key];
        }
        data = data || {};
        return '<main role="main" class="commit wryh">\r\n\r\n    <header class="nav-header mine-nav-header">\r\n        <div class="left-button-wrap" data-role="page-back">\r\n            <a><i class="icon icon-back"></i></a>\r\n        </div>\r\n\r\n        <h3 class="title">举报</h3>\r\n        \r\n        <div class="right-button-wrap">\r\n            <a><i class="icon icon-cog"></i></a>\r\n        </div>\r\n    </header>\r\n\r\n        <div class="yuepai-refuse-v2" data-role="yuepai-refuse">\r\n        <div>\r\n\r\n            <div class="box1">请选择举报的原因</div>\r\n            <ul class="list" data-role="item-list">\r\n\r\n            </ul>   \r\n\r\n            <div class="ui-textarea">\r\n            <div class="ui-textarea-wrap">\r\n                <textarea name=" " id=" " data-role="cancel_remark" class="textarea " placeholder="补充说明"></textarea>\r\n            </div>\r\n            </div>   \r\n\r\n            <div class="btn">\r\n                <button class="ui-button ui-button-primary ui-button-size-large ui-button-block" data-role="btn">\r\n                    <span class="ui-button-content">提交</span>\r\n                </button>\r\n            </div>\r\n\r\n        </div>\r\n        </div>\r\n</main>';
    });
});

define("pai/vwx0.0.1-beta/report/tpl/item-debug.handlebars", [ "utility/handlebars/1.3.0/runtime-debug" ], function(require, exports, module) {
    var Handlebars = require("utility/handlebars/1.3.0/runtime-debug");
    var template = Handlebars.template;
    module.exports = template(function(Handlebars, depth0, helpers, partials, data) {
        this.compilerInfo = [ 4, ">= 1.0.0" ];
        helpers = helpers || {};
        for (var key in Handlebars.helpers) {
            helpers[key] = helpers[key] || Handlebars.helpers[key];
        }
        data = data || {};
        var buffer = "", stack1, functionType = "function", escapeExpression = this.escapeExpression, self = this;
        function program1(depth0, data) {
            var buffer = "", stack1, helper;
            buffer += ' \r\n<li class="" data-id=\'';
            if (helper = helpers["data-id"]) {
                stack1 = helper.call(depth0, {
                    hash: {},
                    data: data
                });
            } else {
                helper = depth0 && depth0["data-id"];
                stack1 = typeof helper === functionType ? helper.call(depth0, {
                    hash: {},
                    data: data
                }) : helper;
            }
            buffer += escapeExpression(stack1) + '\' data-role="item"><i class="icon icon-right-m"></i><span class="txt">';
            if (helper = helpers.text) {
                stack1 = helper.call(depth0, {
                    hash: {},
                    data: data
                });
            } else {
                helper = depth0 && depth0.text;
                stack1 = typeof helper === functionType ? helper.call(depth0, {
                    hash: {},
                    data: data
                }) : helper;
            }
            buffer += escapeExpression(stack1) + "</span></li>\r\n";
            return buffer;
        }
        buffer += "\r\n";
        stack1 = helpers.each.call(depth0, depth0 && depth0.data, {
            hash: {},
            inverse: self.noop,
            fn: self.program(1, program1, data),
            data: data
        });
        if (stack1 || stack1 === 0) {
            buffer += stack1;
        }
        buffer += "\r\n";
        return buffer;
    });
});

/**
 * 绑定支付宝
 * 汤圆 2014.11.20       
 */
define("pai/vwx0.0.1-beta/report/model-debug", [ "pai/vwx0.0.1-beta/common/global_config-debug", "utility/backbone/1.1.2/backbone-debug" ], function(require, exports, module) {
    var global_config = require("pai/vwx0.0.1-beta/common/global_config-debug");
    var Backbone = require("utility/backbone/1.1.2/backbone-debug");
    module.exports = Backbone.Model.extend({
        url: global_config.ajax_url.report_model,
        "default": {},
        /**
         * 安装事件
         * @private
         */
        _setup_events: function() {},
        parse: function(response) {
            if (response.result_data) {
                return response.result_data;
            }
            return response;
        },
        initialize: function() {
            var self = this;
            self._setup_events();
        },
        //检查是否绑定
        send_report: function(data) {
            var self = this;
            self.fetch({
                url: self.url,
                data: data,
                cache: false,
                beforeSend: function(xhr, options) {
                    self.trigger("before:fetch", xhr, options);
                },
                success: function(model, response, options) {
                    self.trigger("success:fetch", response, options);
                },
                error: function(model, response, options) {
                    self.trigger("error:fetch", response, options);
                },
                complete: function(xhr, status) {
                    self.trigger("complete:fetch", xhr, status);
                }
            });
        }
    });
});

/**
 * 首页 - 城市选择 基础页面框架
 * 汤圆 2014.8.18
 * @param  {[type]} require 
 * @param  {[type]} exports 
 * @param  {[type]} module  
 * @return {[type]}         
 */
define("pai/vwx0.0.1-beta/account/fans_follows/index-debug", [ "$-debug", "pai/vwx0.0.1-beta/frame/page_control-debug", "utility/backbone/1.1.2/backbone-debug", "pai/vwx0.0.1-beta/frame/ua-debug", "pai/vwx0.0.1-beta/frame/page-debug", "utility/zepto/modules/data/1.1.4/data-debug", "utility/hammer/plugins/jquery.hammer/1.1.3/jquery.hammer-debug", "utility/underscore/1.6.0/underscore-debug", "pai/vwx0.0.1-beta/account/fans_follows/view-debug", "pai/vwx0.0.1-beta/common/view-debug", "utility/handlebars/1.3.0/runtime-debug", "pai/vwx0.0.1-beta/common/utility-debug", "pai/vwx0.0.1-beta/common/cross_domain_storage-debug", "matcha/cookie/1.0.0/cookie-debug", "pai/vwx0.0.1-beta/common/template-helpers-debug", "pai/vwx0.0.1-beta/common/new_iscroll-debug", "utility/iscroll/4.2.5/iscroll-debug", "pai/vwx0.0.1-beta/common/img-ready-debug", "pai/vwx0.0.1-beta/base/ua-debug", "pai/vwx0.0.1-beta/ui/m_alert/view-debug", "pai/vwx0.0.1-beta/widget/pull_down/view-debug", "pai/vwx0.0.1-beta/widget/load_more/view-debug", "pai/vwx0.0.1-beta/widget/model_pic/view-debug", "pai/vwx0.0.1-beta/widget/abnormal/view-debug", "pai/vwx0.0.1-beta/account/fans_follows/collection-debug", "pai/vwx0.0.1-beta/common/global_config-debug", "pai/vwx0.0.1-beta/account/fans_follows/model-debug", "pai/vwx0.0.1-beta/common/collection-debug" ], function(require, exports, module) {
    var $ = require("$-debug");
    var page_control = require("pai/vwx0.0.1-beta/frame/page_control-debug");
    var fans_view = require("pai/vwx0.0.1-beta/account/fans_follows/view-debug");
    var fans_collection = require("pai/vwx0.0.1-beta/account/fans_follows/collection-debug");
    page_control.add_page([ function() {
        return {
            title: "粉丝",
            route: {
                "account/fans_follows/:user_id/:type": "account/fans_follows"
            },
            dom_not_cache: false,
            ignore_exist: true,
            transition_type: "slide",
            page_init: function(page_view, route_params_arr, route_params_obj) {
                var self = this;
                var user_id = route_params_arr[0];
                var type = route_params_arr[1];
                var collection = new fans_collection({
                    user_id: user_id,
                    type: type.toString()
                });
                //标题处理
                if (type == "follow") {
                    self.header_title = "关注";
                } else {
                    self.header_title = "粉丝";
                }
                var fans_view_obj = new fans_view({
                    templateModel: {
                        header_title: self.header_title
                    },
                    collection: collection,
                    parentNode: self.$el,
                    type: type.toString()
                }).render();
            },
            page_before_show: function() {},
            page_show: function() {},
            page_before_hide: function() {}
        };
    } ]);
});

/**
 * 首页 - 粉丝列表
 * 汤圆 2014.9.19
 */
define("pai/vwx0.0.1-beta/account/fans_follows/view-debug", [ "$-debug", "pai/vwx0.0.1-beta/frame/page_control-debug", "utility/backbone/1.1.2/backbone-debug", "pai/vwx0.0.1-beta/frame/ua-debug", "pai/vwx0.0.1-beta/frame/page-debug", "utility/zepto/modules/data/1.1.4/data-debug", "utility/hammer/plugins/jquery.hammer/1.1.3/jquery.hammer-debug", "utility/underscore/1.6.0/underscore-debug", "pai/vwx0.0.1-beta/common/view-debug", "utility/handlebars/1.3.0/runtime-debug", "pai/vwx0.0.1-beta/common/utility-debug", "pai/vwx0.0.1-beta/common/cross_domain_storage-debug", "matcha/cookie/1.0.0/cookie-debug", "pai/vwx0.0.1-beta/common/template-helpers-debug", "pai/vwx0.0.1-beta/common/new_iscroll-debug", "utility/iscroll/4.2.5/iscroll-debug", "pai/vwx0.0.1-beta/common/img-ready-debug", "pai/vwx0.0.1-beta/base/ua-debug", "pai/vwx0.0.1-beta/ui/m_alert/view-debug", "pai/vwx0.0.1-beta/widget/pull_down/view-debug", "pai/vwx0.0.1-beta/widget/load_more/view-debug", "pai/vwx0.0.1-beta/widget/model_pic/view-debug", "pai/vwx0.0.1-beta/widget/abnormal/view-debug" ], function(require, exports, module) {
    var $ = require("$-debug");
    var page_control = require("pai/vwx0.0.1-beta/frame/page_control-debug");
    var View = require("pai/vwx0.0.1-beta/common/view-debug");
    var fans = require("pai/vwx0.0.1-beta/account/fans_follows/tpl/main-debug.handlebars");
    var utility = require("pai/vwx0.0.1-beta/common/utility-debug");
    var templateHelpers = require("pai/vwx0.0.1-beta/common/template-helpers-debug");
    var Scroll = require("pai/vwx0.0.1-beta/common/new_iscroll-debug");
    var m_alert = require("pai/vwx0.0.1-beta/ui/m_alert/view-debug");
    var pull_down = require("pai/vwx0.0.1-beta/widget/pull_down/view-debug");
    var load_more = require("pai/vwx0.0.1-beta/widget/load_more/view-debug");
    var grid = require("pai/vwx0.0.1-beta/widget/model_pic/view-debug");
    var abnormal = require("pai/vwx0.0.1-beta/widget/abnormal/view-debug");
    var fans_view = View.extend({
        attrs: {
            template: fans
        },
        events: {
            swiperight: function() {
                page_control.back();
            },
            "tap [data-role=page-back]": function(ev) {
                page_control.back();
            },
            "tap [data-role=load-more-container]": function(ev) {
                var self = this;
                self.get_more();
            },
            'touch [data-role="content-body"]': function() {
                var self = this;
                if (!self.select_drop_obj.is_drop()) {
                    return;
                }
                self.select_drop_obj.pull_up();
            },
            'tap [data-role="select-more"]': function() {
                var self = this;
                if (self.select_drop_obj.is_drop()) {
                    self.select_drop_obj.pull_up();
                } else {
                    self.select_drop_obj.drop_down();
                }
            },
            "tap [data-role=load-more-container]": function(ev) {
                var self = this;
                self.get_more();
            },
            "tap [data-role=grid-pic-container]": function(ev) {
                var $current_target = $(ev.currentTarget);
                var user_id = utility.int($current_target.attr("data-user-id"));
                var user_data_role = $current_target.attr("data-user-role");
                switch (user_data_role) {
                  case "cameraman":
                    page_control.navigate_to_page("zone/" + user_id + "/cameraman");
                    break;

                  case "model":
                    page_control.navigate_to_page("model_card/" + user_id);
                    break;
                }
            }
        },
        /**
         * 安装事件
         * @private
         */
        _setup_events: function() {
            var self = this;
            self.collection.on("reset", self._reset, self).on("add", self._add_one, self).on("before:fetch", function(xhr, options) {
                if (options.reset) {
                    m_alert.show("加载中...", "loading");
                }
            }).on("success:fetch", function(response, xhr) {
                m_alert.hide();
                self._render_model_pics_list(response, xhr);
            }).on("complete:fetch", function(xhr, status) {});
            self.on("update_list", function(response, xhr) {
                // 区分当前对象
                var _self = this;
                if (!self.view_scroll_obj) {
                    self._setup_scroll();
                    return;
                }
                if (xhr.reset) {
                    self.view_scroll_obj.scrollTo(0, 0);
                    self.view_scroll_obj.resetLazyLoad();
                }
                self.$container.removeClass("fn-hide");
                self.view_scroll_obj.refresh();
            }).once("render", self._render_after, self);
        },
        /**
         * 安装滚动条
         * @private
         */
        _setup_scroll: function() {
            var self = this;
            // 下拉
            self._top_offset = 45;
            var view_scroll_obj = Scroll(self.$container, {
                topOffset: self._top_offset,
                lazyLoad: true
            });
            // 下拉刷新标记
            self.pull_refresh = false;
            view_scroll_obj.on("refresh", function() {
                // 区分当前对象，_self为滚动条对象
                var _self = this;
                if (self.pull_refresh) {
                    self.pull_refresh = false;
                    console.log("下拉刷新");
                    self.pull_down_obj.set_pull_down_style("loaded");
                }
            });
            view_scroll_obj.on("scrollMoveAfter", function() {
                // 区分当前对象，_self为滚动条对象
                var _self = this;
                var scroll_y = _self.y;
                if (scroll_y > 5 && !self.pull_refresh) {
                    //释放刷新
                    _self.minScrollY = 0;
                    self.pull_refresh = true;
                    self.pull_down_obj.set_pull_down_style("release");
                    console.log("释放刷新");
                }
            });
            view_scroll_obj.on("scrollEndAfter", function() {
                // 区分当前对象，_self为滚动条对象
                var _self = this;
                var scroll_y = _self.y;
                if (self.pull_refresh) {
                    // 加载中...
                    console.log("加载中");
                    self.pull_down_obj.set_pull_down_style("loading");
                    self.refresh();
                }
                if (self.$load_more_container) {
                    self._scroll_check();
                }
            });
            self.view_scroll_obj = view_scroll_obj;
        },
        /**
         * 安装下拉刷新
         * @private
         */
        _setup_pull_down: function() {
            var self = this;
            self.pull_down_obj = new pull_down({
                // 元素插入位置
                parentNode: self.$pull_down_container,
                templateModel: {
                    top: -45
                }
            }).render();
        },
        /**
         * 安装加载更多按钮
         * @private
         */
        _setup_load_more: function() {
            var self = this;
            self.load_more_btn = new load_more({
                parentNode: self.$load_more_container
            }).render();
        },
        _reset: function() {
            var self = this;
            self.collection.length && self.collection.each(self._add_one, self);
        },
        _add_one: function(model) {
            var self = this;
            self._render_queue.push(model.toJSON());
            return self;
        },
        /**
         * 渲染图片列表
         * @param response
         * @param options
         * @private
         */
        _render_model_pics_list: function(response, xhr) {
            var self = this;
            var render_queue = self._render_queue;
            // 没有数据的时候，直接return
            if (render_queue.length == 0) {
                self.$("[data-role=pull-down]").addClass("fn-hide");
                self.abnormal_view = new abnormal({
                    templateModel: {
                        content_height: utility.get_view_port_height("all") - 45
                    },
                    parentNode: self.$grid_list_container
                }).render();
                //m_alert.show('暂时没有数据！','error',{delay:2000});
                //self.$container.addClass('fn-hide');
                return;
            }
            // 判断是否有下一页
            if (self.collection.has_next_page) {
                self.load_more_btn.show();
            } else {
                self.load_more_btn.hide();
            }
            // user id 转换
            if (self.get("type") == "follow") {
                // self.$header_title.html('关注');
                $.each(render_queue, function(i, obj) {
                    obj.user_id = obj.be_follow_user_id;
                });
            } else {
                // self.$header_title.html('粉丝');
                $.each(render_queue, function(i, obj) {
                    obj.user_id = obj.follow_user_id;
                });
            }
            var art_imgs = [];
            var pic_arr = render_queue;
            for (var i = 0; i < pic_arr.length; i++) {
                var type;
                if ((i + 2) % 3 == 0) {
                    type = "middle";
                } else {
                    type = "one";
                }
                pic_arr[i].type = type;
                art_imgs.push(pic_arr[i]);
            }
            var grid_list_view = new grid({
                // 模板参数对象
                templateModel: {
                    tpl_data: art_imgs,
                    tpl_type: "one"
                }
            }).render();
            // 判断调用重新加载还是插入方法
            var method = xhr.reset ? "html" : "append";
            self.$grid_list_container[method](grid_list_view.list());
            self.trigger("update_list", response, xhr);
            // 情况队列
            self._render_queue = [];
        },
        _scroll_check: function() {
            var self = this;
            if (!self.$load_more_container || !self._visible || !self.collection.has_next_page) {
                return;
            }
            var pos = self.$load_more_container.position();
            if (pos.top < self._viewportHeight) {
                self.get_more();
            }
        },
        _render_city: function(response, xhr) {
            var self = this;
            self.trigger("update_list", response, xhr);
        },
        _render_after: function() {
            var self = this;
            self.collection.get_list(1);
            self._viewportHeight = utility.get_view_port_height("nav");
        },
        /**
         * 加载更多
         */
        get_more: function() {
            var self = this;
            var current_page = self.collection.get_current_page();
            self.collection.get_list(++current_page);
        },
        change_title: function() {
            var self = this;
            if (self.get("type") == "follow") {
                self.$header_title.html("关注");
            } else {
                self.$header_title.html("粉丝");
            }
        },
        /**
         * 重新加载数据
         */
        refresh: function() {
            var self = this;
            self.collection.get_list(1);
        },
        /**
         * 视图初始化入口
         */
        setup: function() {
            var self = this;
            // 渲染队列
            self._render_queue = [];
            // 配置交互对象
            self.$container = self.$("[data-role=container]");
            // 滚动容器
            self.$grid_list_container = self.$("[data-role=grid-list-container]");
            // 方图容器
            self.$pull_down_container = self.$("[data-role=pull-down-wrapper]");
            // 下拉刷新容器
            self.$load_more_container = self.$("[data-role=load-more-container]");
            // 加载更多容器
            self.$header_title = self.$("[data-role=header-title]");
            // 加载更多容器
            // 渲染队列
            self._render_queue = [];
            // 安装事件
            self._setup_events();
            // 安装下拉刷新
            self._setup_pull_down();
            // 安装加载更多
            self._setup_load_more();
        },
        render: function() {
            var self = this;
            // 调用渲染函数
            View.prototype.render.apply(self);
            self.trigger("render");
            return self;
        }
    });
    module.exports = fans_view;
});

define("pai/vwx0.0.1-beta/account/fans_follows/tpl/main-debug.handlebars", [ "utility/handlebars/1.3.0/runtime-debug" ], function(require, exports, module) {
    var Handlebars = require("utility/handlebars/1.3.0/runtime-debug");
    var template = Handlebars.template;
    module.exports = template(function(Handlebars, depth0, helpers, partials, data) {
        this.compilerInfo = [ 4, ">= 1.0.0" ];
        helpers = helpers || {};
        for (var key in Handlebars.helpers) {
            helpers[key] = helpers[key] || Handlebars.helpers[key];
        }
        data = data || {};
        var buffer = "", stack1, helper, functionType = "function", escapeExpression = this.escapeExpression;
        buffer += '<main role="main" class="location">\r\n    \r\n   <!-- <header class="page-header wryh">\r\n        <div class="page-back" data-role="page-back"><i class="icon icon-back-40x40"></i></div>\r\n        <span class="title" data-role="header-title">粉丝</span>\r\n    </header> -->\r\n\r\n    <header class="nav-header fans-follows-nav-header">\r\n        <div class="left-button-wrap" data-role="page-back">\r\n            <a><i class="icon icon-back"></i></a>\r\n        </div>\r\n\r\n        <h3 class="title" data-role="header-title">';
        if (helper = helpers.header_title) {
            stack1 = helper.call(depth0, {
                hash: {},
                data: data
            });
        } else {
            helper = depth0 && depth0.header_title;
            stack1 = typeof helper === functionType ? helper.call(depth0, {
                hash: {},
                data: data
            }) : helper;
        }
        buffer += escapeExpression(stack1) + '</h3>\r\n        \r\n        <div class="right-button-wrap">\r\n            <a><i class="icon icon-cog"></i></a>\r\n        </div>\r\n    </header>\r\n\r\n\r\n\r\n    <div data-role="container" class="content-body"  style="" >\r\n        <div>\r\n\r\n            \r\n                <div data-role="container-img-list" class="grid-pic-content" style="margin-top:45px">\r\n                    \r\n                    <div data-role="pull-down-wrapper" >\r\n\r\n                    </div>\r\n\r\n                    <div class="grid-list grid-pic-content" data-role="grid-list-container" >\r\n                        \r\n                    </div>\r\n\r\n                    <div data-role="load-more-container">\r\n                        \r\n                    </div>\r\n\r\n                    <div class="space-bottom"></div>\r\n\r\n                </div>\r\n\r\n\r\n        </div>\r\n    </div>\r\n\r\n</main>';
        return buffer;
    });
});

define("pai/vwx0.0.1-beta/account/fans_follows/collection-debug", [ "pai/vwx0.0.1-beta/common/global_config-debug", "pai/vwx0.0.1-beta/account/fans_follows/model-debug", "utility/backbone/1.1.2/backbone-debug", "pai/vwx0.0.1-beta/common/collection-debug", "$-debug", "pai/vwx0.0.1-beta/ui/m_alert/view-debug", "pai/vwx0.0.1-beta/common/view-debug", "utility/handlebars/1.3.0/runtime-debug", "pai/vwx0.0.1-beta/common/utility-debug", "pai/vwx0.0.1-beta/common/cross_domain_storage-debug", "matcha/cookie/1.0.0/cookie-debug", "utility/underscore/1.6.0/underscore-debug", "pai/vwx0.0.1-beta/frame/ua-debug" ], function(require, exports, module) {
    var global_config = require("pai/vwx0.0.1-beta/common/global_config-debug");
    var model = require("pai/vwx0.0.1-beta/account/fans_follows/model-debug");
    var collection = require("pai/vwx0.0.1-beta/common/collection-debug");
    var m_alert = require("pai/vwx0.0.1-beta/ui/m_alert/view-debug");
    module.exports = collection.extend({
        model: model,
        url: global_config.ajax_url.fans_or_follow,
        has_next_page: false,
        /**
         * 事件安装
         * @private
         */
        _setup_events: function() {
            var self = this;
            self.on("before:fetch", function(xhr, options) {
                if (options.reset) {
                    // 设置页数
                    self.set_current_page(1);
                }
                self._fetch_xhr = xhr;
                self.set_state("sending");
            }).on("success:fetch", function(response, options) {
                /// 更新当前页数
                if (!response.code && !options.reset) {
                    var current_page = self.get_current_page();
                    self.set_current_page(++current_page);
                }
                self.has_next_page = response.result_data.has_next_page;
            }).on("complete:fetch", function(xhr, status) {
                self.set_state("complete");
                delete self._fetch_xhr;
            });
        },
        parse: function(response) {
            if (response.result_data.list) {
                return response.result_data.list;
            }
            return response;
        },
        initialize: function(options) {
            options = options || {};
            var self = this;
            self._setup_events();
            self.set_attrs(options);
            type = options.type;
            user_id = options.user_id;
        },
        get_attrs: function() {
            var self = this;
            return self.attrs;
        },
        set_attrs: function(data) {
            var self = this;
            self.attrs = $.extend({}, self.attrs, data);
        },
        /**
         * 获取状态
         */
        get_state: function() {
            var self = this;
            return self._state || false;
        },
        /**
         * 设置状态
         * @param state
         */
        set_state: function(state) {
            var self = this;
            self._state = state;
        },
        /**
         * 获取当前页数
         */
        get_current_page: function() {
            var self = this;
            return this._curren_page || 1;
        },
        /**
         * 设置当前页数
         * @param page
         */
        set_current_page: function(page) {
            var self = this;
            this._curren_page = page;
        },
        /**
         * 获取请求参数
         */
        get_rqs_params: function() {
            var self = this;
            return self._rqs_params || {};
        },
        /**
         * 设置请求参数
         * @param data
         */
        set_rqs_params: function(data) {
            var self = this;
            self._rqs_params = $.extend({}, self._rqs_params, data);
        },
        get_list: function(page) {
            var self = this;
            if (self.get_state() == "sending") {
                // 发送中状态不做重复请求
                return;
            }
            if (page < 1) {
                // 非法页数
                throw new Error("page is invalid");
            }
            self.set_rqs_params({
                type: type,
                page: page,
                user_id: user_id
            });
            self.fetch({
                url: self.url,
                remove: page == 1,
                reset: page == 1,
                data: self.get_rqs_params(),
                cache: false,
                beforeSend: function(xhr, options) {
                    self.trigger("before:fetch", xhr, options);
                },
                success: function(collection, response, options) {
                    var data_len = response.result_data.list.length;
                    self.trigger("success:fetch", response, options);
                },
                error: function(collection, response, options) {
                    self.trigger("error:fetch", response, options);
                },
                complete: function(xhr, status) {
                    self.trigger("complete:fetch", xhr, status);
                }
            });
            return self;
        }
    });
});

/**
 * 城市选择 模型
 * 汤圆 2014.8.19
 */
define("pai/vwx0.0.1-beta/account/fans_follows/model-debug", [ "pai/vwx0.0.1-beta/common/global_config-debug", "utility/backbone/1.1.2/backbone-debug" ], function(require, exports, module) {
    var global_config = require("pai/vwx0.0.1-beta/common/global_config-debug");
    var Backbone = require("utility/backbone/1.1.2/backbone-debug");
    module.exports = Backbone.Model.extend({
        idAttribute: "user_id",
        "default": {
            user_id: "",
            city: 0,
            chest: 0,
            cup: "",
            waist: 0,
            hip: 0,
            height: 0,
            weight: 0,
            intro: "",
            honor: "",
            user_level: "",
            cameraman_require: 0,
            set_top: 0,
            add_time: 0,
            update_time: 0,
            pv: 0,
            user_icon_165: "",
            user_icon_468: ""
        },
        /**
         * 安装事件
         * @private
         */
        _setup_events: function() {},
        parse: function(response) {
            if (response.result_data) {
                return response.result_data;
            }
            return response;
        },
        initialize: function() {
            var self = this;
            self._setup_events();
        }
    });
});

/**
 * hudw 2014.11.05
 * 注册页面
 */
define("pai/vwx0.0.1-beta/account/register/reg/index-debug", [ "$-debug", "pai/vwx0.0.1-beta/frame/page_control-debug", "utility/backbone/1.1.2/backbone-debug", "pai/vwx0.0.1-beta/frame/ua-debug", "pai/vwx0.0.1-beta/frame/page-debug", "utility/zepto/modules/data/1.1.4/data-debug", "utility/hammer/plugins/jquery.hammer/1.1.3/jquery.hammer-debug", "utility/underscore/1.6.0/underscore-debug", "pai/vwx0.0.1-beta/common/utility-debug", "pai/vwx0.0.1-beta/common/cross_domain_storage-debug", "matcha/cookie/1.0.0/cookie-debug", "pai/vwx0.0.1-beta/account/register/reg/view-debug", "pai/vwx0.0.1-beta/common/view-debug", "utility/handlebars/1.3.0/runtime-debug", "pai/vwx0.0.1-beta/common/global_config-debug", "pai/vwx0.0.1-beta/common/scroll-debug", "utility/iscroll/4.2.5/iscroll-debug", "pai/vwx0.0.1-beta/common/img-ready-debug", "pai/vwx0.0.1-beta/ui/m_alert/view-debug", "pai/vwx0.0.1-beta/ui/m_select/view-debug", "pai/vwx0.0.1-beta/common/new_iscroll-debug", "pai/vwx0.0.1-beta/base/ua-debug", "pai/vwx0.0.1-beta/ui/dialog/index-debug", "pai/vwx0.0.1-beta/common/template-helpers-debug", "pai/vwx0.0.1-beta/common/I_APP-debug", "pai/vwx0.0.1-beta/common/I_WX-debug" ], function(require, exports, module) {
    var $ = require("$-debug");
    var page_control = require("pai/vwx0.0.1-beta/frame/page_control-debug");
    var ua = require("pai/vwx0.0.1-beta/frame/ua-debug");
    var utility = require("pai/vwx0.0.1-beta/common/utility-debug");
    var reg_view = require("pai/vwx0.0.1-beta/account/register/reg/view-debug");
    //var guide = require('../../../ui/guide/view');
    //var first_guide_tpl = require('../../../ui/guide/tpl/guide_camera.handlebars');
    var global_config = require("pai/vwx0.0.1-beta/common/global_config-debug");
    var WeixinApi = require("pai/vwx0.0.1-beta/common/I_WX-debug");
    var m_alert = require("pai/vwx0.0.1-beta/ui/m_alert/view-debug");
    page_control.add_page([ function() {
        return {
            title: "注册",
            route: {
                "account/register/reg(/:is_can_back)": "account/register/reg"
            },
            dom_not_cache: true,
            ignore_exist: true,
            transition_type: "slide",
            page_init: function(page_view, route_params_arr, route_params_obj) {
                var self = this;
                self.on("success:login:fetch", function(response) {
                    window.location.href = response.result_data.auth_url;
                }).on("error:login:fetch", function() {
                    m_alert.show("请求失败，请重试", "error");
                });
                console.log(utility.wei_xin.url_head + $(self.el.nextSibling).attr("data-page-url"));
                var url = utility.wei_xin.url_head + $(self.el).attr("data-page-url");
                var url2 = utility.wei_xin.url_head + $(self.el.nextSibling).attr("data-page-url");
                if (/login/.test(url2) || /reg/.test(url2)) {
                    url2 = utility.wei_xin.url_head + "mine";
                }
                console.log("url:" + url);
                console.log("url2:" + url2);
                if (WeixinApi.isWexXin() && (!utility.wei_xin.is_authority() || utility.wei_xin.weixin_authority_scope() != "snsapi_userinfo")) {
                    m_alert.show("请求授权中", "loading");
                    utility.ajax_request({
                        url: global_config.ajax_url.auth_act,
                        type: "POST",
                        data: {
                            url: url,
                            url2: url2,
                            op: "snsapi_userinfo"
                        },
                        cache: false,
                        beforeSend: function(xhr, options) {
                            self.trigger("before:login:fetch", xhr, options);
                        },
                        success: function(response, options) {
                            self.trigger("success:login:fetch", response, options);
                        },
                        error: function(xhr, options) {
                            self.trigger("error:login:fetch", xhr, options);
                        },
                        complete: function(xhr, status) {
                            self.trigger("complete:login:fetch", xhr, status);
                        }
                    });
                    return;
                }
                var is_can_back = utility.int(route_params_arr[0]);
                // ios系统增加 手机号码输入
                var is_iphone = ua.isIDevice ? 1 : 0;
                var reg_view_obj = new reg_view({
                    templateModel: {
                        is_iphone: is_iphone
                    },
                    model: utility.user,
                    parentNode: self.$el,
                    is_can_back: is_can_back
                }).render();
            },
            page_before_show: function() {},
            page_show: function() {},
            page_before_hide: function() {}
        };
    } ]);
});

/**
 * Created by nolest on 2014/9/18.
 */
define("pai/vwx0.0.1-beta/account/register/reg/view-debug", [ "$-debug", "pai/vwx0.0.1-beta/frame/page_control-debug", "utility/backbone/1.1.2/backbone-debug", "pai/vwx0.0.1-beta/frame/ua-debug", "pai/vwx0.0.1-beta/frame/page-debug", "utility/zepto/modules/data/1.1.4/data-debug", "utility/hammer/plugins/jquery.hammer/1.1.3/jquery.hammer-debug", "utility/underscore/1.6.0/underscore-debug", "pai/vwx0.0.1-beta/common/view-debug", "utility/handlebars/1.3.0/runtime-debug", "pai/vwx0.0.1-beta/common/global_config-debug", "pai/vwx0.0.1-beta/common/utility-debug", "pai/vwx0.0.1-beta/common/cross_domain_storage-debug", "matcha/cookie/1.0.0/cookie-debug", "pai/vwx0.0.1-beta/common/scroll-debug", "utility/iscroll/4.2.5/iscroll-debug", "pai/vwx0.0.1-beta/common/img-ready-debug", "pai/vwx0.0.1-beta/ui/m_alert/view-debug", "pai/vwx0.0.1-beta/ui/m_select/view-debug", "pai/vwx0.0.1-beta/common/new_iscroll-debug", "pai/vwx0.0.1-beta/base/ua-debug", "pai/vwx0.0.1-beta/ui/dialog/index-debug", "pai/vwx0.0.1-beta/common/template-helpers-debug", "pai/vwx0.0.1-beta/common/I_APP-debug" ], function(require, exports, module) {
    var $ = require("$-debug");
    var page_control = require("pai/vwx0.0.1-beta/frame/page_control-debug");
    var View = require("pai/vwx0.0.1-beta/common/view-debug");
    var global_config = require("pai/vwx0.0.1-beta/common/global_config-debug");
    var reg_tpl = require("pai/vwx0.0.1-beta/account/register/reg/tpl/main-debug.handlebars");
    var utility = require("pai/vwx0.0.1-beta/common/utility-debug");
    var Scroll = require("pai/vwx0.0.1-beta/common/scroll-debug");
    var m_alert = require("pai/vwx0.0.1-beta/ui/m_alert/view-debug");
    var m_select = require("pai/vwx0.0.1-beta/ui/m_select/view-debug");
    var dialog = require("pai/vwx0.0.1-beta/ui/dialog/index-debug");
    var App = require("pai/vwx0.0.1-beta/common/I_APP-debug");
    var login_phone_view = View.extend({
        attrs: {
            template: reg_tpl
        },
        events: {
            swiperight: function() {
                var self = this;
                if (self.get("is_can_back")) {
                    return;
                }
                page_control.back();
            },
            "tap [data-role=page-back]": function(ev) {
                page_control.back();
            },
            'tap [data-role="get_code"]': function() {
                var self = this;
                //不为数字 || 空 || 字符串中有空格时返回
                if (!parseInt(self.enter_phone.val()) || self.enter_phone.val().trim() == "" || self.enter_phone.val().trim().indexOf(" ") != -1) {
                    m_alert.show("手机号不对哦！", "error");
                    return;
                }
                if (self.counting) {
                    return;
                }
                self._count_down(60);
                self.get_verify_code({
                    phone: self.enter_phone.val(),
                    type: "bind_sent_verify_code"
                });
            },
            'tap [data-role="btn_login"]': function() {
                var self = this;
                //手机格式
                if (self.enter_phone.val().trim() == "" || self.enter_phone.val().trim().indexOf(" ") != -1) {
                    m_alert.show("手机号不对哦！", "error");
                    return;
                }
                //验证码格式
                if (self.enter_code.val().trim() == "" || self.enter_code.val().trim().indexOf(" ") != -1) {
                    m_alert.show("验证码格式不对哦！", "error");
                    return;
                }
                m_alert.show("提交中...", "loading");
                var action_type = "verify_phone";
                self.get_verify_code({
                    phone: self.enter_phone.val(),
                    verify_code: self.enter_code.val(),
                    type: action_type
                });
            },
            'tap [data-role="reg-look-look"]': function() {
                page_control.navigate_to_page(global_config.default_index_route);
            },
            'tap [data-role="old-login"]': function() {
                page_control.navigate_to_page("account/login/1");
            }
        },
        _count_down: function(sec) {
            var self = this;
            self.counting = true;
            self.count_btn.html(sec);
            self.count_Interval = setInterval(function() {
                sec--;
                if (sec == 0) {
                    self._stop_count_down();
                } else {
                    self.count_btn.html(sec);
                }
            }, 1e3);
        },
        _stop_count_down: function() {
            var self = this;
            clearInterval(self.count_Interval);
            self.count_btn.html("重新获取");
            self.counting = false;
        },
        _setup_events: function() {
            var self = this;
            self.$('[data-role="enter_phone"]')[0].oninput = function() {
                if (self.enter_phone.val() != "") {
                    self.$btn.removeClass("ui-button-dark");
                    self.$btn.addClass("ui-button-primary").removeAttr("disabled");
                } else {
                    self.$btn.addClass("ui-button-dark").attr("disabled", "disabled");
                    self.$btn.removeClass("ui-button-primary");
                }
            };
            //ui-button-primary
            self.on("render", function() {
                self._setup_scroll();
            });
            self.on("success:fetch_verify_phone", function(response, options) {
                var response = response.result_data;
                var msg = response.msg;
                var code = response.code;
                if (code == 1) {
                    m_alert.show(msg, "right");
                    self._stop_count_down();
                    page_control.navigate_to_page("account/register/login_pw", {
                        phone: self.enter_phone.val(),
                        verify_code: self.enter_code.val(),
                        is_from_reg: true
                    });
                } else {
                    m_alert.show(msg, "error");
                }
            }).on("success:fetch_bind_sent_verify_code", function(response, options) {
                var response = response.result_data;
                var msg = response.msg;
                var code = response.code;
                self.has_reg = false;
                if (code == 1) {
                    m_alert.show(msg, "right");
                } else if (code == 2) {
                    m_alert.show(msg, "right", {
                        delay: 2e3
                    });
                    self._stop_count_down();
                    self.has_reg = true;
                    setTimeout(function() {
                        self.dialog_obj.show();
                    }, 2e3);
                } else {
                    m_alert.show(msg, "error");
                    // modify hudw 2014.11.8
                    self._stop_count_down();
                }
            }).on("error:fetch_code", function(response, options) {
                m_alert.show("网络异常", "error");
                self._stop_count_down();
            });
            // 提示层按钮安装
            self.dialog_obj.on("tap:button:save", function() {
                this.hide();
                page_control.navigate_to_page("account/login/has_reg_user_id_" + self.enter_phone.val());
            }).on("tap:button:close", function() {
                this.hide();
            });
        },
        _setup_dialog: function() {
            var self = this;
            // 已注册过的提示层安装 hudw 2014.11.21
            self.dialog_obj = new dialog({
                content: "<p>这个号码已经注册过了</p><br/>你可以选择",
                buttons: [ {
                    name: "save",
                    text: "登录"
                }, {
                    name: "close",
                    text: "返回"
                } ]
            });
        },
        _setup_scroll: function() {
            var self = this;
            var view_scroll_obj = Scroll(self.$container, {
                is_hide_dropdown: true
            });
            self.view_scroll_obj = view_scroll_obj;
        },
        setup: function() {
            var self = this;
            self.$container = self.$('[data-role="container"]');
            self.counting = false;
            self.count_btn = self.$('[data-role="get_code"]');
            self.enter_phone = self.$('[data-role="enter_phone"]');
            self.enter_code = self.$('[data-role="verify_code"]');
            self.$btn = self.$('[data-role="btn_login"]');
            self._setup_dialog();
            self._setup_events();
            if (self.get("is_can_back")) {
                self.$('[data-role="page-back"]').addClass("fn-invisible");
            }
        },
        render: function() {
            var self = this;
            View.prototype.render.apply(self);
            self.trigger("render");
            return self;
        },
        get_verify_code: function(data) {
            var self = this;
            utility.ajax_request({
                data: data,
                url: global_config.ajax_url.reg,
                success: function(response) {
                    switch (data.type) {
                      case "bind_sent_verify_code":
                        self.trigger("success:fetch_bind_sent_verify_code", response);
                        break;

                      case "verify_phone":
                        self.trigger("success:fetch_verify_phone", response);
                        break;
                    }
                },
                error: function() {
                    self.trigger("error:fetch_code");
                }
            });
        }
    });
    module.exports = login_phone_view;
});

define("pai/vwx0.0.1-beta/account/register/reg/tpl/main-debug.handlebars", [ "utility/handlebars/1.3.0/runtime-debug" ], function(require, exports, module) {
    var Handlebars = require("utility/handlebars/1.3.0/runtime-debug");
    var template = Handlebars.template;
    module.exports = template(function(Handlebars, depth0, helpers, partials, data) {
        this.compilerInfo = [ 4, ">= 1.0.0" ];
        helpers = helpers || {};
        for (var key in Handlebars.helpers) {
            helpers[key] = helpers[key] || Handlebars.helpers[key];
        }
        data = data || {};
        return '<main role="main">\r\n    <header class="nav-header reg-nav-header">\r\n        <div class="left-button-wrap" data-role="page-back">\r\n            <a><i class="icon icon-back"></i></a>\r\n        </div>\r\n        <h3 class="title">注册</h3>\r\n        <div class="right-button-wrap">\r\n\r\n        </div>\r\n        <div class="reg-look-look" data-role="reg-look-look">随便看看</div>\r\n    </header>\r\n    <div class="phone_and_pw_change_container" data-role="container">\r\n        <div class="warp-box">\r\n                <div class="verification-mobile" data-role="verification-mobile-container">\r\n                    <!-- <ul class="list">\r\n                        <li>\r\n                            <span class="btn-get" data-role="get_code">获取验证码</span>\r\n                            <input type="text" name=" " id=" " class="input-text exp"  placeholder="手机号" data-role="enter_phone">\r\n                        </li>\r\n                        <li>\r\n                            <input type="text" name=" " id=" " class="input-text"  placeholder="验证码" data-role="verify_code">\r\n                        </li>\r\n                    </ul> -->\r\n\r\n                    <div class="ui-input-mod">\r\n                        <div class="item">\r\n                            <input type="tel" class="ui-input  ui-input-size-large ui-input-block ui-input-border-bottom-none ui-input-top-left ui-input-top-right" placeholder="手机号" data-role="enter_phone">\r\n                            <div class="pop-tips">\r\n                                <button class="ui-button ui-button-primary ui-button-size-min " data-role="get_code">\r\n                                    <span class="ui-button-content">获取验证码</span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div class="item"><input type="tel" class="ui-input  ui-input-size-large ui-input-block ui-input-bottom-left ui-input-bottom-right" placeholder="验证码" data-role="verify_code"></div>\r\n                    </div>\r\n               \r\n\r\n                    <div class="btn">\r\n                        <button data-role="btn_login" class="ui-button ui-button-dark ui-button-size-large ui-button-block" disabled="disabled">\r\n                            <span class="ui-button-content">手机号一键注册</span>\r\n                        </button>\r\n                    </div>\r\n\r\n                    <div class="go-style" style="margin-top: 10px;">\r\n                        <div class="lbox" data-role="old-login" >\r\n                            <button class="ui-button  ui-button-size-middle  ui-button-block ui-button-nocolor" style="text-align: right;padding:0">\r\n                                <span class="ui-button-content">老用户登录</span>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n\r\n<!-- \r\n                    <div class="go-style" style="margin-top: 30px; text-align:center;color:#ff4978">\r\n                            广州摩幻时信息技术有限公司\r\n                    </div> -->\r\n\r\n                    <p class="p1 fn-hide">您将收到一条验证短信，绑定成功后，您可以使用手机号登录。我们不会泄露您的隐私。</p>\r\n                </div>\r\n        </div>\r\n    </div>\r\n</main>';
    });
});

/**
 * Created by nolest on 2014/11/21.
 *
 * 取消理由
 */
define("pai/vwx0.0.1-beta/mine/date_cancel_reason/index-debug", [ "$-debug", "pai/vwx0.0.1-beta/frame/page_control-debug", "utility/backbone/1.1.2/backbone-debug", "pai/vwx0.0.1-beta/frame/ua-debug", "pai/vwx0.0.1-beta/frame/page-debug", "utility/zepto/modules/data/1.1.4/data-debug", "utility/hammer/plugins/jquery.hammer/1.1.3/jquery.hammer-debug", "utility/underscore/1.6.0/underscore-debug", "pai/vwx0.0.1-beta/mine/date_cancel_reason/view-debug", "pai/vwx0.0.1-beta/common/view-debug", "utility/handlebars/1.3.0/runtime-debug", "pai/vwx0.0.1-beta/common/utility-debug", "pai/vwx0.0.1-beta/common/cross_domain_storage-debug", "matcha/cookie/1.0.0/cookie-debug", "pai/vwx0.0.1-beta/common/global_config-debug", "pai/vwx0.0.1-beta/common/scroll-debug", "utility/iscroll/4.2.5/iscroll-debug", "pai/vwx0.0.1-beta/common/img-ready-debug", "pai/vwx0.0.1-beta/ui/m_alert/view-debug", "pai/vwx0.0.1-beta/widget/abnormal/view-debug", "pai/vwx0.0.1-beta/widget/choosen_group/view-debug", "pai/vwx0.0.1-beta/common/I_APP-debug" ], function(require, exports, module) {
    var $ = require("$-debug");
    var page_control = require("pai/vwx0.0.1-beta/frame/page_control-debug");
    var cancel_view = require("pai/vwx0.0.1-beta/mine/date_cancel_reason/view-debug");
    var utility = require("pai/vwx0.0.1-beta/common/utility-debug");
    page_control.add_page([ function() {
        return {
            title: "取消理由",
            route: {
                "mine/date_cancel_reason/:date_id(/:type)": "mine/date_cancel_reason"
            },
            dom_not_cache: true,
            ignore_exist: true,
            transition_type: "slide",
            initialize: function() {},
            page_init: function(page_view, route_params_arr, route_params_obj) {
                var self = this;
                var from_app = utility.get_url_params(window.location.search, "from_app");
                var cancel_view_obj = new cancel_view({
                    from_app: utility.int(from_app),
                    cancel_wait: route_params_arr[1],
                    date_id: route_params_arr[0],
                    parentNode: self.$el
                }).render();
            },
            page_before_show: function() {},
            page_show: function() {},
            page_before_hide: function() {}
        };
    } ]);
});

/**
 * Created by nolest on 2014/11/21.
 *
 * 取消理由view
 */
define("pai/vwx0.0.1-beta/mine/date_cancel_reason/view-debug", [ "$-debug", "pai/vwx0.0.1-beta/frame/page_control-debug", "utility/backbone/1.1.2/backbone-debug", "pai/vwx0.0.1-beta/frame/ua-debug", "pai/vwx0.0.1-beta/frame/page-debug", "utility/zepto/modules/data/1.1.4/data-debug", "utility/hammer/plugins/jquery.hammer/1.1.3/jquery.hammer-debug", "utility/underscore/1.6.0/underscore-debug", "pai/vwx0.0.1-beta/common/view-debug", "utility/handlebars/1.3.0/runtime-debug", "pai/vwx0.0.1-beta/common/utility-debug", "pai/vwx0.0.1-beta/common/cross_domain_storage-debug", "matcha/cookie/1.0.0/cookie-debug", "pai/vwx0.0.1-beta/common/global_config-debug", "pai/vwx0.0.1-beta/common/scroll-debug", "utility/iscroll/4.2.5/iscroll-debug", "pai/vwx0.0.1-beta/common/img-ready-debug", "pai/vwx0.0.1-beta/ui/m_alert/view-debug", "pai/vwx0.0.1-beta/widget/abnormal/view-debug", "pai/vwx0.0.1-beta/widget/choosen_group/view-debug", "pai/vwx0.0.1-beta/common/I_APP-debug" ], function(require, exports, module) {
    var $ = require("$-debug");
    var page_control = require("pai/vwx0.0.1-beta/frame/page_control-debug");
    var View = require("pai/vwx0.0.1-beta/common/view-debug");
    var cancel_tpl = require("pai/vwx0.0.1-beta/mine/date_cancel_reason/tpl/main-debug.handlebars");
    var utility = require("pai/vwx0.0.1-beta/common/utility-debug");
    var global_config = require("pai/vwx0.0.1-beta/common/global_config-debug");
    var Scroll = require("pai/vwx0.0.1-beta/common/scroll-debug");
    var m_alert = require("pai/vwx0.0.1-beta/ui/m_alert/view-debug");
    var abnormal = require("pai/vwx0.0.1-beta/widget/abnormal/view-debug");
    var choosen_group_view = require("pai/vwx0.0.1-beta/widget/choosen_group/view-debug");
    var App = require("pai/vwx0.0.1-beta/common/I_APP-debug");
    var cancel_view = View.extend({
        attrs: {
            template: cancel_tpl
        },
        events: {
            swiperight: function() {
                page_control.back();
            },
            "tap [data-role=page-back]": function(ev) {
                page_control.back();
            },
            'tap [data-role="submit_btn"]': function(ev) {
                var self = this;
                self._send_data();
            }
        },
        _send_data: function() {
            var self = this;
            var btns = self.btn_group.get_value();
            var explain = self.$('[data-role="explain_text"]').val();
            var data = {
                date_id: self.get("date_id"),
                reason: btns[0].text,
                remark: explain
            };
            if (self.get("cancel_wait") == "cancel_wait") {
                data = $.extend(true, {}, data, {
                    type: "refund"
                });
            }
            utility.ajax_request({
                url: global_config.ajax_url.submit_date_cancel_application,
                type: "POST",
                data: data,
                cache: true,
                beforeSend: function(xhr, options) {
                    self.trigger("before:cancel_reason", xhr, options);
                },
                success: function(response, options) {
                    self.trigger("success:cancel_reason", response, options);
                },
                error: function(xhr, options) {
                    self.trigger("error:cancel_reason", xhr, options);
                },
                complete: function(xhr, status) {
                    self.trigger("complete:cancel_reason", xhr, status);
                }
            });
        },
        _setup_events: function() {
            var self = this;
            self.on("render", function() {
                self._setup_scroll();
            });
            self.on("success:cancel_reason", function(response, options) {
                var msg = response.result_data.msg;
                var code = response.result_data.data;
                if (code == 1) {
                    m_alert.show(msg, "right");
                    console.log(self.from_app);
                    if (self.from_app) {
                        App.app_back();
                    } else {
                        page_control.navigate_to_page("mine/consider_details_camera/" + self.get("date_id") + "/form_cancel");
                    }
                } else {
                    m_alert.show(msg, "error");
                }
            }).on("error:cancel_reason", function(response, options) {
                m_alert.show("提交失败，请重试", "error");
            }).on("complete:cancel_reason", function(response, options) {});
        },
        _setup_btn: function() {
            var self = this;
            var list = [ {
                selected: true,
                text: "时间原因"
            }, {
                selected: false,
                text: "身体原因"
            }, {
                selected: false,
                text: "合作原因"
            }, {
                selected: false,
                text: "天气原因"
            } ];
            self.btn_group = new choosen_group_view({
                templateModel: {
                    list: list
                },
                btn_per_line: 2,
                //每行按钮个数
                line_margin: "0px 0px 15px 0px",
                //每行margin
                btn_width: "143px",
                //按钮宽度
                parentNode: self.$btn_container,
                is_multiply: false
            }).render();
        },
        _setup_scroll: function() {
            var self = this;
            var view_scroll_obj = Scroll(self.$container, {
                is_hide_dropdown: true
            });
            self.$container.height(self.reset_viewport_height());
            self.view_scroll_obj = view_scroll_obj;
        },
        setup: function() {
            var self = this;
            self.from_app = self.get("from_app");
            self.$container = self.$('[data-role="container"]');
            self.$btn_container = self.$('[data-role="reason-type"]');
            self._setup_btn();
            self._setup_events();
        },
        render: function() {
            var self = this;
            View.prototype.render.apply(self);
            self.trigger("render");
            return self;
        },
        reset_viewport_height: function() {
            return utility.get_view_port_height("nav") - 41;
        }
    });
    module.exports = cancel_view;
});

define("pai/vwx0.0.1-beta/mine/date_cancel_reason/tpl/main-debug.handlebars", [ "utility/handlebars/1.3.0/runtime-debug" ], function(require, exports, module) {
    var Handlebars = require("utility/handlebars/1.3.0/runtime-debug");
    var template = Handlebars.template;
    module.exports = template(function(Handlebars, depth0, helpers, partials, data) {
        this.compilerInfo = [ 4, ">= 1.0.0" ];
        helpers = helpers || {};
        for (var key in Handlebars.helpers) {
            helpers[key] = helpers[key] || Handlebars.helpers[key];
        }
        data = data || {};
        return '<main role="main" class="cancel-reason ">\r\n    <header class="nav-header">\r\n        <div class="left-button-wrap" data-role="page-back">\r\n            <a><i class="icon icon-back"></i></a>\r\n        </div>\r\n        <h3 class="title">取消理由</h3>\r\n        <div class="right-button-wrap"></div>\r\n    </header>\r\n\r\n    <div class="content-body">\r\n        <div class="container"  data-role="container">\r\n            <div class="warp-box">\r\n                <div>请选择取消的理由：</div>\r\n                <div class="reason-type" data-role="reason-type"></div>\r\n                <div class="explain">\r\n                    <div class="ui-textarea">\r\n                        <div class="ui-textarea-wrap">\r\n                            <textarea data-role="explain_text" name=" " id=" " class="textarea ui-input-top-left ui-input-top-right ui-input-bottom-left ui-input-bottom-right" placeholder="补充说明"></textarea>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="btn" data-role="btn_container">\r\n                    <button class="ui-button ui-button-primary ui-button-size-large ui-button-block" data-role="submit_btn">\r\n                        <span class="ui-button-content">提交</span>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</main>';
    });
});

/**
 * 专题 列表基础框架
 * hudw 2014.8.4
 * @param  {[type]} require
 * @param  {[type]} exports
 * @param  {[type]} module
 * @return {[type]}
 */
define("pai/vwx0.0.1-beta/topic/index-debug", [ "$-debug", "pai/vwx0.0.1-beta/frame/page_control-debug", "utility/backbone/1.1.2/backbone-debug", "pai/vwx0.0.1-beta/frame/ua-debug", "pai/vwx0.0.1-beta/frame/page-debug", "utility/zepto/modules/data/1.1.4/data-debug", "utility/hammer/plugins/jquery.hammer/1.1.3/jquery.hammer-debug", "utility/underscore/1.6.0/underscore-debug", "pai/vwx0.0.1-beta/common/utility-debug", "pai/vwx0.0.1-beta/common/cross_domain_storage-debug", "matcha/cookie/1.0.0/cookie-debug", "pai/vwx0.0.1-beta/topic/list/view-debug", "pai/vwx0.0.1-beta/common/view-debug", "utility/handlebars/1.3.0/runtime-debug", "pai/vwx0.0.1-beta/common/scroll-debug", "utility/iscroll/4.2.5/iscroll-debug", "pai/vwx0.0.1-beta/common/img-ready-debug", "pai/vwx0.0.1-beta/ui/m_alert/view-debug", "pai/vwx0.0.1-beta/topic/collection-debug", "pai/vwx0.0.1-beta/common/global_config-debug", "pai/vwx0.0.1-beta/topic/model-debug", "pai/vwx0.0.1-beta/common/collection-debug" ], function(require, exports, module) {
    var $ = require("$-debug");
    var page_control = require("pai/vwx0.0.1-beta/frame/page_control-debug");
    var utility = require("pai/vwx0.0.1-beta/common/utility-debug");
    var topic_view = require("pai/vwx0.0.1-beta/topic/list/view-debug");
    var topic_collection = require("pai/vwx0.0.1-beta/topic/collection-debug");
    var topic_html_tpl = "";
    page_control.add_page([ function() {
        return {
            title: "专题列表",
            route: {
                topic_list: "topic_list"
            },
            transition_type: "slide",
            page_init: function(page_view, route_params_arr, route_params_obj) {
                var self = this;
                self.topic_collection_obj = new topic_collection();
                var topic_view_obj = new topic_view({
                    parentNode: self.$el,
                    collection: self.topic_collection_obj
                }).render();
                topic_view_obj.refresh();
            },
            page_before_show: function() {
                var self = this;
            },
            page_show: function() {},
            page_before_show: function() {
                var self = this;
            },
            page_before_hide: function() {
                var self = this;
            },
            page_hide: function() {
                var self = this;
            }
        };
    } ]);
});

/**
 * 主题列表视图
 *
 * hdw 2014.10.27
 */
define("pai/vwx0.0.1-beta/topic/list/view-debug", [ "$-debug", "pai/vwx0.0.1-beta/frame/page_control-debug", "utility/backbone/1.1.2/backbone-debug", "pai/vwx0.0.1-beta/frame/ua-debug", "pai/vwx0.0.1-beta/frame/page-debug", "utility/zepto/modules/data/1.1.4/data-debug", "utility/hammer/plugins/jquery.hammer/1.1.3/jquery.hammer-debug", "utility/underscore/1.6.0/underscore-debug", "pai/vwx0.0.1-beta/common/view-debug", "utility/handlebars/1.3.0/runtime-debug", "pai/vwx0.0.1-beta/common/utility-debug", "pai/vwx0.0.1-beta/common/cross_domain_storage-debug", "matcha/cookie/1.0.0/cookie-debug", "pai/vwx0.0.1-beta/common/scroll-debug", "utility/iscroll/4.2.5/iscroll-debug", "pai/vwx0.0.1-beta/common/img-ready-debug", "pai/vwx0.0.1-beta/ui/m_alert/view-debug" ], function(require, exports, module) {
    var $ = require("$-debug");
    var page_control = require("pai/vwx0.0.1-beta/frame/page_control-debug");
    var View = require("pai/vwx0.0.1-beta/common/view-debug");
    var topic_list_tpl = require("pai/vwx0.0.1-beta/topic/tpl/list-debug.handlebars");
    var main_tpl = require("pai/vwx0.0.1-beta/topic/tpl/main-debug.handlebars");
    var utility = require("pai/vwx0.0.1-beta/common/utility-debug");
    var Scroll = require("pai/vwx0.0.1-beta/common/scroll-debug");
    var m_alert = require("pai/vwx0.0.1-beta/ui/m_alert/view-debug");
    var topic_list_view = View.extend({
        attrs: {
            template: main_tpl
        },
        className: "topic-list-scroll-wrapper",
        events: {
            "tap [data-role=page-back]": function(ev) {
                page_control.back();
            },
            "tap [data-nav-page]": function(ev) {
                var $cur_btn = $(ev.currentTarget);
                var address = $cur_btn.attr("data-address");
                var link_type = $cur_btn.attr("data-link_type");
                switch (link_type) {
                  case "inside":
                    if (address) {
                        page_control.navigate_to_page(address);
                    }
                    break;

                  case "outside":
                    if (address) {
                        windw.location.href = address;
                    }
                    break;

                  case "other":
                    break;
                }
            },
            'tap [data-role="nav-to-info"]': function(ev) {
                var self = this;
                var $cur_btn = $(ev.currentTarget);
                var topic_id = $cur_btn.attr("data-topic-id");
                if (topic_id) {
                    page_control.navigate_to_page("topic/" + topic_id);
                }
            }
        },
        /**
         * 安装事件
         * @private
         */
        _setup_events: function() {
            var self = this;
            self.collection.on("before:list:fetch", function(response) {
                m_alert.show("加载中...", "loading", {
                    delay: -1
                });
            }).on("success:list:fetch", function(response) {
                m_alert.hide();
                self._render_topic_list(response);
            }).on("error:list:fetch", function(response) {
                m_alert.hide();
            });
            self.on("update_list", function() {
                if (!self.$scroll_view_obj) {
                    self._setup_scroll();
                    self.$scroll_view_obj.resetLazyLoad();
                    self.$scroll_view_obj.reset_top();
                    self.$scroll_view_obj.refresh();
                    return;
                }
                self.$scroll_view_obj.resetLazyLoad();
                self.$scroll_view_obj.reset_top();
                self.$scroll_view_obj.refresh();
            });
            self.once("render", self._render_after, self);
        },
        _render_after: function() {
            var self = this;
        },
        _render_topic_list: function(data) {
            var self = this;
            var list = data.result_data.list;
            var html_str = topic_list_tpl({
                list: list
            });
            // 根据reset判断是否分页
            var method = self.collection.reset ? "html" : "append";
            self.$('[data-role="list-container"]')[method](html_str);
            self._drop_reset();
            self.trigger("update_list");
        },
        _setup_scroll: function() {
            var self = this;
            var view_scroll_obj = Scroll(self.$('[data-role="scroll_content"]'), {
                is_hide_dropdown: false,
                lazyLoad: true
            });
            self.$scroll_view_obj = view_scroll_obj;
            self.$scroll_view_obj.on("dropload", function(e) {
                self.refresh();
            });
        },
        _drop_reset: function() {
            var self = this;
            self.$scroll_view_obj && self.$scroll_view_obj.resetload();
        },
        /**
         * 视图初始化入口
         */
        setup: function() {
            var self = this;
            //滚动容器
            self.$container = self.$el;
            //安装事件
            self._setup_events();
            self.$('[data-role="scroll_content"]').height(self.reset_viewport_height());
        },
        render: function() {
            var self = this;
            // 调用渲染函数
            View.prototype.render.apply(self);
            self.trigger("render");
            return self;
        },
        get_more: function(page) {
            var self = this;
            self.collection.get_list(page);
        },
        /* 刷新方法
         *
         */
        refresh: function() {
            var self = this;
            self.collection.get_list(1);
        },
        reset_viewport_height: function() {
            return utility.get_view_port_height("nav");
        }
    });
    module.exports = topic_list_view;
});

define("pai/vwx0.0.1-beta/topic/tpl/list-debug.handlebars", [ "utility/handlebars/1.3.0/runtime-debug" ], function(require, exports, module) {
    var Handlebars = require("utility/handlebars/1.3.0/runtime-debug");
    var template = Handlebars.template;
    module.exports = template(function(Handlebars, depth0, helpers, partials, data) {
        this.compilerInfo = [ 4, ">= 1.0.0" ];
        helpers = helpers || {};
        for (var key in Handlebars.helpers) {
            helpers[key] = helpers[key] || Handlebars.helpers[key];
        }
        data = data || {};
        var buffer = "", stack1, functionType = "function", escapeExpression = this.escapeExpression, self = this;
        function program1(depth0, data) {
            var buffer = "", stack1, helper;
            buffer += '\r\n    <li data-role="nav-to-info" data-topic-id="';
            if (helper = helpers.id) {
                stack1 = helper.call(depth0, {
                    hash: {},
                    data: data
                });
            } else {
                helper = depth0 && depth0.id;
                stack1 = typeof helper === functionType ? helper.call(depth0, {
                    hash: {},
                    data: data
                }) : helper;
            }
            buffer += escapeExpression(stack1) + '">\r\n        <!--div class="topic-title title">';
            if (helper = helpers.title) {
                stack1 = helper.call(depth0, {
                    hash: {},
                    data: data
                });
            } else {
                helper = depth0 && depth0.title;
                stack1 = typeof helper === functionType ? helper.call(depth0, {
                    hash: {},
                    data: data
                }) : helper;
            }
            buffer += escapeExpression(stack1) + '</div-->\r\n        <div class="topic-front">\r\n            <i class="img image-img" data-lazyload="';
            if (helper = helpers.cover_image) {
                stack1 = helper.call(depth0, {
                    hash: {},
                    data: data
                });
            } else {
                helper = depth0 && depth0.cover_image;
                stack1 = typeof helper === functionType ? helper.call(depth0, {
                    hash: {},
                    data: data
                }) : helper;
            }
            buffer += escapeExpression(stack1) + '" >\r\n            </i>\r\n        </div>\r\n    </li>\r\n';
            return buffer;
        }
        buffer += "\r\n";
        stack1 = helpers.each.call(depth0, depth0 && depth0.list, {
            hash: {},
            inverse: self.noop,
            fn: self.program(1, program1, data),
            data: data
        });
        if (stack1 || stack1 === 0) {
            buffer += stack1;
        }
        buffer += "\r\n";
        return buffer;
    });
});

define("pai/vwx0.0.1-beta/topic/tpl/main-debug.handlebars", [ "utility/handlebars/1.3.0/runtime-debug" ], function(require, exports, module) {
    var Handlebars = require("utility/handlebars/1.3.0/runtime-debug");
    var template = Handlebars.template;
    module.exports = template(function(Handlebars, depth0, helpers, partials, data) {
        this.compilerInfo = [ 4, ">= 1.0.0" ];
        helpers = helpers || {};
        for (var key in Handlebars.helpers) {
            helpers[key] = helpers[key] || Handlebars.helpers[key];
        }
        data = data || {};
        return '<main role="main">\r\n\r\n\r\n\r\n\r\n    <header class="nav-header ">\r\n        <div class="left-button-wrap"  data-role="page-back">\r\n            <a><i class="icon icon-back"></i></a>\r\n        </div>\r\n\r\n        <h3 class="title">专题列表</h3>\r\n\r\n        <div class="right-button-wrap">\r\n            <a><i class="icon icon-cog"></i></a>\r\n        </div>\r\n    </header>\r\n\r\n    <div>\r\n        <div data-role="scroll_content">\r\n            <div data-role="scoll-wrapper">\r\n                <ul class="topic-list-container" data-role="list-container">\r\n\r\n                </ul>\r\n                <div class="space-bottom" style="padding-bottom: 10px;"></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n\r\n</main>\r\n';
    });
});

define("pai/vwx0.0.1-beta/topic/collection-debug", [ "pai/vwx0.0.1-beta/common/global_config-debug", "pai/vwx0.0.1-beta/topic/model-debug", "utility/backbone/1.1.2/backbone-debug", "pai/vwx0.0.1-beta/common/collection-debug", "$-debug" ], function(require, exports, module) {
    var global_config = require("pai/vwx0.0.1-beta/common/global_config-debug");
    var model = require("pai/vwx0.0.1-beta/topic/model-debug");
    var collection = require("pai/vwx0.0.1-beta/common/collection-debug");
    module.exports = collection.extend({
        model: model,
        url: global_config.ajax_url.get_topic_list,
        /**
         * 事件安装
         * @private
         */
        _setup_events: function() {
            var self = this;
        },
        parse: function(response) {
            //console.log(response)
            if (response.result_data) {
                return response.result_data.list;
            }
            return response;
        },
        initialize: function(options) {
            options = options || {};
            var self = this;
            self._setup_events();
        },
        /**
         * 获取主题列表
         */
        get_list: function(page) {
            var self = this;
            self.fetch({
                url: self.url,
                data: {
                    page: page
                },
                reset: page === 1,
                cache: false,
                beforeSend: function(xhr, options) {
                    self.trigger("before:list:fetch", xhr, options);
                },
                success: function(collection, response, options) {
                    self.trigger("success:list:fetch", response, options);
                },
                error: function(collection, response, options) {
                    self.trigger("error:list:fetch", response, options);
                },
                complete: function(xhr, status) {
                    self.trigger("complete:list:fetch", xhr, status);
                }
            });
        }
    });
});

/**
 * 基础页面框架
 * 汤圆  
 * @param  {[type]} require
 * @param  {[type]} exports
 * @param  {[type]} module
 * @return {[type]}
 */
define("pai/vwx0.0.1-beta/account/login_tips/index-debug", [ "$-debug", "pai/vwx0.0.1-beta/frame/page_control-debug", "utility/backbone/1.1.2/backbone-debug", "pai/vwx0.0.1-beta/frame/ua-debug", "pai/vwx0.0.1-beta/frame/page-debug", "utility/zepto/modules/data/1.1.4/data-debug", "utility/hammer/plugins/jquery.hammer/1.1.3/jquery.hammer-debug", "utility/underscore/1.6.0/underscore-debug", "pai/vwx0.0.1-beta/common/I_APP-debug", "pai/vwx0.0.1-beta/common/utility-debug", "pai/vwx0.0.1-beta/common/cross_domain_storage-debug", "matcha/cookie/1.0.0/cookie-debug", "pai/vwx0.0.1-beta/common/global_config-debug", "pai/vwx0.0.1-beta/ui/m_alert/view-debug", "pai/vwx0.0.1-beta/common/view-debug", "utility/handlebars/1.3.0/runtime-debug", "pai/vwx0.0.1-beta/account/login_tips/view-debug", "pai/vwx0.0.1-beta/common/template-helpers-debug", "pai/vwx0.0.1-beta/common/scroll-debug", "utility/iscroll/4.2.5/iscroll-debug", "pai/vwx0.0.1-beta/common/img-ready-debug", "pai/vwx0.0.1-beta/widget/footer/index-debug", "pai/vwx0.0.1-beta/common/system-debug", "pai/vwx0.0.1-beta/account/login_tips/model-debug" ], function(require, exports, module) {
    //基础框架
    var $ = require("$-debug");
    var page_control = require("pai/vwx0.0.1-beta/frame/page_control-debug");
    var I_App = require("pai/vwx0.0.1-beta/common/I_APP-debug");
    var utility = require("pai/vwx0.0.1-beta/common/utility-debug");
    //当前页引用
    var current_page_view = require("pai/vwx0.0.1-beta/account/login_tips/view-debug");
    var model = require("pai/vwx0.0.1-beta/account/login_tips/model-debug");
    //var current_page_collection = require('./collection');
    page_control.add_page([ function() {
        return {
            title: "登陆提示",
            route: {
                "account/login_tips": "account/login_tips"
            },
            dom_not_cache: false,
            transition_type: "slide",
            initialize: function() {},
            page_init: function(page_view, route_params_arr, route_params_obj) {
                var self = this;
                // 传递参数
                // var param_a = route_params_arr[0];
                self.model = new model({
                    param_a: "test"
                });
                self.view = new current_page_view({
                    model: self.model,
                    parentNode: self.$el
                }).render();
            },
            page_before_show: function() {
                var self = this;
            },
            page_show: function() {},
            page_before_hide: function() {}
        };
    } ]);
});

/**
 * 基础页面框架
 * 汤圆
 * @param  {[type]} require
 * @param  {[type]} exports
 * @param  {[type]} module
 * @return {[type]}
 */
define("pai/vwx0.0.1-beta/account/login_tips/view-debug", [ "$-debug", "pai/vwx0.0.1-beta/frame/page_control-debug", "utility/backbone/1.1.2/backbone-debug", "pai/vwx0.0.1-beta/frame/ua-debug", "pai/vwx0.0.1-beta/frame/page-debug", "utility/zepto/modules/data/1.1.4/data-debug", "utility/hammer/plugins/jquery.hammer/1.1.3/jquery.hammer-debug", "utility/underscore/1.6.0/underscore-debug", "pai/vwx0.0.1-beta/common/view-debug", "utility/handlebars/1.3.0/runtime-debug", "pai/vwx0.0.1-beta/common/utility-debug", "pai/vwx0.0.1-beta/common/cross_domain_storage-debug", "matcha/cookie/1.0.0/cookie-debug", "pai/vwx0.0.1-beta/common/template-helpers-debug", "pai/vwx0.0.1-beta/common/scroll-debug", "utility/iscroll/4.2.5/iscroll-debug", "pai/vwx0.0.1-beta/common/img-ready-debug", "pai/vwx0.0.1-beta/widget/footer/index-debug", "pai/vwx0.0.1-beta/common/system-debug", "pai/vwx0.0.1-beta/common/global_config-debug", "pai/vwx0.0.1-beta/common/I_APP-debug", "pai/vwx0.0.1-beta/ui/m_alert/view-debug" ], function(require, exports, module) {
    //基础框架
    var $ = require("$-debug");
    var page_control = require("pai/vwx0.0.1-beta/frame/page_control-debug");
    var View = require("pai/vwx0.0.1-beta/common/view-debug");
    var utility = require("pai/vwx0.0.1-beta/common/utility-debug");
    var templateHelpers = require("pai/vwx0.0.1-beta/common/template-helpers-debug");
    var Scroll = require("pai/vwx0.0.1-beta/common/scroll-debug");
    var footer = require("pai/vwx0.0.1-beta/widget/footer/index-debug");
    var m_alert = require("pai/vwx0.0.1-beta/ui/m_alert/view-debug");
    var I_App = require("pai/vwx0.0.1-beta/common/I_APP-debug");
    var system = require("pai/vwx0.0.1-beta/common/system-debug");
    //当前页引用
    var current_main_template = require("pai/vwx0.0.1-beta/account/login_tips/tpl/main-debug.handlebars");
    var current_view = View.extend({
        attrs: {
            template: current_main_template
        },
        events: {
            swiperight: function() {
                page_control.back();
            },
            "tap [data-role=page-back]": function(ev) {
                var self = this;
                page_control.back();
            },
            "tap [data-role=btn-role-camera]": function(ev) {
                var self = this;
                page_control.back();
            },
            "tap [data-role=btn-role-down-app]": function(ev) {
                var self = this;
                window.location.href = "http://app.yueus.com/";
            }
        },
        /**
         * 安装事件
         * @private
         */
        setup_events: function() {
            var self = this;
            // console.log( self.model.toJSON() );
            // console.log( self.model.get("param_a") );
            self.model.on("before:fetch", function(response, xhr) {
                m_alert.show("加载中...", "loading");
            }).on("success:fetch", function(response, xhr) {
                self.render_html(response, xhr);
            }).on("error:fetch", function(response, xhr) {
                m_alert.show("网络异常", "error", {
                    delay: 1e3
                });
            }).on("complete:fetch", function(xhr, status) {});
            //当前view 操作
            self.on("update_list", function(response, xhr) {
                // 区分当前对象
                if (!self.view_scroll_obj) {
                    self._setup_scroll();
                }
                self.view_scroll_obj.refresh();
                // 重置渲染队列
                self._render_queue = [];
            });
        },
        /**
         * 视图初始化入口
         */
        setup: function() {
            var self = this;
            // 渲染队列
            self._render_queue = [];
            // 配置交互对象
            self.$container = self.$("[data-role=container]");
            // 滚动容器
            // 安装事件
            self.setup_events();
            // 安装滚动条
            self._setup_scroll();
        },
        /**
         * 渲染模板
         * @param response
         * @param options
         * @private
         */
        render_html: function(response, xhr) {
            var self = this;
            var render_queue = self._render_queue;
            self.trigger("update_list", response, xhr);
        },
        render_after: function() {
            var self = this;
        },
        /**
         * 安装滚动条
         * @private
         */
        _setup_scroll: function() {
            var self = this;
            var view_scroll_obj = Scroll(self.$container, {
                is_hide_dropdown: true
            });
            self.view_scroll_obj = view_scroll_obj;
        },
        /**
         * 安装底部导航
         * @private
         */
        _setup_footer: function() {
            var self = this;
            var footer_obj = new footer({
                // 元素插入位置
                parentNode: self.$el,
                // 模板参数对象
                templateModel: {
                    // 高亮设置参数
                    is_model_pai: true
                }
            }).render();
        },
        _reset: function() {
            var self = this;
        },
        _add_one: function(model) {
            var self = this;
            // self._render_queue.push(model.toJSON());
            return self;
        },
        render: function() {
            var self = this;
            // 调用渲染函数
            View.prototype.render.apply(self);
            self.trigger("render");
            self.trigger("update_list");
            return self;
        }
    });
    module.exports = current_view;
});

define("pai/vwx0.0.1-beta/account/login_tips/tpl/main-debug.handlebars", [ "utility/handlebars/1.3.0/runtime-debug" ], function(require, exports, module) {
    var Handlebars = require("utility/handlebars/1.3.0/runtime-debug");
    var template = Handlebars.template;
    module.exports = template(function(Handlebars, depth0, helpers, partials, data) {
        this.compilerInfo = [ 4, ">= 1.0.0" ];
        helpers = helpers || {};
        for (var key in Handlebars.helpers) {
            helpers[key] = helpers[key] || Handlebars.helpers[key];
        }
        data = data || {};
        return '<main role="main" class="location ">\r\n\r\n    <header class="nav-header mine-edit-nav-header">\r\n        <div class="left-button-wrap" data-role="page-back">\r\n            <a><i class="icon icon-back"></i></a>\r\n        </div>\r\n\r\n        <h3 class="title">登陆提示</h3>\r\n        \r\n        <div class="right-button-wrap">\r\n            <!--<button class="ui-button ui-button-dark ui-button-size-default" data-role="save" disabled="disabled">保存</button>-->\r\n        </div>\r\n    </header>\r\n\r\n    <div data-role="container" class="content-body"  >\r\n\r\n            <div>\r\n                <div class="login-tips-page">\r\n                    <div class="box1">抱歉</div>\r\n                    <div class="box2">微信约拍系统暂不支持模特登陆</div>\r\n                    <div class="box3">\r\n                        <button class="ui-button ui-button-primary ui-button-size-middle ui-button-block " data-role="btn-role-down-app">\r\n                            <span class="ui-button-content">下载APP</span>\r\n                        </button>\r\n                    </div>\r\n                    <div class="box4" data-role="btn-role-camera">\r\n                        使用摄影师账号登录\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n    </div>\r\n\r\n</main>';
    });
});

/**
 * 基础页面框架
 * 汤圆
 * @param  {[type]} require
 * @param  {[type]} exports
 * @param  {[type]} module
 * @return {[type]}
 */
define("pai/vwx0.0.1-beta/account/login_tips/model-debug", [ "pai/vwx0.0.1-beta/common/global_config-debug", "utility/backbone/1.1.2/backbone-debug" ], function(require, exports, module) {
    //基础框架
    var global_config = require("pai/vwx0.0.1-beta/common/global_config-debug");
    var Backbone = require("utility/backbone/1.1.2/backbone-debug");
    module.exports = Backbone.Model.extend({
        // idAttribute : 'location_id',
        "default": {},
        /**
         * 安装事件
         * @private
         */
        setup_events: function() {},
        parse: function(response) {
            if (response.result_data) {
                return response.result_data;
            }
            return response;
        },
        // 初始化，传递参数
        initialize: function(options) {
            var self = this;
            self.setup_events();
        },
        //获取数据请求
        get_list: function() {
            var self = this;
            self.fetch({
                url: self.url,
                data: {},
                cache: false,
                beforeSend: function(xhr, options) {
                    self.trigger("before:fetch", xhr, options);
                },
                success: function(collection, response, options) {
                    self.trigger("success:fetch", response, options);
                },
                error: function(collection, response, options) {
                    self.trigger("error:fetch", response, options);
                },
                complete: function(xhr, status) {
                    self.trigger("complete:fetch", xhr, status);
                }
            });
        }
    });
});
