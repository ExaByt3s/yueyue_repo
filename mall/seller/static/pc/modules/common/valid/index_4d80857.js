define("common/valid/index",function(require,exports,module){function ValueValid(e){this.containNode=e,this.validNodes=$(this.containNode).find("[valid-rule]"),this.checkList=[],this.checkListNull=[],this.checkListPass=[],this.txs=function(e,r){return ValueValid.prototype.valid(e,r)}}return ValueValid.prototype.freshNodes=function(){this.validNodes=$(this.containNode).find("[valid-rule]")},ValueValid.prototype.checkValid=function(){function e(e){var r=$(e[0].node);r.attr("valid-errorAlert")&&""!=$.trim(r.attr("valid-errorAlert"))?alert(r.attr("valid-errorAlert")):r.trigger("validError")}this.checkList=[],this.checkListNull=[],this.checkListPass=[];for(var r=0;r<this.validNodes.length;r++){var t=ValueValid.prototype.result(this.validNodes[r]);this.checkList.push({node:this.validNodes[r],status:t}),t?this.checkListPass.push({node:this.validNodes[r],status:t}):this.checkListNull.push({node:this.validNodes[r],status:t})}return this.checkListNull.length>0&&e(this.checkListNull),{checkList:this.checkList,checkListNull:this.checkListNull,checkListPass:this.checkListPass,isPass:0==this.checkListNull.length?!0:!1}},ValueValid.prototype.result=function(e){function r(){a.attr("valid-emptyAlert")&&""!=$.trim(a.attr("valid-emptyAlert"))?alert(a.attr("valid-emptyAlert")):a.trigger("onEmpty")}function t(){throw"no expression"}var a=$(e);return""==$.trim(a.val())&&r(),a.attr("valid-rule")||""!=$.trim(a.attr("valid-rule"))?ValueValid.prototype.valid($.trim(a.val()),$.trim(a.attr("valid-rule"))):void t()},ValueValid.prototype.pushfunctions=function(e){function r(e,r){r.ValidClick&&e.on("click",r.ValidClick),r.ValidBlur&&e.on("blur",r.ValidBlur),r.ValidEmpty&&e.on("onEmpty",r.ValidEmpty),r.ValidError&&e.on("validError",r.ValidError)}for(var t=0;t<this.validNodes.length;t++)for(var a=$(this.validNodes[t]),i=parseInt(a.attr("valid-index")),l=0;l<e.length;l++)i===parseInt(e[l].index)&&r(a,e[l])},ValueValid.prototype.valid=function(val,exp){var type=exp.slice(0,2),min=parseInt(exp.slice(2,exp.indexOf("-"))),max=parseInt(exp.slice(exp.indexOf("-")+1,exp.length));if(isNaN(min)||isNaN(max))throw"valid-rule error";var reg_str;switch(type){case"en":return reg_str=eval("/^[a-z]{"+min+","+max+"}$/i"),reg_str.exec(val);case"zh":return reg_str=eval("/^[Ò»-ý›]{"+min+","+max+"}$/gm"),reg_str.exec(val);case"nb":return reg_str=eval("/^\\d{"+min+","+max+"}$/"),reg_str.exec(val);case"!z":return reg_str=eval("/^[1-9]\\d{"+(min-1)+","+(max-1)+"}$/"),reg_str.exec(val);case"**":return reg_str=eval("/^[\\s|\\S]{"+min+","+max+"}$/"),reg_str.exec(val);case"pw":return reg_str=eval("/^\\w{"+min+","+max+"}$/"),reg_str.exec(val);case"ph":return reg_str=eval("/^\\d{"+min+","+max+"}$/"),reg_str.exec(val);case"ma":return reg_str=eval("/\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*/"),reg_str.exec(val);case"ur":break;case"id":return reg_str=eval("/^([0-9]{17}[0-9xX]{1})|([0-9]{15})$/"),reg_str.exec(val);case"fl":return reg_str=eval("/^[0-9]{"+min+","+max+"}[\\.]\\d{1,2}$/"),reg_str.exec(val);case"pn":return reg_str=/[.]{1}/,reg_str=eval(reg_str.exec(val)?"/^\\d{"+min+","+max+"}[\\.]\\d{1,2}$/":"/^\\d{"+min+","+max+"}$/"),reg_str.exec(val);case"an":return reg_str=/[.]{1}/,reg_str=eval(reg_str.exec(val)?"/^\\d{"+min+","+max+"}[\\.]\\d{1,2}$/":"/^[1-9]\\d{"+(min-1)+","+(max-1)+"}$/"),reg_str.exec(val);case"!s":return reg_str=eval("/^[^.~!@#$%\\^\\+\\*&\\/?\\|:\\.{}()';=\"]{"+min+","+max+"}$/"),reg_str.exec(val);case"zp":return val>=0?(reg_str=/[.]{1}/,reg_str=eval(reg_str.exec(val)?"/^\\d{"+min+","+max+"}[\\.]\\d{1,2}$/":"/^\\d{"+min+","+max+"}$/"),reg_str.exec(val)):null;case"ze":return val>0?(reg_str=/[.]{1}/,reg_str.exec(val)?null:(reg_str=eval("/^\\d{"+min+","+max+"}$/"),reg_str.exec(val))):null;case"zi":return val>=0?(reg_str=/[.]{1}/,reg_str.exec(val)?null:(reg_str=eval("/^\\d{"+min+","+max+"}$/"),reg_str.exec(val))):null}},ValueValid});